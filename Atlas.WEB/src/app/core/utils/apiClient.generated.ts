/* tslint:disable */
/* eslint-disable */
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.7.0.0 (NJsonSchema v10.1.24.0 (Newtonsoft.Json v12.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------
// ReSharper disable InconsistentNaming

import { environment } from 'src/environments/environment';
import { mergeMap as _observableMergeMap, catchError as _observableCatch } from 'rxjs/operators';
import { Observable, throwError as _observableThrow, of as _observableOf } from 'rxjs';
import { Injectable, Inject, Optional, InjectionToken } from '@angular/core';
import { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';

export const API_BASE_URL = new InjectionToken<string>('API_BASE_URL');

export class ApiClientBase {
  baseApiUrl: string = environment.backend.baseURL;

  protected transformOptions(options: RequestInit) {
    return Promise.resolve(options);
  }

  protected transformResult(url: string, response: Response, processor: (response: Response) => any) {
    return processor(response);
  }

  protected getBaseUrl(defaultUrl: string, baseUrl?: string) {
    return this.baseApiUrl;
  }
}

@Injectable({
    providedIn: 'root'
})
export class AuthService extends ApiClientBase {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {
        super();
        this.http = http;
        this.baseUrl = baseUrl ? baseUrl : this.getBaseUrl("https://localhost:5001");
    }

    listUsers(): Observable<UserDTO[]> {
        let url_ = this.baseUrl + "/api/Auth/ListUsers";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processListUsers(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processListUsers(<any>response_);
                } catch (e) {
                    return <Observable<UserDTO[]>><any>_observableThrow(e);
                }
            } else
                return <Observable<UserDTO[]>><any>_observableThrow(response_);
        }));
    }

    protected processListUsers(response: HttpResponseBase): Observable<UserDTO[]> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            if (Array.isArray(resultData200)) {
                result200 = [] as any;
                for (let item of resultData200)
                    result200!.push(UserDTO.fromJS(item));
            }
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<UserDTO[]>(<any>null);
    }

    listRoles(): Observable<PermissionDTO[]> {
        let url_ = this.baseUrl + "/api/Auth/ListRoles";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processListRoles(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processListRoles(<any>response_);
                } catch (e) {
                    return <Observable<PermissionDTO[]>><any>_observableThrow(e);
                }
            } else
                return <Observable<PermissionDTO[]>><any>_observableThrow(response_);
        }));
    }

    protected processListRoles(response: HttpResponseBase): Observable<PermissionDTO[]> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            if (Array.isArray(resultData200)) {
                result200 = [] as any;
                for (let item of resultData200)
                    result200!.push(PermissionDTO.fromJS(item));
            }
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<PermissionDTO[]>(<any>null);
    }

    getUserRoles(username: string | null): Observable<PermissionDTO[]> {
        let url_ = this.baseUrl + "/api/Auth/GetUserRoles/{username}";
        if (username === undefined || username === null)
            throw new Error("The parameter 'username' must be defined.");
        url_ = url_.replace("{username}", encodeURIComponent("" + username));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetUserRoles(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetUserRoles(<any>response_);
                } catch (e) {
                    return <Observable<PermissionDTO[]>><any>_observableThrow(e);
                }
            } else
                return <Observable<PermissionDTO[]>><any>_observableThrow(response_);
        }));
    }

    protected processGetUserRoles(response: HttpResponseBase): Observable<PermissionDTO[]> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            if (Array.isArray(resultData200)) {
                result200 = [] as any;
                for (let item of resultData200)
                    result200!.push(PermissionDTO.fromJS(item));
            }
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<PermissionDTO[]>(<any>null);
    }

    resetPassword(username: string | null): Observable<FileResponse> {
        let url_ = this.baseUrl + "/api/Auth/ResetPassword/{Username}";
        if (username === undefined || username === null)
            throw new Error("The parameter 'username' must be defined.");
        url_ = url_.replace("{Username}", encodeURIComponent("" + username));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/octet-stream"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processResetPassword(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processResetPassword(<any>response_);
                } catch (e) {
                    return <Observable<FileResponse>><any>_observableThrow(e);
                }
            } else
                return <Observable<FileResponse>><any>_observableThrow(response_);
        }));
    }

    protected processResetPassword(response: HttpResponseBase): Observable<FileResponse> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200 || status === 206) {
            const contentDisposition = response.headers ? response.headers.get("content-disposition") : undefined;
            const fileNameMatch = contentDisposition ? /filename="?([^"]*?)"?(;|$)/g.exec(contentDisposition) : undefined;
            const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;
            return _observableOf({ fileName: fileName, data: <any>responseBlob, status: status, headers: _headers });
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<FileResponse>(<any>null);
    }

    register(user: RegisterUserCommand): Observable<string> {
        let url_ = this.baseUrl + "/api/Auth/register";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(user);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processRegister(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processRegister(<any>response_);
                } catch (e) {
                    return <Observable<string>><any>_observableThrow(e);
                }
            } else
                return <Observable<string>><any>_observableThrow(response_);
        }));
    }

    protected processRegister(response: HttpResponseBase): Observable<string> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = resultData200 !== undefined ? resultData200 : <any>null;
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<string>(<any>null);
    }

    login(login: LoginCommand): Observable<string> {
        let url_ = this.baseUrl + "/api/Auth/Login";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(login);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processLogin(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processLogin(<any>response_);
                } catch (e) {
                    return <Observable<string>><any>_observableThrow(e);
                }
            } else
                return <Observable<string>><any>_observableThrow(response_);
        }));
    }

    protected processLogin(response: HttpResponseBase): Observable<string> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = resultData200 !== undefined ? resultData200 : <any>null;
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<string>(<any>null);
    }

    updatePassword(updatePassword: UpdatePasswordCommand): Observable<FileResponse> {
        let url_ = this.baseUrl + "/api/Auth/UpdatePassword";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(updatePassword);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/octet-stream"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processUpdatePassword(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processUpdatePassword(<any>response_);
                } catch (e) {
                    return <Observable<FileResponse>><any>_observableThrow(e);
                }
            } else
                return <Observable<FileResponse>><any>_observableThrow(response_);
        }));
    }

    protected processUpdatePassword(response: HttpResponseBase): Observable<FileResponse> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200 || status === 206) {
            const contentDisposition = response.headers ? response.headers.get("content-disposition") : undefined;
            const fileNameMatch = contentDisposition ? /filename="?([^"]*?)"?(;|$)/g.exec(contentDisposition) : undefined;
            const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;
            return _observableOf({ fileName: fileName, data: <any>responseBlob, status: status, headers: _headers });
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<FileResponse>(<any>null);
    }
}

@Injectable({
    providedIn: 'root'
})
export class ECommerceService extends ApiClientBase {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {
        super();
        this.http = http;
        this.baseUrl = baseUrl ? baseUrl : this.getBaseUrl("https://localhost:5001");
    }

    getCupom(ambiente: string | null, id: number): Observable<PrPromocionCuponesDTO> {
        let url_ = this.baseUrl + "/api/eCommerce/Cupom/{ambiente}/{id}";
        if (ambiente === undefined || ambiente === null)
            throw new Error("The parameter 'ambiente' must be defined.");
        url_ = url_.replace("{ambiente}", encodeURIComponent("" + ambiente));
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetCupom(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetCupom(<any>response_);
                } catch (e) {
                    return <Observable<PrPromocionCuponesDTO>><any>_observableThrow(e);
                }
            } else
                return <Observable<PrPromocionCuponesDTO>><any>_observableThrow(response_);
        }));
    }

    protected processGetCupom(response: HttpResponseBase): Observable<PrPromocionCuponesDTO> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = PrPromocionCuponesDTO.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<PrPromocionCuponesDTO>(<any>null);
    }

    listCupom(ambiente: string | null): Observable<PrPromocionCuponesDTO[]> {
        let url_ = this.baseUrl + "/api/eCommerce/Cupons/{ambiente}";
        if (ambiente === undefined || ambiente === null)
            throw new Error("The parameter 'ambiente' must be defined.");
        url_ = url_.replace("{ambiente}", encodeURIComponent("" + ambiente));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processListCupom(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processListCupom(<any>response_);
                } catch (e) {
                    return <Observable<PrPromocionCuponesDTO[]>><any>_observableThrow(e);
                }
            } else
                return <Observable<PrPromocionCuponesDTO[]>><any>_observableThrow(response_);
        }));
    }

    protected processListCupom(response: HttpResponseBase): Observable<PrPromocionCuponesDTO[]> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            if (Array.isArray(resultData200)) {
                result200 = [] as any;
                for (let item of resultData200)
                    result200!.push(PrPromocionCuponesDTO.fromJS(item));
            }
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<PrPromocionCuponesDTO[]>(<any>null);
    }

    listCupomCode(ambiente: string | null, codigo: string | null): Observable<PrPromocionCuponesDTO[]> {
        let url_ = this.baseUrl + "/api/eCommerce/Cupons/{ambiente}/{codigo}";
        if (ambiente === undefined || ambiente === null)
            throw new Error("The parameter 'ambiente' must be defined.");
        url_ = url_.replace("{ambiente}", encodeURIComponent("" + ambiente));
        if (codigo === undefined || codigo === null)
            throw new Error("The parameter 'codigo' must be defined.");
        url_ = url_.replace("{codigo}", encodeURIComponent("" + codigo));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processListCupomCode(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processListCupomCode(<any>response_);
                } catch (e) {
                    return <Observable<PrPromocionCuponesDTO[]>><any>_observableThrow(e);
                }
            } else
                return <Observable<PrPromocionCuponesDTO[]>><any>_observableThrow(response_);
        }));
    }

    protected processListCupomCode(response: HttpResponseBase): Observable<PrPromocionCuponesDTO[]> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            if (Array.isArray(resultData200)) {
                result200 = [] as any;
                for (let item of resultData200)
                    result200!.push(PrPromocionCuponesDTO.fromJS(item));
            }
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<PrPromocionCuponesDTO[]>(<any>null);
    }

    updateCupom(command: CreateCupomCommand): Observable<FileResponse> {
        let url_ = this.baseUrl + "/api/eCommerce/Cupom";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/octet-stream"
            })
        };

        return this.http.request("put", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processUpdateCupom(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processUpdateCupom(<any>response_);
                } catch (e) {
                    return <Observable<FileResponse>><any>_observableThrow(e);
                }
            } else
                return <Observable<FileResponse>><any>_observableThrow(response_);
        }));
    }

    protected processUpdateCupom(response: HttpResponseBase): Observable<FileResponse> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200 || status === 206) {
            const contentDisposition = response.headers ? response.headers.get("content-disposition") : undefined;
            const fileNameMatch = contentDisposition ? /filename="?([^"]*?)"?(;|$)/g.exec(contentDisposition) : undefined;
            const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;
            return _observableOf({ fileName: fileName, data: <any>responseBlob, status: status, headers: _headers });
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<FileResponse>(<any>null);
    }

    createCupom(ambiente: string, command: CreateCupomCommand): Observable<PrPromocionCupones> {
        let url_ = this.baseUrl + "/api/eCommerce/Cupom/{ambiente}";
        if (ambiente === undefined || ambiente === null)
            throw new Error("The parameter 'ambiente' must be defined.");
        url_ = url_.replace("{ambiente}", encodeURIComponent("" + ambiente));
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processCreateCupom(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processCreateCupom(<any>response_);
                } catch (e) {
                    return <Observable<PrPromocionCupones>><any>_observableThrow(e);
                }
            } else
                return <Observable<PrPromocionCupones>><any>_observableThrow(response_);
        }));
    }

    protected processCreateCupom(response: HttpResponseBase): Observable<PrPromocionCupones> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = PrPromocionCupones.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<PrPromocionCupones>(<any>null);
    }

    getPareport(ambientes: string | null | undefined, inicio: string | null | undefined, fim: string | null | undefined, page: number | null | undefined, pageSize: number | null | undefined): Observable<PareportAtlas[]> {
        let url_ = this.baseUrl + "/api/eCommerce/Pareport?";
        if (ambientes !== undefined && ambientes !== null)
            url_ += "Ambientes=" + encodeURIComponent("" + ambientes) + "&";
        if (inicio !== undefined && inicio !== null)
            url_ += "inicio=" + encodeURIComponent("" + inicio) + "&";
        if (fim !== undefined && fim !== null)
            url_ += "fim=" + encodeURIComponent("" + fim) + "&";
        if (page !== undefined && page !== null)
            url_ += "page=" + encodeURIComponent("" + page) + "&";
        if (pageSize !== undefined && pageSize !== null)
            url_ += "pageSize=" + encodeURIComponent("" + pageSize) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetPareport(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetPareport(<any>response_);
                } catch (e) {
                    return <Observable<PareportAtlas[]>><any>_observableThrow(e);
                }
            } else
                return <Observable<PareportAtlas[]>><any>_observableThrow(response_);
        }));
    }

    protected processGetPareport(response: HttpResponseBase): Observable<PareportAtlas[]> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            if (Array.isArray(resultData200)) {
                result200 = [] as any;
                for (let item of resultData200)
                    result200!.push(PareportAtlas.fromJS(item));
            }
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<PareportAtlas[]>(<any>null);
    }

    getCadastroPessoa(bilhete: string | null): Observable<PePersonaFisica> {
        let url_ = this.baseUrl + "/api/eCommerce/CadastroPessoa/{bilhete}";
        if (bilhete === undefined || bilhete === null)
            throw new Error("The parameter 'bilhete' must be defined.");
        url_ = url_.replace("{bilhete}", encodeURIComponent("" + bilhete));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetCadastroPessoa(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetCadastroPessoa(<any>response_);
                } catch (e) {
                    return <Observable<PePersonaFisica>><any>_observableThrow(e);
                }
            } else
                return <Observable<PePersonaFisica>><any>_observableThrow(response_);
        }));
    }

    protected processGetCadastroPessoa(response: HttpResponseBase): Observable<PePersonaFisica> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = PePersonaFisica.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<PePersonaFisica>(<any>null);
    }

    updateCadastroPessoa(bilhete: string, command: UpdateCadastroPessoaCommand): Observable<FileResponse> {
        let url_ = this.baseUrl + "/api/eCommerce/CadastroPessoa/{bilhete}";
        if (bilhete === undefined || bilhete === null)
            throw new Error("The parameter 'bilhete' must be defined.");
        url_ = url_.replace("{bilhete}", encodeURIComponent("" + bilhete));
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/octet-stream"
            })
        };

        return this.http.request("put", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processUpdateCadastroPessoa(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processUpdateCadastroPessoa(<any>response_);
                } catch (e) {
                    return <Observable<FileResponse>><any>_observableThrow(e);
                }
            } else
                return <Observable<FileResponse>><any>_observableThrow(response_);
        }));
    }

    protected processUpdateCadastroPessoa(response: HttpResponseBase): Observable<FileResponse> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200 || status === 206) {
            const contentDisposition = response.headers ? response.headers.get("content-disposition") : undefined;
            const fileNameMatch = contentDisposition ? /filename="?([^"]*?)"?(;|$)/g.exec(contentDisposition) : undefined;
            const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;
            return _observableOf({ fileName: fileName, data: <any>responseBlob, status: status, headers: _headers });
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<FileResponse>(<any>null);
    }

    getBilhete(nrVoucher: string | null): Observable<BilheteDTO> {
        let url_ = this.baseUrl + "/api/eCommerce/Bilhete/{nrVoucher}";
        if (nrVoucher === undefined || nrVoucher === null)
            throw new Error("The parameter 'nrVoucher' must be defined.");
        url_ = url_.replace("{nrVoucher}", encodeURIComponent("" + nrVoucher));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetBilhete(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetBilhete(<any>response_);
                } catch (e) {
                    return <Observable<BilheteDTO>><any>_observableThrow(e);
                }
            } else
                return <Observable<BilheteDTO>><any>_observableThrow(response_);
        }));
    }

    protected processGetBilhete(response: HttpResponseBase): Observable<BilheteDTO> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = BilheteDTO.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<BilheteDTO>(<any>null);
    }

    cancelVoucher(nrVoucher: string | null): Observable<FileResponse> {
        let url_ = this.baseUrl + "/api/eCommerce/CancelarBilhete/{nrVoucher}";
        if (nrVoucher === undefined || nrVoucher === null)
            throw new Error("The parameter 'nrVoucher' must be defined.");
        url_ = url_.replace("{nrVoucher}", encodeURIComponent("" + nrVoucher));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/octet-stream"
            })
        };

        return this.http.request("delete", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processCancelVoucher(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processCancelVoucher(<any>response_);
                } catch (e) {
                    return <Observable<FileResponse>><any>_observableThrow(e);
                }
            } else
                return <Observable<FileResponse>><any>_observableThrow(response_);
        }));
    }

    protected processCancelVoucher(response: HttpResponseBase): Observable<FileResponse> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200 || status === 206) {
            const contentDisposition = response.headers ? response.headers.get("content-disposition") : undefined;
            const fileNameMatch = contentDisposition ? /filename="?([^"]*?)"?(;|$)/g.exec(contentDisposition) : undefined;
            const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;
            return _observableOf({ fileName: fileName, data: <any>responseBlob, status: status, headers: _headers });
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<FileResponse>(<any>null);
    }

    cancelVoucherRetroact(nrVoucher: string | null, data: string | null): Observable<FileResponse> {
        let url_ = this.baseUrl + "/api/eCommerce/CancelarBilheteRetroativo/{nrVoucher}/{data}";
        if (nrVoucher === undefined || nrVoucher === null)
            throw new Error("The parameter 'nrVoucher' must be defined.");
        url_ = url_.replace("{nrVoucher}", encodeURIComponent("" + nrVoucher));
        if (data === undefined || data === null)
            throw new Error("The parameter 'data' must be defined.");
        url_ = url_.replace("{data}", encodeURIComponent("" + data));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/octet-stream"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processCancelVoucherRetroact(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processCancelVoucherRetroact(<any>response_);
                } catch (e) {
                    return <Observable<FileResponse>><any>_observableThrow(e);
                }
            } else
                return <Observable<FileResponse>><any>_observableThrow(response_);
        }));
    }

    protected processCancelVoucherRetroact(response: HttpResponseBase): Observable<FileResponse> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200 || status === 206) {
            const contentDisposition = response.headers ? response.headers.get("content-disposition") : undefined;
            const fileNameMatch = contentDisposition ? /filename="?([^"]*?)"?(;|$)/g.exec(contentDisposition) : undefined;
            const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;
            return _observableOf({ fileName: fileName, data: <any>responseBlob, status: status, headers: _headers });
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<FileResponse>(<any>null);
    }

    cancelVoucherRetroactSales(nrVoucher: string | null, data: string | null): Observable<FileResponse> {
        let url_ = this.baseUrl + "/api/eCommerce/CancelarVendaRetroativo/{nrVoucher}/{data}";
        if (nrVoucher === undefined || nrVoucher === null)
            throw new Error("The parameter 'nrVoucher' must be defined.");
        url_ = url_.replace("{nrVoucher}", encodeURIComponent("" + nrVoucher));
        if (data === undefined || data === null)
            throw new Error("The parameter 'data' must be defined.");
        url_ = url_.replace("{data}", encodeURIComponent("" + data));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/octet-stream"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processCancelVoucherRetroactSales(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processCancelVoucherRetroactSales(<any>response_);
                } catch (e) {
                    return <Observable<FileResponse>><any>_observableThrow(e);
                }
            } else
                return <Observable<FileResponse>><any>_observableThrow(response_);
        }));
    }

    protected processCancelVoucherRetroactSales(response: HttpResponseBase): Observable<FileResponse> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200 || status === 206) {
            const contentDisposition = response.headers ? response.headers.get("content-disposition") : undefined;
            const fileNameMatch = contentDisposition ? /filename="?([^"]*?)"?(;|$)/g.exec(contentDisposition) : undefined;
            const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;
            return _observableOf({ fileName: fileName, data: <any>responseBlob, status: status, headers: _headers });
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<FileResponse>(<any>null);
    }

    cancelSale(nrVoucher: string | null): Observable<FileResponse> {
        let url_ = this.baseUrl + "/api/eCommerce/CancelarVenda/{nrVoucher}";
        if (nrVoucher === undefined || nrVoucher === null)
            throw new Error("The parameter 'nrVoucher' must be defined.");
        url_ = url_.replace("{nrVoucher}", encodeURIComponent("" + nrVoucher));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/octet-stream"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processCancelSale(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processCancelSale(<any>response_);
                } catch (e) {
                    return <Observable<FileResponse>><any>_observableThrow(e);
                }
            } else
                return <Observable<FileResponse>><any>_observableThrow(response_);
        }));
    }

    protected processCancelSale(response: HttpResponseBase): Observable<FileResponse> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200 || status === 206) {
            const contentDisposition = response.headers ? response.headers.get("content-disposition") : undefined;
            const fileNameMatch = contentDisposition ? /filename="?([^"]*?)"?(;|$)/g.exec(contentDisposition) : undefined;
            const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;
            return _observableOf({ fileName: fileName, data: <any>responseBlob, status: status, headers: _headers });
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<FileResponse>(<any>null);
    }
}

@Injectable({
    providedIn: 'root'
})
export class OuvidoriaService extends ApiClientBase {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {
        super();
        this.http = http;
        this.baseUrl = baseUrl ? baseUrl : this.getBaseUrl("https://localhost:5001");
    }

    listMotivo(): Observable<MotivoDTO[]> {
        let url_ = this.baseUrl + "/api/Ouvidoria/Motivo";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processListMotivo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processListMotivo(<any>response_);
                } catch (e) {
                    return <Observable<MotivoDTO[]>><any>_observableThrow(e);
                }
            } else
                return <Observable<MotivoDTO[]>><any>_observableThrow(response_);
        }));
    }

    protected processListMotivo(response: HttpResponseBase): Observable<MotivoDTO[]> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            if (Array.isArray(resultData200)) {
                result200 = [] as any;
                for (let item of resultData200)
                    result200!.push(MotivoDTO.fromJS(item));
            }
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<MotivoDTO[]>(<any>null);
    }

    putMotivo(motivo: MotivoDTO): Observable<FileResponse> {
        let url_ = this.baseUrl + "/api/Ouvidoria/Motivo";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(motivo);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/octet-stream"
            })
        };

        return this.http.request("put", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processPutMotivo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processPutMotivo(<any>response_);
                } catch (e) {
                    return <Observable<FileResponse>><any>_observableThrow(e);
                }
            } else
                return <Observable<FileResponse>><any>_observableThrow(response_);
        }));
    }

    protected processPutMotivo(response: HttpResponseBase): Observable<FileResponse> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200 || status === 206) {
            const contentDisposition = response.headers ? response.headers.get("content-disposition") : undefined;
            const fileNameMatch = contentDisposition ? /filename="?([^"]*?)"?(;|$)/g.exec(contentDisposition) : undefined;
            const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;
            return _observableOf({ fileName: fileName, data: <any>responseBlob, status: status, headers: _headers });
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<FileResponse>(<any>null);
    }

    postMotivo(motivo: MotivoDTO): Observable<number> {
        let url_ = this.baseUrl + "/api/Ouvidoria/Motivo";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(motivo);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processPostMotivo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processPostMotivo(<any>response_);
                } catch (e) {
                    return <Observable<number>><any>_observableThrow(e);
                }
            } else
                return <Observable<number>><any>_observableThrow(response_);
        }));
    }

    protected processPostMotivo(response: HttpResponseBase): Observable<number> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = resultData200 !== undefined ? resultData200 : <any>null;
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<number>(<any>null);
    }

    getMotivo(id: number): Observable<MotivoDTO> {
        let url_ = this.baseUrl + "/api/Ouvidoria/Motivo/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetMotivo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetMotivo(<any>response_);
                } catch (e) {
                    return <Observable<MotivoDTO>><any>_observableThrow(e);
                }
            } else
                return <Observable<MotivoDTO>><any>_observableThrow(response_);
        }));
    }

    protected processGetMotivo(response: HttpResponseBase): Observable<MotivoDTO> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = MotivoDTO.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<MotivoDTO>(<any>null);
    }

    deleteMotivo(id: number): Observable<FileResponse> {
        let url_ = this.baseUrl + "/api/Ouvidoria/Motivo/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/octet-stream"
            })
        };

        return this.http.request("delete", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processDeleteMotivo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processDeleteMotivo(<any>response_);
                } catch (e) {
                    return <Observable<FileResponse>><any>_observableThrow(e);
                }
            } else
                return <Observable<FileResponse>><any>_observableThrow(response_);
        }));
    }

    protected processDeleteMotivo(response: HttpResponseBase): Observable<FileResponse> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200 || status === 206) {
            const contentDisposition = response.headers ? response.headers.get("content-disposition") : undefined;
            const fileNameMatch = contentDisposition ? /filename="?([^"]*?)"?(;|$)/g.exec(contentDisposition) : undefined;
            const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;
            return _observableOf({ fileName: fileName, data: <any>responseBlob, status: status, headers: _headers });
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<FileResponse>(<any>null);
    }

    listCanalVenda(): Observable<CanalVendaDTO[]> {
        let url_ = this.baseUrl + "/api/Ouvidoria/CanalVenda";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processListCanalVenda(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processListCanalVenda(<any>response_);
                } catch (e) {
                    return <Observable<CanalVendaDTO[]>><any>_observableThrow(e);
                }
            } else
                return <Observable<CanalVendaDTO[]>><any>_observableThrow(response_);
        }));
    }

    protected processListCanalVenda(response: HttpResponseBase): Observable<CanalVendaDTO[]> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            if (Array.isArray(resultData200)) {
                result200 = [] as any;
                for (let item of resultData200)
                    result200!.push(CanalVendaDTO.fromJS(item));
            }
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<CanalVendaDTO[]>(<any>null);
    }

    putCanalVenda(canalVenda: CanalVendaDTO): Observable<FileResponse> {
        let url_ = this.baseUrl + "/api/Ouvidoria/CanalVenda";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(canalVenda);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/octet-stream"
            })
        };

        return this.http.request("put", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processPutCanalVenda(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processPutCanalVenda(<any>response_);
                } catch (e) {
                    return <Observable<FileResponse>><any>_observableThrow(e);
                }
            } else
                return <Observable<FileResponse>><any>_observableThrow(response_);
        }));
    }

    protected processPutCanalVenda(response: HttpResponseBase): Observable<FileResponse> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200 || status === 206) {
            const contentDisposition = response.headers ? response.headers.get("content-disposition") : undefined;
            const fileNameMatch = contentDisposition ? /filename="?([^"]*?)"?(;|$)/g.exec(contentDisposition) : undefined;
            const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;
            return _observableOf({ fileName: fileName, data: <any>responseBlob, status: status, headers: _headers });
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<FileResponse>(<any>null);
    }

    postCanalVenda(canalVenda: CanalVendaDTO): Observable<FileResponse> {
        let url_ = this.baseUrl + "/api/Ouvidoria/CanalVenda";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(canalVenda);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/octet-stream"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processPostCanalVenda(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processPostCanalVenda(<any>response_);
                } catch (e) {
                    return <Observable<FileResponse>><any>_observableThrow(e);
                }
            } else
                return <Observable<FileResponse>><any>_observableThrow(response_);
        }));
    }

    protected processPostCanalVenda(response: HttpResponseBase): Observable<FileResponse> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200 || status === 206) {
            const contentDisposition = response.headers ? response.headers.get("content-disposition") : undefined;
            const fileNameMatch = contentDisposition ? /filename="?([^"]*?)"?(;|$)/g.exec(contentDisposition) : undefined;
            const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;
            return _observableOf({ fileName: fileName, data: <any>responseBlob, status: status, headers: _headers });
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<FileResponse>(<any>null);
    }

    getCanalVenda(id: number): Observable<CanalVendaDTO> {
        let url_ = this.baseUrl + "/api/Ouvidoria/CanalVenda/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetCanalVenda(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetCanalVenda(<any>response_);
                } catch (e) {
                    return <Observable<CanalVendaDTO>><any>_observableThrow(e);
                }
            } else
                return <Observable<CanalVendaDTO>><any>_observableThrow(response_);
        }));
    }

    protected processGetCanalVenda(response: HttpResponseBase): Observable<CanalVendaDTO> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = CanalVendaDTO.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<CanalVendaDTO>(<any>null);
    }

    deleteCanalVenda(id: number): Observable<CanalVendaDTO> {
        let url_ = this.baseUrl + "/api/Ouvidoria/CanalVenda/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("delete", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processDeleteCanalVenda(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processDeleteCanalVenda(<any>response_);
                } catch (e) {
                    return <Observable<CanalVendaDTO>><any>_observableThrow(e);
                }
            } else
                return <Observable<CanalVendaDTO>><any>_observableThrow(response_);
        }));
    }

    protected processDeleteCanalVenda(response: HttpResponseBase): Observable<CanalVendaDTO> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = CanalVendaDTO.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<CanalVendaDTO>(<any>null);
    }

    listAssunto(): Observable<AssuntoDTO[]> {
        let url_ = this.baseUrl + "/api/Ouvidoria/Assunto";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processListAssunto(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processListAssunto(<any>response_);
                } catch (e) {
                    return <Observable<AssuntoDTO[]>><any>_observableThrow(e);
                }
            } else
                return <Observable<AssuntoDTO[]>><any>_observableThrow(response_);
        }));
    }

    protected processListAssunto(response: HttpResponseBase): Observable<AssuntoDTO[]> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            if (Array.isArray(resultData200)) {
                result200 = [] as any;
                for (let item of resultData200)
                    result200!.push(AssuntoDTO.fromJS(item));
            }
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<AssuntoDTO[]>(<any>null);
    }

    putAssunto(assunto: AssuntoDTO): Observable<FileResponse> {
        let url_ = this.baseUrl + "/api/Ouvidoria/Assunto";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(assunto);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/octet-stream"
            })
        };

        return this.http.request("put", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processPutAssunto(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processPutAssunto(<any>response_);
                } catch (e) {
                    return <Observable<FileResponse>><any>_observableThrow(e);
                }
            } else
                return <Observable<FileResponse>><any>_observableThrow(response_);
        }));
    }

    protected processPutAssunto(response: HttpResponseBase): Observable<FileResponse> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200 || status === 206) {
            const contentDisposition = response.headers ? response.headers.get("content-disposition") : undefined;
            const fileNameMatch = contentDisposition ? /filename="?([^"]*?)"?(;|$)/g.exec(contentDisposition) : undefined;
            const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;
            return _observableOf({ fileName: fileName, data: <any>responseBlob, status: status, headers: _headers });
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<FileResponse>(<any>null);
    }

    postAssunto(assunto: AssuntoDTO): Observable<FileResponse> {
        let url_ = this.baseUrl + "/api/Ouvidoria/Assunto";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(assunto);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/octet-stream"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processPostAssunto(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processPostAssunto(<any>response_);
                } catch (e) {
                    return <Observable<FileResponse>><any>_observableThrow(e);
                }
            } else
                return <Observable<FileResponse>><any>_observableThrow(response_);
        }));
    }

    protected processPostAssunto(response: HttpResponseBase): Observable<FileResponse> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200 || status === 206) {
            const contentDisposition = response.headers ? response.headers.get("content-disposition") : undefined;
            const fileNameMatch = contentDisposition ? /filename="?([^"]*?)"?(;|$)/g.exec(contentDisposition) : undefined;
            const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;
            return _observableOf({ fileName: fileName, data: <any>responseBlob, status: status, headers: _headers });
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<FileResponse>(<any>null);
    }

    getAssunto(id: number): Observable<AssuntoDTO> {
        let url_ = this.baseUrl + "/api/Ouvidoria/Assunto/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetAssunto(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetAssunto(<any>response_);
                } catch (e) {
                    return <Observable<AssuntoDTO>><any>_observableThrow(e);
                }
            } else
                return <Observable<AssuntoDTO>><any>_observableThrow(response_);
        }));
    }

    protected processGetAssunto(response: HttpResponseBase): Observable<AssuntoDTO> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = AssuntoDTO.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<AssuntoDTO>(<any>null);
    }

    deleteAssunto(id: number): Observable<AssuntoDTO> {
        let url_ = this.baseUrl + "/api/Ouvidoria/Assunto/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("delete", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processDeleteAssunto(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processDeleteAssunto(<any>response_);
                } catch (e) {
                    return <Observable<AssuntoDTO>><any>_observableThrow(e);
                }
            } else
                return <Observable<AssuntoDTO>><any>_observableThrow(response_);
        }));
    }

    protected processDeleteAssunto(response: HttpResponseBase): Observable<AssuntoDTO> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = AssuntoDTO.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<AssuntoDTO>(<any>null);
    }

    listCanalReclamacao(): Observable<CanalReclamacaoDTO[]> {
        let url_ = this.baseUrl + "/api/Ouvidoria/CanalReclamacao";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processListCanalReclamacao(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processListCanalReclamacao(<any>response_);
                } catch (e) {
                    return <Observable<CanalReclamacaoDTO[]>><any>_observableThrow(e);
                }
            } else
                return <Observable<CanalReclamacaoDTO[]>><any>_observableThrow(response_);
        }));
    }

    protected processListCanalReclamacao(response: HttpResponseBase): Observable<CanalReclamacaoDTO[]> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            if (Array.isArray(resultData200)) {
                result200 = [] as any;
                for (let item of resultData200)
                    result200!.push(CanalReclamacaoDTO.fromJS(item));
            }
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<CanalReclamacaoDTO[]>(<any>null);
    }

    putCanalReclamacao(canalReclamacao: CanalReclamacaoDTO): Observable<FileResponse> {
        let url_ = this.baseUrl + "/api/Ouvidoria/CanalReclamacao";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(canalReclamacao);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/octet-stream"
            })
        };

        return this.http.request("put", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processPutCanalReclamacao(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processPutCanalReclamacao(<any>response_);
                } catch (e) {
                    return <Observable<FileResponse>><any>_observableThrow(e);
                }
            } else
                return <Observable<FileResponse>><any>_observableThrow(response_);
        }));
    }

    protected processPutCanalReclamacao(response: HttpResponseBase): Observable<FileResponse> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200 || status === 206) {
            const contentDisposition = response.headers ? response.headers.get("content-disposition") : undefined;
            const fileNameMatch = contentDisposition ? /filename="?([^"]*?)"?(;|$)/g.exec(contentDisposition) : undefined;
            const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;
            return _observableOf({ fileName: fileName, data: <any>responseBlob, status: status, headers: _headers });
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<FileResponse>(<any>null);
    }

    postCanalReclamacao(canalReclamacao: CanalReclamacaoDTO): Observable<number> {
        let url_ = this.baseUrl + "/api/Ouvidoria/CanalReclamacao";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(canalReclamacao);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processPostCanalReclamacao(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processPostCanalReclamacao(<any>response_);
                } catch (e) {
                    return <Observable<number>><any>_observableThrow(e);
                }
            } else
                return <Observable<number>><any>_observableThrow(response_);
        }));
    }

    protected processPostCanalReclamacao(response: HttpResponseBase): Observable<number> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = resultData200 !== undefined ? resultData200 : <any>null;
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<number>(<any>null);
    }

    getCanalReclamacao(id: number): Observable<CanalReclamacaoDTO> {
        let url_ = this.baseUrl + "/api/Ouvidoria/CanalReclamacao/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetCanalReclamacao(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetCanalReclamacao(<any>response_);
                } catch (e) {
                    return <Observable<CanalReclamacaoDTO>><any>_observableThrow(e);
                }
            } else
                return <Observable<CanalReclamacaoDTO>><any>_observableThrow(response_);
        }));
    }

    protected processGetCanalReclamacao(response: HttpResponseBase): Observable<CanalReclamacaoDTO> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = CanalReclamacaoDTO.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<CanalReclamacaoDTO>(<any>null);
    }

    deleteCanalReclamacao(id: number): Observable<FileResponse> {
        let url_ = this.baseUrl + "/api/Ouvidoria/CanalReclamacao/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/octet-stream"
            })
        };

        return this.http.request("delete", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processDeleteCanalReclamacao(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processDeleteCanalReclamacao(<any>response_);
                } catch (e) {
                    return <Observable<FileResponse>><any>_observableThrow(e);
                }
            } else
                return <Observable<FileResponse>><any>_observableThrow(response_);
        }));
    }

    protected processDeleteCanalReclamacao(response: HttpResponseBase): Observable<FileResponse> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200 || status === 206) {
            const contentDisposition = response.headers ? response.headers.get("content-disposition") : undefined;
            const fileNameMatch = contentDisposition ? /filename="?([^"]*?)"?(;|$)/g.exec(contentDisposition) : undefined;
            const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;
            return _observableOf({ fileName: fileName, data: <any>responseBlob, status: status, headers: _headers });
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<FileResponse>(<any>null);
    }
}

@Injectable({
    providedIn: 'root'
})
export class PremiumService extends ApiClientBase {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {
        super();
        this.http = http;
        this.baseUrl = baseUrl ? baseUrl : this.getBaseUrl("https://localhost:5001");
    }

    getProposta(id: string | null): Observable<TbProposta> {
        let url_ = this.baseUrl + "/api/Premium/Proposta/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetProposta(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetProposta(<any>response_);
                } catch (e) {
                    return <Observable<TbProposta>><any>_observableThrow(e);
                }
            } else
                return <Observable<TbProposta>><any>_observableThrow(response_);
        }));
    }

    protected processGetProposta(response: HttpResponseBase): Observable<TbProposta> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = TbProposta.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<TbProposta>(<any>null);
    }
}

export class UserDTO implements IUserDTO {
    username?: string | undefined;
    email?: string | undefined;
    roles?: Permission[] | undefined;

    constructor(data?: IUserDTO) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.username = _data["username"];
            this.email = _data["email"];
            if (Array.isArray(_data["roles"])) {
                this.roles = [] as any;
                for (let item of _data["roles"])
                    this.roles!.push(Permission.fromJS(item));
            }
        }
    }

    static fromJS(data: any): UserDTO {
        data = typeof data === 'object' ? data : {};
        let result = new UserDTO();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["username"] = this.username;
        data["email"] = this.email;
        if (Array.isArray(this.roles)) {
            data["roles"] = [];
            for (let item of this.roles)
                data["roles"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IUserDTO {
    username?: string | undefined;
    email?: string | undefined;
    roles?: Permission[] | undefined;
}

export class Permission implements IPermission {
    id?: PermissionEnum;
    name?: string | undefined;
    userPermissions?: UserPermission[] | undefined;

    constructor(data?: IPermission) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.name = _data["name"];
            if (Array.isArray(_data["userPermissions"])) {
                this.userPermissions = [] as any;
                for (let item of _data["userPermissions"])
                    this.userPermissions!.push(UserPermission.fromJS(item));
            }
        }
    }

    static fromJS(data: any): Permission {
        data = typeof data === 'object' ? data : {};
        let result = new Permission();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["name"] = this.name;
        if (Array.isArray(this.userPermissions)) {
            data["userPermissions"] = [];
            for (let item of this.userPermissions)
                data["userPermissions"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPermission {
    id?: PermissionEnum;
    name?: string | undefined;
    userPermissions?: UserPermission[] | undefined;
}

export enum PermissionEnum {
    Cotacao_User = 0,
    Cotacao_Cotador = 1,
    Cotacao_Admin = 2,
    PREMIUM_User = 3,
    PREMIUM_Moderator = 4,
    PREMIUM_Admin = 5,
    Cupom_Leitura = 6,
    Cupom_Escrita = 7,
    Cupom_Admin = 8,
    CancelamentoBilhete_Leitura = 9,
    CancelamentoBilhete_Escrita = 10,
    CancelamentoBilhete_Admin = 11,
    CadastroPessoa_Leitura = 12,
    CadastroPessoa_Escrita = 13,
    CadastroPessoa_Admin = 14,
    Atlas_Admin = 15,
    Produto_Leitura = 16,
    Produto_Escrita = 17,
    Produto_Admin = 18,
    VendaLote_Admin = 19,
    Comissao_Leitura = 20,
    Comissao_Escrita = 21,
    Comissao_Admin = 22,
    Ouvidoria = 23,
    COVID = 24,
    LGPD = 25,
    Pareport = 26,
}

export class UserPermission implements IUserPermission {
    userUsername?: string | undefined;
    user?: User | undefined;
    permissionId?: PermissionEnum;
    permission?: Permission | undefined;

    constructor(data?: IUserPermission) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.userUsername = _data["userUsername"];
            this.user = _data["user"] ? User.fromJS(_data["user"]) : <any>undefined;
            this.permissionId = _data["permissionId"];
            this.permission = _data["permission"] ? Permission.fromJS(_data["permission"]) : <any>undefined;
        }
    }

    static fromJS(data: any): UserPermission {
        data = typeof data === 'object' ? data : {};
        let result = new UserPermission();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["userUsername"] = this.userUsername;
        data["user"] = this.user ? this.user.toJSON() : <any>undefined;
        data["permissionId"] = this.permissionId;
        data["permission"] = this.permission ? this.permission.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IUserPermission {
    userUsername?: string | undefined;
    user?: User | undefined;
    permissionId?: PermissionEnum;
    permission?: Permission | undefined;
}

export abstract class AuditableEntity implements IAuditableEntity {
    createdBy?: string | undefined;
    created?: Date;
    lastModifiedBy?: string | undefined;
    lastModified?: Date | undefined;

    constructor(data?: IAuditableEntity) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.createdBy = _data["createdBy"];
            this.created = _data["created"] ? new Date(_data["created"].toString()) : <any>undefined;
            this.lastModifiedBy = _data["lastModifiedBy"];
            this.lastModified = _data["lastModified"] ? new Date(_data["lastModified"].toString()) : <any>undefined;
        }
    }

    static fromJS(data: any): AuditableEntity {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'AuditableEntity' cannot be instantiated.");
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["createdBy"] = this.createdBy;
        data["created"] = this.created ? this.created.toISOString() : <any>undefined;
        data["lastModifiedBy"] = this.lastModifiedBy;
        data["lastModified"] = this.lastModified ? this.lastModified.toISOString() : <any>undefined;
        return data; 
    }
}

export interface IAuditableEntity {
    createdBy?: string | undefined;
    created?: Date;
    lastModifiedBy?: string | undefined;
    lastModified?: Date | undefined;
}

export class User extends AuditableEntity implements IUser {
    username?: string | undefined;
    password?: string | undefined;
    email?: string | undefined;
    ativo?: string;
    userPermissions?: UserPermission[] | undefined;

    constructor(data?: IUser) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.username = _data["username"];
            this.password = _data["password"];
            this.email = _data["email"];
            this.ativo = _data["ativo"];
            if (Array.isArray(_data["userPermissions"])) {
                this.userPermissions = [] as any;
                for (let item of _data["userPermissions"])
                    this.userPermissions!.push(UserPermission.fromJS(item));
            }
        }
    }

    static fromJS(data: any): User {
        data = typeof data === 'object' ? data : {};
        let result = new User();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["username"] = this.username;
        data["password"] = this.password;
        data["email"] = this.email;
        data["ativo"] = this.ativo;
        if (Array.isArray(this.userPermissions)) {
            data["userPermissions"] = [];
            for (let item of this.userPermissions)
                data["userPermissions"].push(item.toJSON());
        }
        super.toJSON(data);
        return data; 
    }
}

export interface IUser extends IAuditableEntity {
    username?: string | undefined;
    password?: string | undefined;
    email?: string | undefined;
    ativo?: string;
    userPermissions?: UserPermission[] | undefined;
}

export class PermissionDTO implements IPermissionDTO {
    id?: PermissionEnum;
    name?: string | undefined;

    constructor(data?: IPermissionDTO) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.name = _data["name"];
        }
    }

    static fromJS(data: any): PermissionDTO {
        data = typeof data === 'object' ? data : {};
        let result = new PermissionDTO();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["name"] = this.name;
        return data; 
    }
}

export interface IPermissionDTO {
    id?: PermissionEnum;
    name?: string | undefined;
}

export class RegisterUserCommand implements IRegisterUserCommand {
    username?: string | undefined;
    password?: string | undefined;
    email?: string | undefined;

    constructor(data?: IRegisterUserCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.username = _data["username"];
            this.password = _data["password"];
            this.email = _data["email"];
        }
    }

    static fromJS(data: any): RegisterUserCommand {
        data = typeof data === 'object' ? data : {};
        let result = new RegisterUserCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["username"] = this.username;
        data["password"] = this.password;
        data["email"] = this.email;
        return data; 
    }
}

export interface IRegisterUserCommand {
    username?: string | undefined;
    password?: string | undefined;
    email?: string | undefined;
}

export class LoginCommand implements ILoginCommand {
    username?: string | undefined;
    password?: string | undefined;

    constructor(data?: ILoginCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.username = _data["username"];
            this.password = _data["password"];
        }
    }

    static fromJS(data: any): LoginCommand {
        data = typeof data === 'object' ? data : {};
        let result = new LoginCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["username"] = this.username;
        data["password"] = this.password;
        return data; 
    }
}

export interface ILoginCommand {
    username?: string | undefined;
    password?: string | undefined;
}

export class UpdatePasswordCommand implements IUpdatePasswordCommand {
    username?: string | undefined;
    password?: string | undefined;
    newPassword?: string | undefined;

    constructor(data?: IUpdatePasswordCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.username = _data["username"];
            this.password = _data["password"];
            this.newPassword = _data["newPassword"];
        }
    }

    static fromJS(data: any): UpdatePasswordCommand {
        data = typeof data === 'object' ? data : {};
        let result = new UpdatePasswordCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["username"] = this.username;
        data["password"] = this.password;
        data["newPassword"] = this.newPassword;
        return data; 
    }
}

export interface IUpdatePasswordCommand {
    username?: string | undefined;
    password?: string | undefined;
    newPassword?: string | undefined;
}

export class PrPromocionCuponesDTO implements IPrPromocionCuponesDTO {
    idCuponesPromocion?: number;
    idTipoPromocion?: number;
    idPromocion?: number;
    codigoCupon?: string | undefined;
    idCanalPublicacionCupon?: number;
    idGrupoAfinidad?: number | undefined;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    bonificacion?: number;
    cuponesPorPersona?: number;
    cuponDeAgencia?: boolean | undefined;
    couponTypeId?: number | undefined;

    constructor(data?: IPrPromocionCuponesDTO) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idCuponesPromocion = _data["idCuponesPromocion"];
            this.idTipoPromocion = _data["idTipoPromocion"];
            this.idPromocion = _data["idPromocion"];
            this.codigoCupon = _data["codigoCupon"];
            this.idCanalPublicacionCupon = _data["idCanalPublicacionCupon"];
            this.idGrupoAfinidad = _data["idGrupoAfinidad"];
            this.fechaInicioVigencia = _data["fechaInicioVigencia"] ? new Date(_data["fechaInicioVigencia"].toString()) : <any>undefined;
            this.fechaFinVigencia = _data["fechaFinVigencia"] ? new Date(_data["fechaFinVigencia"].toString()) : <any>undefined;
            this.bonificacion = _data["bonificacion"];
            this.cuponesPorPersona = _data["cuponesPorPersona"];
            this.cuponDeAgencia = _data["cuponDeAgencia"];
            this.couponTypeId = _data["couponTypeId"];
        }
    }

    static fromJS(data: any): PrPromocionCuponesDTO {
        data = typeof data === 'object' ? data : {};
        let result = new PrPromocionCuponesDTO();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idCuponesPromocion"] = this.idCuponesPromocion;
        data["idTipoPromocion"] = this.idTipoPromocion;
        data["idPromocion"] = this.idPromocion;
        data["codigoCupon"] = this.codigoCupon;
        data["idCanalPublicacionCupon"] = this.idCanalPublicacionCupon;
        data["idGrupoAfinidad"] = this.idGrupoAfinidad;
        data["fechaInicioVigencia"] = this.fechaInicioVigencia ? this.fechaInicioVigencia.toISOString() : <any>undefined;
        data["fechaFinVigencia"] = this.fechaFinVigencia ? this.fechaFinVigencia.toISOString() : <any>undefined;
        data["bonificacion"] = this.bonificacion;
        data["cuponesPorPersona"] = this.cuponesPorPersona;
        data["cuponDeAgencia"] = this.cuponDeAgencia;
        data["couponTypeId"] = this.couponTypeId;
        return data; 
    }
}

export interface IPrPromocionCuponesDTO {
    idCuponesPromocion?: number;
    idTipoPromocion?: number;
    idPromocion?: number;
    codigoCupon?: string | undefined;
    idCanalPublicacionCupon?: number;
    idGrupoAfinidad?: number | undefined;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    bonificacion?: number;
    cuponesPorPersona?: number;
    cuponDeAgencia?: boolean | undefined;
    couponTypeId?: number | undefined;
}

export class CreateCupomCommand implements ICreateCupomCommand {
    ambiente?: string | undefined;
    cnpj?: string | undefined;
    cupom?: PrPromocionCuponesDTO | undefined;

    constructor(data?: ICreateCupomCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.ambiente = _data["ambiente"];
            this.cnpj = _data["cnpj"];
            this.cupom = _data["cupom"] ? PrPromocionCuponesDTO.fromJS(_data["cupom"]) : <any>undefined;
        }
    }

    static fromJS(data: any): CreateCupomCommand {
        data = typeof data === 'object' ? data : {};
        let result = new CreateCupomCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["ambiente"] = this.ambiente;
        data["cnpj"] = this.cnpj;
        data["cupom"] = this.cupom ? this.cupom.toJSON() : <any>undefined;
        return data; 
    }
}

export interface ICreateCupomCommand {
    ambiente?: string | undefined;
    cnpj?: string | undefined;
    cupom?: PrPromocionCuponesDTO | undefined;
}

export class PrPromocionCupones implements IPrPromocionCupones {
    idCuponesPromocion?: number;
    idTipoPromocion?: number;
    idPromocion?: number;
    codigoCupon?: string | undefined;
    idCanalPublicacionCupon?: number;
    idGrupoAfinidad?: number | undefined;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    bonificacion?: number;
    cuponesPorPersona?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    cuponDeAgencia?: boolean | undefined;
    couponTypeId?: number | undefined;
    idCanalPublicacionCuponNavigation?: PrCanalesPublicacionCupones | undefined;
    idGrupoAfinidadNavigation?: PrGruposAfinidad | undefined;
    idPromocionNavigation?: PrPromociones | undefined;
    idTipoPromocionNavigation?: PrTiposPromocion | undefined;

    constructor(data?: IPrPromocionCupones) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idCuponesPromocion = _data["idCuponesPromocion"];
            this.idTipoPromocion = _data["idTipoPromocion"];
            this.idPromocion = _data["idPromocion"];
            this.codigoCupon = _data["codigoCupon"];
            this.idCanalPublicacionCupon = _data["idCanalPublicacionCupon"];
            this.idGrupoAfinidad = _data["idGrupoAfinidad"];
            this.fechaInicioVigencia = _data["fechaInicioVigencia"] ? new Date(_data["fechaInicioVigencia"].toString()) : <any>undefined;
            this.fechaFinVigencia = _data["fechaFinVigencia"] ? new Date(_data["fechaFinVigencia"].toString()) : <any>undefined;
            this.bonificacion = _data["bonificacion"];
            this.cuponesPorPersona = _data["cuponesPorPersona"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.cuponDeAgencia = _data["cuponDeAgencia"];
            this.couponTypeId = _data["couponTypeId"];
            this.idCanalPublicacionCuponNavigation = _data["idCanalPublicacionCuponNavigation"] ? PrCanalesPublicacionCupones.fromJS(_data["idCanalPublicacionCuponNavigation"]) : <any>undefined;
            this.idGrupoAfinidadNavigation = _data["idGrupoAfinidadNavigation"] ? PrGruposAfinidad.fromJS(_data["idGrupoAfinidadNavigation"]) : <any>undefined;
            this.idPromocionNavigation = _data["idPromocionNavigation"] ? PrPromociones.fromJS(_data["idPromocionNavigation"]) : <any>undefined;
            this.idTipoPromocionNavigation = _data["idTipoPromocionNavigation"] ? PrTiposPromocion.fromJS(_data["idTipoPromocionNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PrPromocionCupones {
        data = typeof data === 'object' ? data : {};
        let result = new PrPromocionCupones();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idCuponesPromocion"] = this.idCuponesPromocion;
        data["idTipoPromocion"] = this.idTipoPromocion;
        data["idPromocion"] = this.idPromocion;
        data["codigoCupon"] = this.codigoCupon;
        data["idCanalPublicacionCupon"] = this.idCanalPublicacionCupon;
        data["idGrupoAfinidad"] = this.idGrupoAfinidad;
        data["fechaInicioVigencia"] = this.fechaInicioVigencia ? this.fechaInicioVigencia.toISOString() : <any>undefined;
        data["fechaFinVigencia"] = this.fechaFinVigencia ? this.fechaFinVigencia.toISOString() : <any>undefined;
        data["bonificacion"] = this.bonificacion;
        data["cuponesPorPersona"] = this.cuponesPorPersona;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["cuponDeAgencia"] = this.cuponDeAgencia;
        data["couponTypeId"] = this.couponTypeId;
        data["idCanalPublicacionCuponNavigation"] = this.idCanalPublicacionCuponNavigation ? this.idCanalPublicacionCuponNavigation.toJSON() : <any>undefined;
        data["idGrupoAfinidadNavigation"] = this.idGrupoAfinidadNavigation ? this.idGrupoAfinidadNavigation.toJSON() : <any>undefined;
        data["idPromocionNavigation"] = this.idPromocionNavigation ? this.idPromocionNavigation.toJSON() : <any>undefined;
        data["idTipoPromocionNavigation"] = this.idTipoPromocionNavigation ? this.idTipoPromocionNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPrPromocionCupones {
    idCuponesPromocion?: number;
    idTipoPromocion?: number;
    idPromocion?: number;
    codigoCupon?: string | undefined;
    idCanalPublicacionCupon?: number;
    idGrupoAfinidad?: number | undefined;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    bonificacion?: number;
    cuponesPorPersona?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    cuponDeAgencia?: boolean | undefined;
    couponTypeId?: number | undefined;
    idCanalPublicacionCuponNavigation?: PrCanalesPublicacionCupones | undefined;
    idGrupoAfinidadNavigation?: PrGruposAfinidad | undefined;
    idPromocionNavigation?: PrPromociones | undefined;
    idTipoPromocionNavigation?: PrTiposPromocion | undefined;
}

export class PrCanalesPublicacionCupones implements IPrCanalesPublicacionCupones {
    idCanalPublicacionCupon?: number;
    codigoCanalPublicacion?: string | undefined;
    denominacionCanalPublicacion?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    prPromocionCupones?: PrPromocionCupones[] | undefined;

    constructor(data?: IPrCanalesPublicacionCupones) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idCanalPublicacionCupon = _data["idCanalPublicacionCupon"];
            this.codigoCanalPublicacion = _data["codigoCanalPublicacion"];
            this.denominacionCanalPublicacion = _data["denominacionCanalPublicacion"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            if (Array.isArray(_data["prPromocionCupones"])) {
                this.prPromocionCupones = [] as any;
                for (let item of _data["prPromocionCupones"])
                    this.prPromocionCupones!.push(PrPromocionCupones.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PrCanalesPublicacionCupones {
        data = typeof data === 'object' ? data : {};
        let result = new PrCanalesPublicacionCupones();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idCanalPublicacionCupon"] = this.idCanalPublicacionCupon;
        data["codigoCanalPublicacion"] = this.codigoCanalPublicacion;
        data["denominacionCanalPublicacion"] = this.denominacionCanalPublicacion;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        if (Array.isArray(this.prPromocionCupones)) {
            data["prPromocionCupones"] = [];
            for (let item of this.prPromocionCupones)
                data["prPromocionCupones"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPrCanalesPublicacionCupones {
    idCanalPublicacionCupon?: number;
    codigoCanalPublicacion?: string | undefined;
    denominacionCanalPublicacion?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    prPromocionCupones?: PrPromocionCupones[] | undefined;
}

export class PrGruposAfinidad implements IPrGruposAfinidad {
    idGrupoAfinidad?: number;
    codigoGrupoAfinidad?: string | undefined;
    descripcionGrupoAfinidad?: string | undefined;
    observacionGrupoAfinidad?: string | undefined;
    fechaDesde?: Date;
    fechaHasta?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idCompania?: number;
    idCompaniaNavigation?: BsCompanias | undefined;
    prProductoPrecio?: PrProductoPrecio[] | undefined;
    prPromocionCupones?: PrPromocionCupones[] | undefined;

    constructor(data?: IPrGruposAfinidad) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idGrupoAfinidad = _data["idGrupoAfinidad"];
            this.codigoGrupoAfinidad = _data["codigoGrupoAfinidad"];
            this.descripcionGrupoAfinidad = _data["descripcionGrupoAfinidad"];
            this.observacionGrupoAfinidad = _data["observacionGrupoAfinidad"];
            this.fechaDesde = _data["fechaDesde"] ? new Date(_data["fechaDesde"].toString()) : <any>undefined;
            this.fechaHasta = _data["fechaHasta"] ? new Date(_data["fechaHasta"].toString()) : <any>undefined;
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idCompania = _data["idCompania"];
            this.idCompaniaNavigation = _data["idCompaniaNavigation"] ? BsCompanias.fromJS(_data["idCompaniaNavigation"]) : <any>undefined;
            if (Array.isArray(_data["prProductoPrecio"])) {
                this.prProductoPrecio = [] as any;
                for (let item of _data["prProductoPrecio"])
                    this.prProductoPrecio!.push(PrProductoPrecio.fromJS(item));
            }
            if (Array.isArray(_data["prPromocionCupones"])) {
                this.prPromocionCupones = [] as any;
                for (let item of _data["prPromocionCupones"])
                    this.prPromocionCupones!.push(PrPromocionCupones.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PrGruposAfinidad {
        data = typeof data === 'object' ? data : {};
        let result = new PrGruposAfinidad();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idGrupoAfinidad"] = this.idGrupoAfinidad;
        data["codigoGrupoAfinidad"] = this.codigoGrupoAfinidad;
        data["descripcionGrupoAfinidad"] = this.descripcionGrupoAfinidad;
        data["observacionGrupoAfinidad"] = this.observacionGrupoAfinidad;
        data["fechaDesde"] = this.fechaDesde ? this.fechaDesde.toISOString() : <any>undefined;
        data["fechaHasta"] = this.fechaHasta ? this.fechaHasta.toISOString() : <any>undefined;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idCompania"] = this.idCompania;
        data["idCompaniaNavigation"] = this.idCompaniaNavigation ? this.idCompaniaNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.prProductoPrecio)) {
            data["prProductoPrecio"] = [];
            for (let item of this.prProductoPrecio)
                data["prProductoPrecio"].push(item.toJSON());
        }
        if (Array.isArray(this.prPromocionCupones)) {
            data["prPromocionCupones"] = [];
            for (let item of this.prPromocionCupones)
                data["prPromocionCupones"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPrGruposAfinidad {
    idGrupoAfinidad?: number;
    codigoGrupoAfinidad?: string | undefined;
    descripcionGrupoAfinidad?: string | undefined;
    observacionGrupoAfinidad?: string | undefined;
    fechaDesde?: Date;
    fechaHasta?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idCompania?: number;
    idCompaniaNavigation?: BsCompanias | undefined;
    prProductoPrecio?: PrProductoPrecio[] | undefined;
    prPromocionCupones?: PrPromocionCupones[] | undefined;
}

export class BsCompanias implements IBsCompanias {
    idCompania?: number;
    idPersonaJuridica?: number | undefined;
    requiereCondicionAceptacion?: string | undefined;
    fechaInicioVigencia?: Date | undefined;
    fechaFinVigencia?: Date | undefined;
    idioma?: string | undefined;
    portalId?: number | undefined;
    idPersonaJuridicaNavigation?: PePersonaJuridica | undefined;
    coEjecutivos?: CoEjecutivos[] | undefined;
    coRepresentantes?: CoRepresentantes[] | undefined;
    peTiposCalle?: PeTiposCalle[] | undefined;
    prGruposAfinidad?: PrGruposAfinidad[] | undefined;
    prLineaProducto?: PrLineaProducto[] | undefined;
    prPromociones?: PrPromociones[] | undefined;
    prTiposObjetivosAgencias?: PrTiposObjetivosAgencias[] | undefined;
    prTiposPromocion?: PrTiposPromocion[] | undefined;
    prZonasImpresionServicios?: PrZonasImpresionServicios[] | undefined;

    constructor(data?: IBsCompanias) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idCompania = _data["idCompania"];
            this.idPersonaJuridica = _data["idPersonaJuridica"];
            this.requiereCondicionAceptacion = _data["requiereCondicionAceptacion"];
            this.fechaInicioVigencia = _data["fechaInicioVigencia"] ? new Date(_data["fechaInicioVigencia"].toString()) : <any>undefined;
            this.fechaFinVigencia = _data["fechaFinVigencia"] ? new Date(_data["fechaFinVigencia"].toString()) : <any>undefined;
            this.idioma = _data["idioma"];
            this.portalId = _data["portalId"];
            this.idPersonaJuridicaNavigation = _data["idPersonaJuridicaNavigation"] ? PePersonaJuridica.fromJS(_data["idPersonaJuridicaNavigation"]) : <any>undefined;
            if (Array.isArray(_data["coEjecutivos"])) {
                this.coEjecutivos = [] as any;
                for (let item of _data["coEjecutivos"])
                    this.coEjecutivos!.push(CoEjecutivos.fromJS(item));
            }
            if (Array.isArray(_data["coRepresentantes"])) {
                this.coRepresentantes = [] as any;
                for (let item of _data["coRepresentantes"])
                    this.coRepresentantes!.push(CoRepresentantes.fromJS(item));
            }
            if (Array.isArray(_data["peTiposCalle"])) {
                this.peTiposCalle = [] as any;
                for (let item of _data["peTiposCalle"])
                    this.peTiposCalle!.push(PeTiposCalle.fromJS(item));
            }
            if (Array.isArray(_data["prGruposAfinidad"])) {
                this.prGruposAfinidad = [] as any;
                for (let item of _data["prGruposAfinidad"])
                    this.prGruposAfinidad!.push(PrGruposAfinidad.fromJS(item));
            }
            if (Array.isArray(_data["prLineaProducto"])) {
                this.prLineaProducto = [] as any;
                for (let item of _data["prLineaProducto"])
                    this.prLineaProducto!.push(PrLineaProducto.fromJS(item));
            }
            if (Array.isArray(_data["prPromociones"])) {
                this.prPromociones = [] as any;
                for (let item of _data["prPromociones"])
                    this.prPromociones!.push(PrPromociones.fromJS(item));
            }
            if (Array.isArray(_data["prTiposObjetivosAgencias"])) {
                this.prTiposObjetivosAgencias = [] as any;
                for (let item of _data["prTiposObjetivosAgencias"])
                    this.prTiposObjetivosAgencias!.push(PrTiposObjetivosAgencias.fromJS(item));
            }
            if (Array.isArray(_data["prTiposPromocion"])) {
                this.prTiposPromocion = [] as any;
                for (let item of _data["prTiposPromocion"])
                    this.prTiposPromocion!.push(PrTiposPromocion.fromJS(item));
            }
            if (Array.isArray(_data["prZonasImpresionServicios"])) {
                this.prZonasImpresionServicios = [] as any;
                for (let item of _data["prZonasImpresionServicios"])
                    this.prZonasImpresionServicios!.push(PrZonasImpresionServicios.fromJS(item));
            }
        }
    }

    static fromJS(data: any): BsCompanias {
        data = typeof data === 'object' ? data : {};
        let result = new BsCompanias();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idCompania"] = this.idCompania;
        data["idPersonaJuridica"] = this.idPersonaJuridica;
        data["requiereCondicionAceptacion"] = this.requiereCondicionAceptacion;
        data["fechaInicioVigencia"] = this.fechaInicioVigencia ? this.fechaInicioVigencia.toISOString() : <any>undefined;
        data["fechaFinVigencia"] = this.fechaFinVigencia ? this.fechaFinVigencia.toISOString() : <any>undefined;
        data["idioma"] = this.idioma;
        data["portalId"] = this.portalId;
        data["idPersonaJuridicaNavigation"] = this.idPersonaJuridicaNavigation ? this.idPersonaJuridicaNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.coEjecutivos)) {
            data["coEjecutivos"] = [];
            for (let item of this.coEjecutivos)
                data["coEjecutivos"].push(item.toJSON());
        }
        if (Array.isArray(this.coRepresentantes)) {
            data["coRepresentantes"] = [];
            for (let item of this.coRepresentantes)
                data["coRepresentantes"].push(item.toJSON());
        }
        if (Array.isArray(this.peTiposCalle)) {
            data["peTiposCalle"] = [];
            for (let item of this.peTiposCalle)
                data["peTiposCalle"].push(item.toJSON());
        }
        if (Array.isArray(this.prGruposAfinidad)) {
            data["prGruposAfinidad"] = [];
            for (let item of this.prGruposAfinidad)
                data["prGruposAfinidad"].push(item.toJSON());
        }
        if (Array.isArray(this.prLineaProducto)) {
            data["prLineaProducto"] = [];
            for (let item of this.prLineaProducto)
                data["prLineaProducto"].push(item.toJSON());
        }
        if (Array.isArray(this.prPromociones)) {
            data["prPromociones"] = [];
            for (let item of this.prPromociones)
                data["prPromociones"].push(item.toJSON());
        }
        if (Array.isArray(this.prTiposObjetivosAgencias)) {
            data["prTiposObjetivosAgencias"] = [];
            for (let item of this.prTiposObjetivosAgencias)
                data["prTiposObjetivosAgencias"].push(item.toJSON());
        }
        if (Array.isArray(this.prTiposPromocion)) {
            data["prTiposPromocion"] = [];
            for (let item of this.prTiposPromocion)
                data["prTiposPromocion"].push(item.toJSON());
        }
        if (Array.isArray(this.prZonasImpresionServicios)) {
            data["prZonasImpresionServicios"] = [];
            for (let item of this.prZonasImpresionServicios)
                data["prZonasImpresionServicios"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IBsCompanias {
    idCompania?: number;
    idPersonaJuridica?: number | undefined;
    requiereCondicionAceptacion?: string | undefined;
    fechaInicioVigencia?: Date | undefined;
    fechaFinVigencia?: Date | undefined;
    idioma?: string | undefined;
    portalId?: number | undefined;
    idPersonaJuridicaNavigation?: PePersonaJuridica | undefined;
    coEjecutivos?: CoEjecutivos[] | undefined;
    coRepresentantes?: CoRepresentantes[] | undefined;
    peTiposCalle?: PeTiposCalle[] | undefined;
    prGruposAfinidad?: PrGruposAfinidad[] | undefined;
    prLineaProducto?: PrLineaProducto[] | undefined;
    prPromociones?: PrPromociones[] | undefined;
    prTiposObjetivosAgencias?: PrTiposObjetivosAgencias[] | undefined;
    prTiposPromocion?: PrTiposPromocion[] | undefined;
    prZonasImpresionServicios?: PrZonasImpresionServicios[] | undefined;
}

export class PePersonaJuridica implements IPePersonaJuridica {
    idPersonaJuridica?: number;
    cuit?: string | undefined;
    razonSocial?: string | undefined;
    idResponsableIva?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    nombreFantasia?: string | undefined;
    iibb?: string | undefined;
    idResponsableIvaNavigation?: CoResponsableIva | undefined;
    bsCompanias?: BsCompanias[] | undefined;
    coAgencias?: CoAgencias[] | undefined;
    coClientes?: CoClientes[] | undefined;
    coEmpresas?: CoEmpresas[] | undefined;
    coPatrocinadores?: CoPatrocinadores[] | undefined;
    coRepresentantes?: CoRepresentantes[] | undefined;
    peCanalesPersonaJuridica?: PeCanalesPersonaJuridica[] | undefined;
    peDomicilioPersonaJuridica?: PeDomicilioPersonaJuridica[] | undefined;
    prProveedoresServicios?: PrProveedoresServicios[] | undefined;

    constructor(data?: IPePersonaJuridica) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idPersonaJuridica = _data["idPersonaJuridica"];
            this.cuit = _data["cuit"];
            this.razonSocial = _data["razonSocial"];
            this.idResponsableIva = _data["idResponsableIva"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.nombreFantasia = _data["nombreFantasia"];
            this.iibb = _data["iibb"];
            this.idResponsableIvaNavigation = _data["idResponsableIvaNavigation"] ? CoResponsableIva.fromJS(_data["idResponsableIvaNavigation"]) : <any>undefined;
            if (Array.isArray(_data["bsCompanias"])) {
                this.bsCompanias = [] as any;
                for (let item of _data["bsCompanias"])
                    this.bsCompanias!.push(BsCompanias.fromJS(item));
            }
            if (Array.isArray(_data["coAgencias"])) {
                this.coAgencias = [] as any;
                for (let item of _data["coAgencias"])
                    this.coAgencias!.push(CoAgencias.fromJS(item));
            }
            if (Array.isArray(_data["coClientes"])) {
                this.coClientes = [] as any;
                for (let item of _data["coClientes"])
                    this.coClientes!.push(CoClientes.fromJS(item));
            }
            if (Array.isArray(_data["coEmpresas"])) {
                this.coEmpresas = [] as any;
                for (let item of _data["coEmpresas"])
                    this.coEmpresas!.push(CoEmpresas.fromJS(item));
            }
            if (Array.isArray(_data["coPatrocinadores"])) {
                this.coPatrocinadores = [] as any;
                for (let item of _data["coPatrocinadores"])
                    this.coPatrocinadores!.push(CoPatrocinadores.fromJS(item));
            }
            if (Array.isArray(_data["coRepresentantes"])) {
                this.coRepresentantes = [] as any;
                for (let item of _data["coRepresentantes"])
                    this.coRepresentantes!.push(CoRepresentantes.fromJS(item));
            }
            if (Array.isArray(_data["peCanalesPersonaJuridica"])) {
                this.peCanalesPersonaJuridica = [] as any;
                for (let item of _data["peCanalesPersonaJuridica"])
                    this.peCanalesPersonaJuridica!.push(PeCanalesPersonaJuridica.fromJS(item));
            }
            if (Array.isArray(_data["peDomicilioPersonaJuridica"])) {
                this.peDomicilioPersonaJuridica = [] as any;
                for (let item of _data["peDomicilioPersonaJuridica"])
                    this.peDomicilioPersonaJuridica!.push(PeDomicilioPersonaJuridica.fromJS(item));
            }
            if (Array.isArray(_data["prProveedoresServicios"])) {
                this.prProveedoresServicios = [] as any;
                for (let item of _data["prProveedoresServicios"])
                    this.prProveedoresServicios!.push(PrProveedoresServicios.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PePersonaJuridica {
        data = typeof data === 'object' ? data : {};
        let result = new PePersonaJuridica();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idPersonaJuridica"] = this.idPersonaJuridica;
        data["cuit"] = this.cuit;
        data["razonSocial"] = this.razonSocial;
        data["idResponsableIva"] = this.idResponsableIva;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["nombreFantasia"] = this.nombreFantasia;
        data["iibb"] = this.iibb;
        data["idResponsableIvaNavigation"] = this.idResponsableIvaNavigation ? this.idResponsableIvaNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.bsCompanias)) {
            data["bsCompanias"] = [];
            for (let item of this.bsCompanias)
                data["bsCompanias"].push(item.toJSON());
        }
        if (Array.isArray(this.coAgencias)) {
            data["coAgencias"] = [];
            for (let item of this.coAgencias)
                data["coAgencias"].push(item.toJSON());
        }
        if (Array.isArray(this.coClientes)) {
            data["coClientes"] = [];
            for (let item of this.coClientes)
                data["coClientes"].push(item.toJSON());
        }
        if (Array.isArray(this.coEmpresas)) {
            data["coEmpresas"] = [];
            for (let item of this.coEmpresas)
                data["coEmpresas"].push(item.toJSON());
        }
        if (Array.isArray(this.coPatrocinadores)) {
            data["coPatrocinadores"] = [];
            for (let item of this.coPatrocinadores)
                data["coPatrocinadores"].push(item.toJSON());
        }
        if (Array.isArray(this.coRepresentantes)) {
            data["coRepresentantes"] = [];
            for (let item of this.coRepresentantes)
                data["coRepresentantes"].push(item.toJSON());
        }
        if (Array.isArray(this.peCanalesPersonaJuridica)) {
            data["peCanalesPersonaJuridica"] = [];
            for (let item of this.peCanalesPersonaJuridica)
                data["peCanalesPersonaJuridica"].push(item.toJSON());
        }
        if (Array.isArray(this.peDomicilioPersonaJuridica)) {
            data["peDomicilioPersonaJuridica"] = [];
            for (let item of this.peDomicilioPersonaJuridica)
                data["peDomicilioPersonaJuridica"].push(item.toJSON());
        }
        if (Array.isArray(this.prProveedoresServicios)) {
            data["prProveedoresServicios"] = [];
            for (let item of this.prProveedoresServicios)
                data["prProveedoresServicios"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPePersonaJuridica {
    idPersonaJuridica?: number;
    cuit?: string | undefined;
    razonSocial?: string | undefined;
    idResponsableIva?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    nombreFantasia?: string | undefined;
    iibb?: string | undefined;
    idResponsableIvaNavigation?: CoResponsableIva | undefined;
    bsCompanias?: BsCompanias[] | undefined;
    coAgencias?: CoAgencias[] | undefined;
    coClientes?: CoClientes[] | undefined;
    coEmpresas?: CoEmpresas[] | undefined;
    coPatrocinadores?: CoPatrocinadores[] | undefined;
    coRepresentantes?: CoRepresentantes[] | undefined;
    peCanalesPersonaJuridica?: PeCanalesPersonaJuridica[] | undefined;
    peDomicilioPersonaJuridica?: PeDomicilioPersonaJuridica[] | undefined;
    prProveedoresServicios?: PrProveedoresServicios[] | undefined;
}

export class CoResponsableIva implements ICoResponsableIva {
    idResponsableIva?: number;
    descripcionResponsableIva?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    pePersonaJuridica?: PePersonaJuridica[] | undefined;

    constructor(data?: ICoResponsableIva) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idResponsableIva = _data["idResponsableIva"];
            this.descripcionResponsableIva = _data["descripcionResponsableIva"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            if (Array.isArray(_data["pePersonaJuridica"])) {
                this.pePersonaJuridica = [] as any;
                for (let item of _data["pePersonaJuridica"])
                    this.pePersonaJuridica!.push(PePersonaJuridica.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CoResponsableIva {
        data = typeof data === 'object' ? data : {};
        let result = new CoResponsableIva();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idResponsableIva"] = this.idResponsableIva;
        data["descripcionResponsableIva"] = this.descripcionResponsableIva;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        if (Array.isArray(this.pePersonaJuridica)) {
            data["pePersonaJuridica"] = [];
            for (let item of this.pePersonaJuridica)
                data["pePersonaJuridica"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICoResponsableIva {
    idResponsableIva?: number;
    descripcionResponsableIva?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    pePersonaJuridica?: PePersonaJuridica[] | undefined;
}

export class CoAgencias implements ICoAgencias {
    idAgencia?: number;
    idPersonaJuridica?: number | undefined;
    fechaBaja?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    userId?: number;
    idSupervisor?: number | undefined;
    emiteVoucherEnEmision?: string | undefined;
    dispPagoOnline?: string | undefined;
    disponePagoOnline?: string | undefined;
    idPeriodicidadFactuEfectivo?: number | undefined;
    idPeriodicidadFactuTarjeta?: number | undefined;
    cobranzaAutomatica?: string | undefined;
    facturacionPuntual?: number | undefined;
    idCompania?: number | undefined;
    cobranzaAutomaticaTc?: string | undefined;
    urlPagoOnline?: string | undefined;
    mayorista?: string | undefined;
    requiereAceptacionCondiciones?: string | undefined;
    pathLogo?: string | undefined;
    markUp?: number | undefined;
    modificaMarkUp?: number | undefined;
    minimoMarkUp?: number | undefined;
    marcaCtaCteIndividual?: string | undefined;
    showLogoOmint?: boolean | undefined;
    marcaAgenciaSupervisora?: string | undefined;
    requiereMailTitular?: string | undefined;
    muestraCondicionesGenerales?: boolean | undefined;
    maximoMarkUp?: number | undefined;
    muestraLogoAgencia?: boolean | undefined;
    idPersonaFisica?: number | undefined;
    tipoPersona?: string | undefined;
    idTipoCalculoImporte?: number | undefined;
    idSegmentosAgencias?: number | undefined;
    leyenda?: string | undefined;
    leyendaIngles?: string | undefined;
    codigoSusep?: string | undefined;
    identificarVenda?: string | undefined;
    enviaMensaje?: boolean | undefined;
    idPeriodicidadFactuEfectivoNavigation?: CoPeriodicidadFacturacion | undefined;
    idPeriodicidadFactuTarjetaNavigation?: CoPeriodicidadFacturacion | undefined;
    idPersonaJuridicaNavigation?: PePersonaJuridica | undefined;
    coAgenciaCanalDistribucion?: CoAgenciaCanalDistribucion[] | undefined;
    coAgenciasBudget?: CoAgenciasBudget[] | undefined;
    coAgenciasCobranza?: CoAgenciasCobranza[] | undefined;
    coAgenciasEjecutivo?: CoAgenciasEjecutivo[] | undefined;
    coAgenciasEjecutivoResponsable?: CoAgenciasEjecutivoResponsable[] | undefined;
    coAgenciasRepresentante?: CoAgenciasRepresentante[] | undefined;
    coComisionesAgencias?: CoComisionesAgencias[] | undefined;
    coCotizacionesIndividuosLog?: CoCotizacionesIndividuosLog[] | undefined;
    coFormasPagoAgencias?: CoFormasPagoAgencias[] | undefined;
    coSellerIdcanalesVentas?: CoSellerIdcanalesVentas[] | undefined;
    coVendedoresAgencias?: CoVendedoresAgencias[] | undefined;
    peAlteracaoPessoaFisica?: PeAlteracaoPessoaFisica[] | undefined;
    peAutorizacaoAlteracao?: PeAutorizacaoAlteracao[] | undefined;
    prAgenciasHabilitadasPromocion?: PrAgenciasHabilitadasPromocion[] | undefined;
    prAgenciasPromocion?: PrAgenciasPromocion[] | undefined;
    prProductoPrecio?: PrProductoPrecio[] | undefined;

    constructor(data?: ICoAgencias) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idAgencia = _data["idAgencia"];
            this.idPersonaJuridica = _data["idPersonaJuridica"];
            this.fechaBaja = _data["fechaBaja"] ? new Date(_data["fechaBaja"].toString()) : <any>undefined;
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.userId = _data["userId"];
            this.idSupervisor = _data["idSupervisor"];
            this.emiteVoucherEnEmision = _data["emiteVoucherEnEmision"];
            this.dispPagoOnline = _data["dispPagoOnline"];
            this.disponePagoOnline = _data["disponePagoOnline"];
            this.idPeriodicidadFactuEfectivo = _data["idPeriodicidadFactuEfectivo"];
            this.idPeriodicidadFactuTarjeta = _data["idPeriodicidadFactuTarjeta"];
            this.cobranzaAutomatica = _data["cobranzaAutomatica"];
            this.facturacionPuntual = _data["facturacionPuntual"];
            this.idCompania = _data["idCompania"];
            this.cobranzaAutomaticaTc = _data["cobranzaAutomaticaTc"];
            this.urlPagoOnline = _data["urlPagoOnline"];
            this.mayorista = _data["mayorista"];
            this.requiereAceptacionCondiciones = _data["requiereAceptacionCondiciones"];
            this.pathLogo = _data["pathLogo"];
            this.markUp = _data["markUp"];
            this.modificaMarkUp = _data["modificaMarkUp"];
            this.minimoMarkUp = _data["minimoMarkUp"];
            this.marcaCtaCteIndividual = _data["marcaCtaCteIndividual"];
            this.showLogoOmint = _data["showLogoOmint"];
            this.marcaAgenciaSupervisora = _data["marcaAgenciaSupervisora"];
            this.requiereMailTitular = _data["requiereMailTitular"];
            this.muestraCondicionesGenerales = _data["muestraCondicionesGenerales"];
            this.maximoMarkUp = _data["maximoMarkUp"];
            this.muestraLogoAgencia = _data["muestraLogoAgencia"];
            this.idPersonaFisica = _data["idPersonaFisica"];
            this.tipoPersona = _data["tipoPersona"];
            this.idTipoCalculoImporte = _data["idTipoCalculoImporte"];
            this.idSegmentosAgencias = _data["idSegmentosAgencias"];
            this.leyenda = _data["leyenda"];
            this.leyendaIngles = _data["leyendaIngles"];
            this.codigoSusep = _data["codigoSusep"];
            this.identificarVenda = _data["identificarVenda"];
            this.enviaMensaje = _data["enviaMensaje"];
            this.idPeriodicidadFactuEfectivoNavigation = _data["idPeriodicidadFactuEfectivoNavigation"] ? CoPeriodicidadFacturacion.fromJS(_data["idPeriodicidadFactuEfectivoNavigation"]) : <any>undefined;
            this.idPeriodicidadFactuTarjetaNavigation = _data["idPeriodicidadFactuTarjetaNavigation"] ? CoPeriodicidadFacturacion.fromJS(_data["idPeriodicidadFactuTarjetaNavigation"]) : <any>undefined;
            this.idPersonaJuridicaNavigation = _data["idPersonaJuridicaNavigation"] ? PePersonaJuridica.fromJS(_data["idPersonaJuridicaNavigation"]) : <any>undefined;
            if (Array.isArray(_data["coAgenciaCanalDistribucion"])) {
                this.coAgenciaCanalDistribucion = [] as any;
                for (let item of _data["coAgenciaCanalDistribucion"])
                    this.coAgenciaCanalDistribucion!.push(CoAgenciaCanalDistribucion.fromJS(item));
            }
            if (Array.isArray(_data["coAgenciasBudget"])) {
                this.coAgenciasBudget = [] as any;
                for (let item of _data["coAgenciasBudget"])
                    this.coAgenciasBudget!.push(CoAgenciasBudget.fromJS(item));
            }
            if (Array.isArray(_data["coAgenciasCobranza"])) {
                this.coAgenciasCobranza = [] as any;
                for (let item of _data["coAgenciasCobranza"])
                    this.coAgenciasCobranza!.push(CoAgenciasCobranza.fromJS(item));
            }
            if (Array.isArray(_data["coAgenciasEjecutivo"])) {
                this.coAgenciasEjecutivo = [] as any;
                for (let item of _data["coAgenciasEjecutivo"])
                    this.coAgenciasEjecutivo!.push(CoAgenciasEjecutivo.fromJS(item));
            }
            if (Array.isArray(_data["coAgenciasEjecutivoResponsable"])) {
                this.coAgenciasEjecutivoResponsable = [] as any;
                for (let item of _data["coAgenciasEjecutivoResponsable"])
                    this.coAgenciasEjecutivoResponsable!.push(CoAgenciasEjecutivoResponsable.fromJS(item));
            }
            if (Array.isArray(_data["coAgenciasRepresentante"])) {
                this.coAgenciasRepresentante = [] as any;
                for (let item of _data["coAgenciasRepresentante"])
                    this.coAgenciasRepresentante!.push(CoAgenciasRepresentante.fromJS(item));
            }
            if (Array.isArray(_data["coComisionesAgencias"])) {
                this.coComisionesAgencias = [] as any;
                for (let item of _data["coComisionesAgencias"])
                    this.coComisionesAgencias!.push(CoComisionesAgencias.fromJS(item));
            }
            if (Array.isArray(_data["coCotizacionesIndividuosLog"])) {
                this.coCotizacionesIndividuosLog = [] as any;
                for (let item of _data["coCotizacionesIndividuosLog"])
                    this.coCotizacionesIndividuosLog!.push(CoCotizacionesIndividuosLog.fromJS(item));
            }
            if (Array.isArray(_data["coFormasPagoAgencias"])) {
                this.coFormasPagoAgencias = [] as any;
                for (let item of _data["coFormasPagoAgencias"])
                    this.coFormasPagoAgencias!.push(CoFormasPagoAgencias.fromJS(item));
            }
            if (Array.isArray(_data["coSellerIdcanalesVentas"])) {
                this.coSellerIdcanalesVentas = [] as any;
                for (let item of _data["coSellerIdcanalesVentas"])
                    this.coSellerIdcanalesVentas!.push(CoSellerIdcanalesVentas.fromJS(item));
            }
            if (Array.isArray(_data["coVendedoresAgencias"])) {
                this.coVendedoresAgencias = [] as any;
                for (let item of _data["coVendedoresAgencias"])
                    this.coVendedoresAgencias!.push(CoVendedoresAgencias.fromJS(item));
            }
            if (Array.isArray(_data["peAlteracaoPessoaFisica"])) {
                this.peAlteracaoPessoaFisica = [] as any;
                for (let item of _data["peAlteracaoPessoaFisica"])
                    this.peAlteracaoPessoaFisica!.push(PeAlteracaoPessoaFisica.fromJS(item));
            }
            if (Array.isArray(_data["peAutorizacaoAlteracao"])) {
                this.peAutorizacaoAlteracao = [] as any;
                for (let item of _data["peAutorizacaoAlteracao"])
                    this.peAutorizacaoAlteracao!.push(PeAutorizacaoAlteracao.fromJS(item));
            }
            if (Array.isArray(_data["prAgenciasHabilitadasPromocion"])) {
                this.prAgenciasHabilitadasPromocion = [] as any;
                for (let item of _data["prAgenciasHabilitadasPromocion"])
                    this.prAgenciasHabilitadasPromocion!.push(PrAgenciasHabilitadasPromocion.fromJS(item));
            }
            if (Array.isArray(_data["prAgenciasPromocion"])) {
                this.prAgenciasPromocion = [] as any;
                for (let item of _data["prAgenciasPromocion"])
                    this.prAgenciasPromocion!.push(PrAgenciasPromocion.fromJS(item));
            }
            if (Array.isArray(_data["prProductoPrecio"])) {
                this.prProductoPrecio = [] as any;
                for (let item of _data["prProductoPrecio"])
                    this.prProductoPrecio!.push(PrProductoPrecio.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CoAgencias {
        data = typeof data === 'object' ? data : {};
        let result = new CoAgencias();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idAgencia"] = this.idAgencia;
        data["idPersonaJuridica"] = this.idPersonaJuridica;
        data["fechaBaja"] = this.fechaBaja ? this.fechaBaja.toISOString() : <any>undefined;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["userId"] = this.userId;
        data["idSupervisor"] = this.idSupervisor;
        data["emiteVoucherEnEmision"] = this.emiteVoucherEnEmision;
        data["dispPagoOnline"] = this.dispPagoOnline;
        data["disponePagoOnline"] = this.disponePagoOnline;
        data["idPeriodicidadFactuEfectivo"] = this.idPeriodicidadFactuEfectivo;
        data["idPeriodicidadFactuTarjeta"] = this.idPeriodicidadFactuTarjeta;
        data["cobranzaAutomatica"] = this.cobranzaAutomatica;
        data["facturacionPuntual"] = this.facturacionPuntual;
        data["idCompania"] = this.idCompania;
        data["cobranzaAutomaticaTc"] = this.cobranzaAutomaticaTc;
        data["urlPagoOnline"] = this.urlPagoOnline;
        data["mayorista"] = this.mayorista;
        data["requiereAceptacionCondiciones"] = this.requiereAceptacionCondiciones;
        data["pathLogo"] = this.pathLogo;
        data["markUp"] = this.markUp;
        data["modificaMarkUp"] = this.modificaMarkUp;
        data["minimoMarkUp"] = this.minimoMarkUp;
        data["marcaCtaCteIndividual"] = this.marcaCtaCteIndividual;
        data["showLogoOmint"] = this.showLogoOmint;
        data["marcaAgenciaSupervisora"] = this.marcaAgenciaSupervisora;
        data["requiereMailTitular"] = this.requiereMailTitular;
        data["muestraCondicionesGenerales"] = this.muestraCondicionesGenerales;
        data["maximoMarkUp"] = this.maximoMarkUp;
        data["muestraLogoAgencia"] = this.muestraLogoAgencia;
        data["idPersonaFisica"] = this.idPersonaFisica;
        data["tipoPersona"] = this.tipoPersona;
        data["idTipoCalculoImporte"] = this.idTipoCalculoImporte;
        data["idSegmentosAgencias"] = this.idSegmentosAgencias;
        data["leyenda"] = this.leyenda;
        data["leyendaIngles"] = this.leyendaIngles;
        data["codigoSusep"] = this.codigoSusep;
        data["identificarVenda"] = this.identificarVenda;
        data["enviaMensaje"] = this.enviaMensaje;
        data["idPeriodicidadFactuEfectivoNavigation"] = this.idPeriodicidadFactuEfectivoNavigation ? this.idPeriodicidadFactuEfectivoNavigation.toJSON() : <any>undefined;
        data["idPeriodicidadFactuTarjetaNavigation"] = this.idPeriodicidadFactuTarjetaNavigation ? this.idPeriodicidadFactuTarjetaNavigation.toJSON() : <any>undefined;
        data["idPersonaJuridicaNavigation"] = this.idPersonaJuridicaNavigation ? this.idPersonaJuridicaNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.coAgenciaCanalDistribucion)) {
            data["coAgenciaCanalDistribucion"] = [];
            for (let item of this.coAgenciaCanalDistribucion)
                data["coAgenciaCanalDistribucion"].push(item.toJSON());
        }
        if (Array.isArray(this.coAgenciasBudget)) {
            data["coAgenciasBudget"] = [];
            for (let item of this.coAgenciasBudget)
                data["coAgenciasBudget"].push(item.toJSON());
        }
        if (Array.isArray(this.coAgenciasCobranza)) {
            data["coAgenciasCobranza"] = [];
            for (let item of this.coAgenciasCobranza)
                data["coAgenciasCobranza"].push(item.toJSON());
        }
        if (Array.isArray(this.coAgenciasEjecutivo)) {
            data["coAgenciasEjecutivo"] = [];
            for (let item of this.coAgenciasEjecutivo)
                data["coAgenciasEjecutivo"].push(item.toJSON());
        }
        if (Array.isArray(this.coAgenciasEjecutivoResponsable)) {
            data["coAgenciasEjecutivoResponsable"] = [];
            for (let item of this.coAgenciasEjecutivoResponsable)
                data["coAgenciasEjecutivoResponsable"].push(item.toJSON());
        }
        if (Array.isArray(this.coAgenciasRepresentante)) {
            data["coAgenciasRepresentante"] = [];
            for (let item of this.coAgenciasRepresentante)
                data["coAgenciasRepresentante"].push(item.toJSON());
        }
        if (Array.isArray(this.coComisionesAgencias)) {
            data["coComisionesAgencias"] = [];
            for (let item of this.coComisionesAgencias)
                data["coComisionesAgencias"].push(item.toJSON());
        }
        if (Array.isArray(this.coCotizacionesIndividuosLog)) {
            data["coCotizacionesIndividuosLog"] = [];
            for (let item of this.coCotizacionesIndividuosLog)
                data["coCotizacionesIndividuosLog"].push(item.toJSON());
        }
        if (Array.isArray(this.coFormasPagoAgencias)) {
            data["coFormasPagoAgencias"] = [];
            for (let item of this.coFormasPagoAgencias)
                data["coFormasPagoAgencias"].push(item.toJSON());
        }
        if (Array.isArray(this.coSellerIdcanalesVentas)) {
            data["coSellerIdcanalesVentas"] = [];
            for (let item of this.coSellerIdcanalesVentas)
                data["coSellerIdcanalesVentas"].push(item.toJSON());
        }
        if (Array.isArray(this.coVendedoresAgencias)) {
            data["coVendedoresAgencias"] = [];
            for (let item of this.coVendedoresAgencias)
                data["coVendedoresAgencias"].push(item.toJSON());
        }
        if (Array.isArray(this.peAlteracaoPessoaFisica)) {
            data["peAlteracaoPessoaFisica"] = [];
            for (let item of this.peAlteracaoPessoaFisica)
                data["peAlteracaoPessoaFisica"].push(item.toJSON());
        }
        if (Array.isArray(this.peAutorizacaoAlteracao)) {
            data["peAutorizacaoAlteracao"] = [];
            for (let item of this.peAutorizacaoAlteracao)
                data["peAutorizacaoAlteracao"].push(item.toJSON());
        }
        if (Array.isArray(this.prAgenciasHabilitadasPromocion)) {
            data["prAgenciasHabilitadasPromocion"] = [];
            for (let item of this.prAgenciasHabilitadasPromocion)
                data["prAgenciasHabilitadasPromocion"].push(item.toJSON());
        }
        if (Array.isArray(this.prAgenciasPromocion)) {
            data["prAgenciasPromocion"] = [];
            for (let item of this.prAgenciasPromocion)
                data["prAgenciasPromocion"].push(item.toJSON());
        }
        if (Array.isArray(this.prProductoPrecio)) {
            data["prProductoPrecio"] = [];
            for (let item of this.prProductoPrecio)
                data["prProductoPrecio"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICoAgencias {
    idAgencia?: number;
    idPersonaJuridica?: number | undefined;
    fechaBaja?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    userId?: number;
    idSupervisor?: number | undefined;
    emiteVoucherEnEmision?: string | undefined;
    dispPagoOnline?: string | undefined;
    disponePagoOnline?: string | undefined;
    idPeriodicidadFactuEfectivo?: number | undefined;
    idPeriodicidadFactuTarjeta?: number | undefined;
    cobranzaAutomatica?: string | undefined;
    facturacionPuntual?: number | undefined;
    idCompania?: number | undefined;
    cobranzaAutomaticaTc?: string | undefined;
    urlPagoOnline?: string | undefined;
    mayorista?: string | undefined;
    requiereAceptacionCondiciones?: string | undefined;
    pathLogo?: string | undefined;
    markUp?: number | undefined;
    modificaMarkUp?: number | undefined;
    minimoMarkUp?: number | undefined;
    marcaCtaCteIndividual?: string | undefined;
    showLogoOmint?: boolean | undefined;
    marcaAgenciaSupervisora?: string | undefined;
    requiereMailTitular?: string | undefined;
    muestraCondicionesGenerales?: boolean | undefined;
    maximoMarkUp?: number | undefined;
    muestraLogoAgencia?: boolean | undefined;
    idPersonaFisica?: number | undefined;
    tipoPersona?: string | undefined;
    idTipoCalculoImporte?: number | undefined;
    idSegmentosAgencias?: number | undefined;
    leyenda?: string | undefined;
    leyendaIngles?: string | undefined;
    codigoSusep?: string | undefined;
    identificarVenda?: string | undefined;
    enviaMensaje?: boolean | undefined;
    idPeriodicidadFactuEfectivoNavigation?: CoPeriodicidadFacturacion | undefined;
    idPeriodicidadFactuTarjetaNavigation?: CoPeriodicidadFacturacion | undefined;
    idPersonaJuridicaNavigation?: PePersonaJuridica | undefined;
    coAgenciaCanalDistribucion?: CoAgenciaCanalDistribucion[] | undefined;
    coAgenciasBudget?: CoAgenciasBudget[] | undefined;
    coAgenciasCobranza?: CoAgenciasCobranza[] | undefined;
    coAgenciasEjecutivo?: CoAgenciasEjecutivo[] | undefined;
    coAgenciasEjecutivoResponsable?: CoAgenciasEjecutivoResponsable[] | undefined;
    coAgenciasRepresentante?: CoAgenciasRepresentante[] | undefined;
    coComisionesAgencias?: CoComisionesAgencias[] | undefined;
    coCotizacionesIndividuosLog?: CoCotizacionesIndividuosLog[] | undefined;
    coFormasPagoAgencias?: CoFormasPagoAgencias[] | undefined;
    coSellerIdcanalesVentas?: CoSellerIdcanalesVentas[] | undefined;
    coVendedoresAgencias?: CoVendedoresAgencias[] | undefined;
    peAlteracaoPessoaFisica?: PeAlteracaoPessoaFisica[] | undefined;
    peAutorizacaoAlteracao?: PeAutorizacaoAlteracao[] | undefined;
    prAgenciasHabilitadasPromocion?: PrAgenciasHabilitadasPromocion[] | undefined;
    prAgenciasPromocion?: PrAgenciasPromocion[] | undefined;
    prProductoPrecio?: PrProductoPrecio[] | undefined;
}

export class CoPeriodicidadFacturacion implements ICoPeriodicidadFacturacion {
    idPeriodicidadFactu?: number;
    codigoPeriodicidadFactu?: string | undefined;
    descripcionPeriodicidadFactu?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    coAgenciasIdPeriodicidadFactuEfectivoNavigation?: CoAgencias[] | undefined;
    coAgenciasIdPeriodicidadFactuTarjetaNavigation?: CoAgencias[] | undefined;

    constructor(data?: ICoPeriodicidadFacturacion) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idPeriodicidadFactu = _data["idPeriodicidadFactu"];
            this.codigoPeriodicidadFactu = _data["codigoPeriodicidadFactu"];
            this.descripcionPeriodicidadFactu = _data["descripcionPeriodicidadFactu"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            if (Array.isArray(_data["coAgenciasIdPeriodicidadFactuEfectivoNavigation"])) {
                this.coAgenciasIdPeriodicidadFactuEfectivoNavigation = [] as any;
                for (let item of _data["coAgenciasIdPeriodicidadFactuEfectivoNavigation"])
                    this.coAgenciasIdPeriodicidadFactuEfectivoNavigation!.push(CoAgencias.fromJS(item));
            }
            if (Array.isArray(_data["coAgenciasIdPeriodicidadFactuTarjetaNavigation"])) {
                this.coAgenciasIdPeriodicidadFactuTarjetaNavigation = [] as any;
                for (let item of _data["coAgenciasIdPeriodicidadFactuTarjetaNavigation"])
                    this.coAgenciasIdPeriodicidadFactuTarjetaNavigation!.push(CoAgencias.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CoPeriodicidadFacturacion {
        data = typeof data === 'object' ? data : {};
        let result = new CoPeriodicidadFacturacion();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idPeriodicidadFactu"] = this.idPeriodicidadFactu;
        data["codigoPeriodicidadFactu"] = this.codigoPeriodicidadFactu;
        data["descripcionPeriodicidadFactu"] = this.descripcionPeriodicidadFactu;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        if (Array.isArray(this.coAgenciasIdPeriodicidadFactuEfectivoNavigation)) {
            data["coAgenciasIdPeriodicidadFactuEfectivoNavigation"] = [];
            for (let item of this.coAgenciasIdPeriodicidadFactuEfectivoNavigation)
                data["coAgenciasIdPeriodicidadFactuEfectivoNavigation"].push(item.toJSON());
        }
        if (Array.isArray(this.coAgenciasIdPeriodicidadFactuTarjetaNavigation)) {
            data["coAgenciasIdPeriodicidadFactuTarjetaNavigation"] = [];
            for (let item of this.coAgenciasIdPeriodicidadFactuTarjetaNavigation)
                data["coAgenciasIdPeriodicidadFactuTarjetaNavigation"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICoPeriodicidadFacturacion {
    idPeriodicidadFactu?: number;
    codigoPeriodicidadFactu?: string | undefined;
    descripcionPeriodicidadFactu?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    coAgenciasIdPeriodicidadFactuEfectivoNavigation?: CoAgencias[] | undefined;
    coAgenciasIdPeriodicidadFactuTarjetaNavigation?: CoAgencias[] | undefined;
}

export class CoAgenciaCanalDistribucion implements ICoAgenciaCanalDistribucion {
    idAgenciaCanalDistribucion?: number;
    idAgencia?: number;
    idCanalDistribucion?: number;
    solicitaCondicionesGenerales?: string | undefined;
    idAgenciaNavigation?: CoAgencias | undefined;
    idCanalDistribucionNavigation?: CoCanalDistribucion | undefined;

    constructor(data?: ICoAgenciaCanalDistribucion) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idAgenciaCanalDistribucion = _data["idAgenciaCanalDistribucion"];
            this.idAgencia = _data["idAgencia"];
            this.idCanalDistribucion = _data["idCanalDistribucion"];
            this.solicitaCondicionesGenerales = _data["solicitaCondicionesGenerales"];
            this.idAgenciaNavigation = _data["idAgenciaNavigation"] ? CoAgencias.fromJS(_data["idAgenciaNavigation"]) : <any>undefined;
            this.idCanalDistribucionNavigation = _data["idCanalDistribucionNavigation"] ? CoCanalDistribucion.fromJS(_data["idCanalDistribucionNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): CoAgenciaCanalDistribucion {
        data = typeof data === 'object' ? data : {};
        let result = new CoAgenciaCanalDistribucion();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idAgenciaCanalDistribucion"] = this.idAgenciaCanalDistribucion;
        data["idAgencia"] = this.idAgencia;
        data["idCanalDistribucion"] = this.idCanalDistribucion;
        data["solicitaCondicionesGenerales"] = this.solicitaCondicionesGenerales;
        data["idAgenciaNavigation"] = this.idAgenciaNavigation ? this.idAgenciaNavigation.toJSON() : <any>undefined;
        data["idCanalDistribucionNavigation"] = this.idCanalDistribucionNavigation ? this.idCanalDistribucionNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface ICoAgenciaCanalDistribucion {
    idAgenciaCanalDistribucion?: number;
    idAgencia?: number;
    idCanalDistribucion?: number;
    solicitaCondicionesGenerales?: string | undefined;
    idAgenciaNavigation?: CoAgencias | undefined;
    idCanalDistribucionNavigation?: CoCanalDistribucion | undefined;
}

export class CoCanalDistribucion implements ICoCanalDistribucion {
    idCanalDistribucion?: number;
    codigoCanalDistribucion?: string | undefined;
    descripcionCanalDistribucion?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    coAgenciaCanalDistribucion?: CoAgenciaCanalDistribucion[] | undefined;
    coSellerIdcanalesVentas?: CoSellerIdcanalesVentas[] | undefined;

    constructor(data?: ICoCanalDistribucion) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idCanalDistribucion = _data["idCanalDistribucion"];
            this.codigoCanalDistribucion = _data["codigoCanalDistribucion"];
            this.descripcionCanalDistribucion = _data["descripcionCanalDistribucion"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            if (Array.isArray(_data["coAgenciaCanalDistribucion"])) {
                this.coAgenciaCanalDistribucion = [] as any;
                for (let item of _data["coAgenciaCanalDistribucion"])
                    this.coAgenciaCanalDistribucion!.push(CoAgenciaCanalDistribucion.fromJS(item));
            }
            if (Array.isArray(_data["coSellerIdcanalesVentas"])) {
                this.coSellerIdcanalesVentas = [] as any;
                for (let item of _data["coSellerIdcanalesVentas"])
                    this.coSellerIdcanalesVentas!.push(CoSellerIdcanalesVentas.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CoCanalDistribucion {
        data = typeof data === 'object' ? data : {};
        let result = new CoCanalDistribucion();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idCanalDistribucion"] = this.idCanalDistribucion;
        data["codigoCanalDistribucion"] = this.codigoCanalDistribucion;
        data["descripcionCanalDistribucion"] = this.descripcionCanalDistribucion;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        if (Array.isArray(this.coAgenciaCanalDistribucion)) {
            data["coAgenciaCanalDistribucion"] = [];
            for (let item of this.coAgenciaCanalDistribucion)
                data["coAgenciaCanalDistribucion"].push(item.toJSON());
        }
        if (Array.isArray(this.coSellerIdcanalesVentas)) {
            data["coSellerIdcanalesVentas"] = [];
            for (let item of this.coSellerIdcanalesVentas)
                data["coSellerIdcanalesVentas"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICoCanalDistribucion {
    idCanalDistribucion?: number;
    codigoCanalDistribucion?: string | undefined;
    descripcionCanalDistribucion?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    coAgenciaCanalDistribucion?: CoAgenciaCanalDistribucion[] | undefined;
    coSellerIdcanalesVentas?: CoSellerIdcanalesVentas[] | undefined;
}

export class CoSellerIdcanalesVentas implements ICoSellerIdcanalesVentas {
    idSellerIdcanalesVentas?: number;
    idAgencia?: number;
    idCanalComercial?: number;
    idCanalDistribucion?: number;
    idTipoCanalVenta?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    sellerId?: string | undefined;
    descripcion?: string | undefined;
    headerHtml?: string | undefined;
    link?: string | undefined;
    attr1?: string | undefined;
    attr2?: string | undefined;
    fechaBaja?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    userId?: number | undefined;
    email?: string | undefined;
    footerHtml?: string | undefined;
    tieneAsociados?: boolean | undefined;
    idAgenciaNavigation?: CoAgencias | undefined;
    idCanalComercialNavigation?: CoCanalComercial | undefined;
    idCanalDistribucionNavigation?: CoCanalDistribucion | undefined;
    idTipoCanalVentaNavigation?: CoTipoCanalVenta | undefined;
    poPolizas?: PoPolizas[] | undefined;
    prSellerIdhabilitadosPromocion?: PrSellerIdhabilitadosPromocion[] | undefined;

    constructor(data?: ICoSellerIdcanalesVentas) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idSellerIdcanalesVentas = _data["idSellerIdcanalesVentas"];
            this.idAgencia = _data["idAgencia"];
            this.idCanalComercial = _data["idCanalComercial"];
            this.idCanalDistribucion = _data["idCanalDistribucion"];
            this.idTipoCanalVenta = _data["idTipoCanalVenta"];
            this.fechaInicioVigencia = _data["fechaInicioVigencia"] ? new Date(_data["fechaInicioVigencia"].toString()) : <any>undefined;
            this.fechaFinVigencia = _data["fechaFinVigencia"] ? new Date(_data["fechaFinVigencia"].toString()) : <any>undefined;
            this.sellerId = _data["sellerId"];
            this.descripcion = _data["descripcion"];
            this.headerHtml = _data["headerHtml"];
            this.link = _data["link"];
            this.attr1 = _data["attr1"];
            this.attr2 = _data["attr2"];
            this.fechaBaja = _data["fechaBaja"] ? new Date(_data["fechaBaja"].toString()) : <any>undefined;
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.userId = _data["userId"];
            this.email = _data["email"];
            this.footerHtml = _data["footerHtml"];
            this.tieneAsociados = _data["tieneAsociados"];
            this.idAgenciaNavigation = _data["idAgenciaNavigation"] ? CoAgencias.fromJS(_data["idAgenciaNavigation"]) : <any>undefined;
            this.idCanalComercialNavigation = _data["idCanalComercialNavigation"] ? CoCanalComercial.fromJS(_data["idCanalComercialNavigation"]) : <any>undefined;
            this.idCanalDistribucionNavigation = _data["idCanalDistribucionNavigation"] ? CoCanalDistribucion.fromJS(_data["idCanalDistribucionNavigation"]) : <any>undefined;
            this.idTipoCanalVentaNavigation = _data["idTipoCanalVentaNavigation"] ? CoTipoCanalVenta.fromJS(_data["idTipoCanalVentaNavigation"]) : <any>undefined;
            if (Array.isArray(_data["poPolizas"])) {
                this.poPolizas = [] as any;
                for (let item of _data["poPolizas"])
                    this.poPolizas!.push(PoPolizas.fromJS(item));
            }
            if (Array.isArray(_data["prSellerIdhabilitadosPromocion"])) {
                this.prSellerIdhabilitadosPromocion = [] as any;
                for (let item of _data["prSellerIdhabilitadosPromocion"])
                    this.prSellerIdhabilitadosPromocion!.push(PrSellerIdhabilitadosPromocion.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CoSellerIdcanalesVentas {
        data = typeof data === 'object' ? data : {};
        let result = new CoSellerIdcanalesVentas();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idSellerIdcanalesVentas"] = this.idSellerIdcanalesVentas;
        data["idAgencia"] = this.idAgencia;
        data["idCanalComercial"] = this.idCanalComercial;
        data["idCanalDistribucion"] = this.idCanalDistribucion;
        data["idTipoCanalVenta"] = this.idTipoCanalVenta;
        data["fechaInicioVigencia"] = this.fechaInicioVigencia ? this.fechaInicioVigencia.toISOString() : <any>undefined;
        data["fechaFinVigencia"] = this.fechaFinVigencia ? this.fechaFinVigencia.toISOString() : <any>undefined;
        data["sellerId"] = this.sellerId;
        data["descripcion"] = this.descripcion;
        data["headerHtml"] = this.headerHtml;
        data["link"] = this.link;
        data["attr1"] = this.attr1;
        data["attr2"] = this.attr2;
        data["fechaBaja"] = this.fechaBaja ? this.fechaBaja.toISOString() : <any>undefined;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["userId"] = this.userId;
        data["email"] = this.email;
        data["footerHtml"] = this.footerHtml;
        data["tieneAsociados"] = this.tieneAsociados;
        data["idAgenciaNavigation"] = this.idAgenciaNavigation ? this.idAgenciaNavigation.toJSON() : <any>undefined;
        data["idCanalComercialNavigation"] = this.idCanalComercialNavigation ? this.idCanalComercialNavigation.toJSON() : <any>undefined;
        data["idCanalDistribucionNavigation"] = this.idCanalDistribucionNavigation ? this.idCanalDistribucionNavigation.toJSON() : <any>undefined;
        data["idTipoCanalVentaNavigation"] = this.idTipoCanalVentaNavigation ? this.idTipoCanalVentaNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.poPolizas)) {
            data["poPolizas"] = [];
            for (let item of this.poPolizas)
                data["poPolizas"].push(item.toJSON());
        }
        if (Array.isArray(this.prSellerIdhabilitadosPromocion)) {
            data["prSellerIdhabilitadosPromocion"] = [];
            for (let item of this.prSellerIdhabilitadosPromocion)
                data["prSellerIdhabilitadosPromocion"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICoSellerIdcanalesVentas {
    idSellerIdcanalesVentas?: number;
    idAgencia?: number;
    idCanalComercial?: number;
    idCanalDistribucion?: number;
    idTipoCanalVenta?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    sellerId?: string | undefined;
    descripcion?: string | undefined;
    headerHtml?: string | undefined;
    link?: string | undefined;
    attr1?: string | undefined;
    attr2?: string | undefined;
    fechaBaja?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    userId?: number | undefined;
    email?: string | undefined;
    footerHtml?: string | undefined;
    tieneAsociados?: boolean | undefined;
    idAgenciaNavigation?: CoAgencias | undefined;
    idCanalComercialNavigation?: CoCanalComercial | undefined;
    idCanalDistribucionNavigation?: CoCanalDistribucion | undefined;
    idTipoCanalVentaNavigation?: CoTipoCanalVenta | undefined;
    poPolizas?: PoPolizas[] | undefined;
    prSellerIdhabilitadosPromocion?: PrSellerIdhabilitadosPromocion[] | undefined;
}

export class CoCanalComercial implements ICoCanalComercial {
    idCanalComercial?: number;
    codigoCanalComercial?: string | undefined;
    descripcionCanalComercial?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    coSellerIdcanalesVentas?: CoSellerIdcanalesVentas[] | undefined;

    constructor(data?: ICoCanalComercial) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idCanalComercial = _data["idCanalComercial"];
            this.codigoCanalComercial = _data["codigoCanalComercial"];
            this.descripcionCanalComercial = _data["descripcionCanalComercial"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            if (Array.isArray(_data["coSellerIdcanalesVentas"])) {
                this.coSellerIdcanalesVentas = [] as any;
                for (let item of _data["coSellerIdcanalesVentas"])
                    this.coSellerIdcanalesVentas!.push(CoSellerIdcanalesVentas.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CoCanalComercial {
        data = typeof data === 'object' ? data : {};
        let result = new CoCanalComercial();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idCanalComercial"] = this.idCanalComercial;
        data["codigoCanalComercial"] = this.codigoCanalComercial;
        data["descripcionCanalComercial"] = this.descripcionCanalComercial;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        if (Array.isArray(this.coSellerIdcanalesVentas)) {
            data["coSellerIdcanalesVentas"] = [];
            for (let item of this.coSellerIdcanalesVentas)
                data["coSellerIdcanalesVentas"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICoCanalComercial {
    idCanalComercial?: number;
    codigoCanalComercial?: string | undefined;
    descripcionCanalComercial?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    coSellerIdcanalesVentas?: CoSellerIdcanalesVentas[] | undefined;
}

export class CoTipoCanalVenta implements ICoTipoCanalVenta {
    idTipoCanalVenta?: number;
    codigoTipoCanalVenta?: string | undefined;
    descripcionTipoCanalVenta?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    coSellerIdcanalesVentas?: CoSellerIdcanalesVentas[] | undefined;

    constructor(data?: ICoTipoCanalVenta) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idTipoCanalVenta = _data["idTipoCanalVenta"];
            this.codigoTipoCanalVenta = _data["codigoTipoCanalVenta"];
            this.descripcionTipoCanalVenta = _data["descripcionTipoCanalVenta"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            if (Array.isArray(_data["coSellerIdcanalesVentas"])) {
                this.coSellerIdcanalesVentas = [] as any;
                for (let item of _data["coSellerIdcanalesVentas"])
                    this.coSellerIdcanalesVentas!.push(CoSellerIdcanalesVentas.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CoTipoCanalVenta {
        data = typeof data === 'object' ? data : {};
        let result = new CoTipoCanalVenta();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idTipoCanalVenta"] = this.idTipoCanalVenta;
        data["codigoTipoCanalVenta"] = this.codigoTipoCanalVenta;
        data["descripcionTipoCanalVenta"] = this.descripcionTipoCanalVenta;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        if (Array.isArray(this.coSellerIdcanalesVentas)) {
            data["coSellerIdcanalesVentas"] = [];
            for (let item of this.coSellerIdcanalesVentas)
                data["coSellerIdcanalesVentas"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICoTipoCanalVenta {
    idTipoCanalVenta?: number;
    codigoTipoCanalVenta?: string | undefined;
    descripcionTipoCanalVenta?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    coSellerIdcanalesVentas?: CoSellerIdcanalesVentas[] | undefined;
}

export class PoPolizas implements IPoPolizas {
    idPoliza?: number;
    numeroPoliza?: string | undefined;
    fechaEmision?: Date;
    fechaDesde?: Date;
    fechaHasta?: Date;
    fechaAnulacion?: Date | undefined;
    idProducto?: number;
    importeTotal?: number | undefined;
    idVendedor?: number | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idAgencia?: number | undefined;
    apellidoContactoEmergencia?: string | undefined;
    nombreContactoEmergencia?: string | undefined;
    telefonoContactoEmergencia?: string | undefined;
    eMailContactoEmergencia?: string | undefined;
    diasProductoAnual?: number | undefined;
    codigoCupon?: string | undefined;
    idEnBroker?: string | undefined;
    idCanalDistribucion?: number | undefined;
    idSellerIdcanalesVentas?: number | undefined;
    porcentajeAdicionalAnticipo?: number | undefined;
    importeAgencia?: number | undefined;
    idDestino?: number | undefined;
    idMotivoViaje?: number | undefined;
    comentario?: string | undefined;
    tipoVoucher?: string | undefined;
    idParentVoucher?: number | undefined;
    salesChannelType?: string | undefined;
    salesChannelCode?: string | undefined;
    codigoAreaContactoEmergencia?: string | undefined;
    ciudadOrigen?: string | undefined;
    idConsultor?: number | undefined;
    couponTypeId?: number | undefined;
    productTypeId?: number | undefined;
    qtDiasMultiViagem?: number | undefined;
    idProductoNavigation?: PrProducto | undefined;
    idSellerIdcanalesVentasNavigation?: CoSellerIdcanalesVentas | undefined;
    idVendedorNavigation?: CoVendedoresAgencias | undefined;
    coConsumosVentas?: CoConsumosVentas[] | undefined;
    poBeneficiariosPoliza?: PoBeneficiariosPoliza[] | undefined;
    poDetalleFormasPago?: PoDetalleFormasPago[] | undefined;
    poHistoricoVoucher?: PoHistoricoVoucher[] | undefined;
    prLogPromocionesAplicadas?: PrLogPromocionesAplicadas[] | undefined;

    constructor(data?: IPoPolizas) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idPoliza = _data["idPoliza"];
            this.numeroPoliza = _data["numeroPoliza"];
            this.fechaEmision = _data["fechaEmision"] ? new Date(_data["fechaEmision"].toString()) : <any>undefined;
            this.fechaDesde = _data["fechaDesde"] ? new Date(_data["fechaDesde"].toString()) : <any>undefined;
            this.fechaHasta = _data["fechaHasta"] ? new Date(_data["fechaHasta"].toString()) : <any>undefined;
            this.fechaAnulacion = _data["fechaAnulacion"] ? new Date(_data["fechaAnulacion"].toString()) : <any>undefined;
            this.idProducto = _data["idProducto"];
            this.importeTotal = _data["importeTotal"];
            this.idVendedor = _data["idVendedor"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idAgencia = _data["idAgencia"];
            this.apellidoContactoEmergencia = _data["apellidoContactoEmergencia"];
            this.nombreContactoEmergencia = _data["nombreContactoEmergencia"];
            this.telefonoContactoEmergencia = _data["telefonoContactoEmergencia"];
            this.eMailContactoEmergencia = _data["eMailContactoEmergencia"];
            this.diasProductoAnual = _data["diasProductoAnual"];
            this.codigoCupon = _data["codigoCupon"];
            this.idEnBroker = _data["idEnBroker"];
            this.idCanalDistribucion = _data["idCanalDistribucion"];
            this.idSellerIdcanalesVentas = _data["idSellerIdcanalesVentas"];
            this.porcentajeAdicionalAnticipo = _data["porcentajeAdicionalAnticipo"];
            this.importeAgencia = _data["importeAgencia"];
            this.idDestino = _data["idDestino"];
            this.idMotivoViaje = _data["idMotivoViaje"];
            this.comentario = _data["comentario"];
            this.tipoVoucher = _data["tipoVoucher"];
            this.idParentVoucher = _data["idParentVoucher"];
            this.salesChannelType = _data["salesChannelType"];
            this.salesChannelCode = _data["salesChannelCode"];
            this.codigoAreaContactoEmergencia = _data["codigoAreaContactoEmergencia"];
            this.ciudadOrigen = _data["ciudadOrigen"];
            this.idConsultor = _data["idConsultor"];
            this.couponTypeId = _data["couponTypeId"];
            this.productTypeId = _data["productTypeId"];
            this.qtDiasMultiViagem = _data["qtDiasMultiViagem"];
            this.idProductoNavigation = _data["idProductoNavigation"] ? PrProducto.fromJS(_data["idProductoNavigation"]) : <any>undefined;
            this.idSellerIdcanalesVentasNavigation = _data["idSellerIdcanalesVentasNavigation"] ? CoSellerIdcanalesVentas.fromJS(_data["idSellerIdcanalesVentasNavigation"]) : <any>undefined;
            this.idVendedorNavigation = _data["idVendedorNavigation"] ? CoVendedoresAgencias.fromJS(_data["idVendedorNavigation"]) : <any>undefined;
            if (Array.isArray(_data["coConsumosVentas"])) {
                this.coConsumosVentas = [] as any;
                for (let item of _data["coConsumosVentas"])
                    this.coConsumosVentas!.push(CoConsumosVentas.fromJS(item));
            }
            if (Array.isArray(_data["poBeneficiariosPoliza"])) {
                this.poBeneficiariosPoliza = [] as any;
                for (let item of _data["poBeneficiariosPoliza"])
                    this.poBeneficiariosPoliza!.push(PoBeneficiariosPoliza.fromJS(item));
            }
            if (Array.isArray(_data["poDetalleFormasPago"])) {
                this.poDetalleFormasPago = [] as any;
                for (let item of _data["poDetalleFormasPago"])
                    this.poDetalleFormasPago!.push(PoDetalleFormasPago.fromJS(item));
            }
            if (Array.isArray(_data["poHistoricoVoucher"])) {
                this.poHistoricoVoucher = [] as any;
                for (let item of _data["poHistoricoVoucher"])
                    this.poHistoricoVoucher!.push(PoHistoricoVoucher.fromJS(item));
            }
            if (Array.isArray(_data["prLogPromocionesAplicadas"])) {
                this.prLogPromocionesAplicadas = [] as any;
                for (let item of _data["prLogPromocionesAplicadas"])
                    this.prLogPromocionesAplicadas!.push(PrLogPromocionesAplicadas.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PoPolizas {
        data = typeof data === 'object' ? data : {};
        let result = new PoPolizas();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idPoliza"] = this.idPoliza;
        data["numeroPoliza"] = this.numeroPoliza;
        data["fechaEmision"] = this.fechaEmision ? this.fechaEmision.toISOString() : <any>undefined;
        data["fechaDesde"] = this.fechaDesde ? this.fechaDesde.toISOString() : <any>undefined;
        data["fechaHasta"] = this.fechaHasta ? this.fechaHasta.toISOString() : <any>undefined;
        data["fechaAnulacion"] = this.fechaAnulacion ? this.fechaAnulacion.toISOString() : <any>undefined;
        data["idProducto"] = this.idProducto;
        data["importeTotal"] = this.importeTotal;
        data["idVendedor"] = this.idVendedor;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idAgencia"] = this.idAgencia;
        data["apellidoContactoEmergencia"] = this.apellidoContactoEmergencia;
        data["nombreContactoEmergencia"] = this.nombreContactoEmergencia;
        data["telefonoContactoEmergencia"] = this.telefonoContactoEmergencia;
        data["eMailContactoEmergencia"] = this.eMailContactoEmergencia;
        data["diasProductoAnual"] = this.diasProductoAnual;
        data["codigoCupon"] = this.codigoCupon;
        data["idEnBroker"] = this.idEnBroker;
        data["idCanalDistribucion"] = this.idCanalDistribucion;
        data["idSellerIdcanalesVentas"] = this.idSellerIdcanalesVentas;
        data["porcentajeAdicionalAnticipo"] = this.porcentajeAdicionalAnticipo;
        data["importeAgencia"] = this.importeAgencia;
        data["idDestino"] = this.idDestino;
        data["idMotivoViaje"] = this.idMotivoViaje;
        data["comentario"] = this.comentario;
        data["tipoVoucher"] = this.tipoVoucher;
        data["idParentVoucher"] = this.idParentVoucher;
        data["salesChannelType"] = this.salesChannelType;
        data["salesChannelCode"] = this.salesChannelCode;
        data["codigoAreaContactoEmergencia"] = this.codigoAreaContactoEmergencia;
        data["ciudadOrigen"] = this.ciudadOrigen;
        data["idConsultor"] = this.idConsultor;
        data["couponTypeId"] = this.couponTypeId;
        data["productTypeId"] = this.productTypeId;
        data["qtDiasMultiViagem"] = this.qtDiasMultiViagem;
        data["idProductoNavigation"] = this.idProductoNavigation ? this.idProductoNavigation.toJSON() : <any>undefined;
        data["idSellerIdcanalesVentasNavigation"] = this.idSellerIdcanalesVentasNavigation ? this.idSellerIdcanalesVentasNavigation.toJSON() : <any>undefined;
        data["idVendedorNavigation"] = this.idVendedorNavigation ? this.idVendedorNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.coConsumosVentas)) {
            data["coConsumosVentas"] = [];
            for (let item of this.coConsumosVentas)
                data["coConsumosVentas"].push(item.toJSON());
        }
        if (Array.isArray(this.poBeneficiariosPoliza)) {
            data["poBeneficiariosPoliza"] = [];
            for (let item of this.poBeneficiariosPoliza)
                data["poBeneficiariosPoliza"].push(item.toJSON());
        }
        if (Array.isArray(this.poDetalleFormasPago)) {
            data["poDetalleFormasPago"] = [];
            for (let item of this.poDetalleFormasPago)
                data["poDetalleFormasPago"].push(item.toJSON());
        }
        if (Array.isArray(this.poHistoricoVoucher)) {
            data["poHistoricoVoucher"] = [];
            for (let item of this.poHistoricoVoucher)
                data["poHistoricoVoucher"].push(item.toJSON());
        }
        if (Array.isArray(this.prLogPromocionesAplicadas)) {
            data["prLogPromocionesAplicadas"] = [];
            for (let item of this.prLogPromocionesAplicadas)
                data["prLogPromocionesAplicadas"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPoPolizas {
    idPoliza?: number;
    numeroPoliza?: string | undefined;
    fechaEmision?: Date;
    fechaDesde?: Date;
    fechaHasta?: Date;
    fechaAnulacion?: Date | undefined;
    idProducto?: number;
    importeTotal?: number | undefined;
    idVendedor?: number | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idAgencia?: number | undefined;
    apellidoContactoEmergencia?: string | undefined;
    nombreContactoEmergencia?: string | undefined;
    telefonoContactoEmergencia?: string | undefined;
    eMailContactoEmergencia?: string | undefined;
    diasProductoAnual?: number | undefined;
    codigoCupon?: string | undefined;
    idEnBroker?: string | undefined;
    idCanalDistribucion?: number | undefined;
    idSellerIdcanalesVentas?: number | undefined;
    porcentajeAdicionalAnticipo?: number | undefined;
    importeAgencia?: number | undefined;
    idDestino?: number | undefined;
    idMotivoViaje?: number | undefined;
    comentario?: string | undefined;
    tipoVoucher?: string | undefined;
    idParentVoucher?: number | undefined;
    salesChannelType?: string | undefined;
    salesChannelCode?: string | undefined;
    codigoAreaContactoEmergencia?: string | undefined;
    ciudadOrigen?: string | undefined;
    idConsultor?: number | undefined;
    couponTypeId?: number | undefined;
    productTypeId?: number | undefined;
    qtDiasMultiViagem?: number | undefined;
    idProductoNavigation?: PrProducto | undefined;
    idSellerIdcanalesVentasNavigation?: CoSellerIdcanalesVentas | undefined;
    idVendedorNavigation?: CoVendedoresAgencias | undefined;
    coConsumosVentas?: CoConsumosVentas[] | undefined;
    poBeneficiariosPoliza?: PoBeneficiariosPoliza[] | undefined;
    poDetalleFormasPago?: PoDetalleFormasPago[] | undefined;
    poHistoricoVoucher?: PoHistoricoVoucher[] | undefined;
    prLogPromocionesAplicadas?: PrLogPromocionesAplicadas[] | undefined;
}

export class PrProducto implements IPrProducto {
    idProducto?: number;
    codigoProducto?: string | undefined;
    denominacionProducto?: string | undefined;
    minimoDias?: number;
    maximoDias?: number;
    edadMaxima?: number;
    leyenda?: string | undefined;
    idTipoCobertura?: number;
    linkproducto?: string | undefined;
    idMoneda?: number;
    coberturaMaxima?: number;
    productoAgencias?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idTipoProducto?: number | undefined;
    idMarca?: number | undefined;
    idTipoViaje?: number | undefined;
    condicionesGenerales?: string | undefined;
    marcaProductoBase?: string | undefined;
    pdfCondicionesGenerales?: string | undefined;
    leyendaValidez?: string | undefined;
    leyendaTratadoEuropa?: string | undefined;
    leyendaValidezIngles?: string | undefined;
    leyendaTratadoEuropaIngles?: string | undefined;
    leyendaIngles?: string | undefined;
    orden?: number | undefined;
    muestraIngles?: boolean | undefined;
    idGrupoRangosEdad?: number | undefined;
    condicionesGenerales2?: string | undefined;
    restricciones?: string | undefined;
    descripcion?: string | undefined;
    rpt?: string | undefined;
    idMarcaNavigation?: PrMarcasProductos | undefined;
    idMonedaNavigation?: BsMonedas | undefined;
    idTipoCoberturaNavigation?: PrTipoCobertura | undefined;
    idTipoViajeNavigation?: PrTipoViaje | undefined;
    coCotizacionesIndividuosLog?: CoCotizacionesIndividuosLog[] | undefined;
    coDetallesVenta?: CoDetallesVenta[] | undefined;
    coDetallesVentaPacksOnline?: CoDetallesVentaPacksOnline[] | undefined;
    coNominasEmpresas?: CoNominasEmpresas[] | undefined;
    poBeneficiariosPoliza?: PoBeneficiariosPoliza[] | undefined;
    poPolizas?: PoPolizas[] | undefined;
    prFormasPagoProducto?: PrFormasPagoProducto[] | undefined;
    prPaquetesProductos?: PrPaquetesProductos[] | undefined;
    prProductoPrecio?: PrProductoPrecio[] | undefined;
    prProductoServicios?: PrProductoServicios[] | undefined;
    prProductosHabilitadosPromocion?: PrProductosHabilitadosPromocion[] | undefined;
    prPromocionProducto?: PrPromocionProducto[] | undefined;
    prRelacionMultiproductoIdProductoHijoNavigation?: PrRelacionMultiproducto[] | undefined;
    prRelacionMultiproductoIdProductoPadreNavigation?: PrRelacionMultiproducto[] | undefined;
    prRelacionProductoModalidad?: PrRelacionProductoModalidad[] | undefined;
    prVigenciaProducto?: PrVigenciaProducto[] | undefined;
    tbProduto?: TbProduto[] | undefined;
    wcfDestinyShowCase?: WcfDestinyShowCase[] | undefined;
    wcfProductAdditionalCoverage?: WcfProductAdditionalCoverage[] | undefined;
    wcfProductAdditionalCoveragePrice?: WcfProductAdditionalCoveragePrice[] | undefined;
    wcfProductShowCaseProduct?: WcfProductShowCase[] | undefined;
    wcfProductShowCaseRelatedProduct?: WcfProductShowCase[] | undefined;
    wcfSpecialAudiencesShowCase?: WcfSpecialAudiencesShowCase[] | undefined;
    wcfTopicShowCase?: WcfTopicShowCase[] | undefined;

    constructor(data?: IPrProducto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idProducto = _data["idProducto"];
            this.codigoProducto = _data["codigoProducto"];
            this.denominacionProducto = _data["denominacionProducto"];
            this.minimoDias = _data["minimoDias"];
            this.maximoDias = _data["maximoDias"];
            this.edadMaxima = _data["edadMaxima"];
            this.leyenda = _data["leyenda"];
            this.idTipoCobertura = _data["idTipoCobertura"];
            this.linkproducto = _data["linkproducto"];
            this.idMoneda = _data["idMoneda"];
            this.coberturaMaxima = _data["coberturaMaxima"];
            this.productoAgencias = _data["productoAgencias"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idTipoProducto = _data["idTipoProducto"];
            this.idMarca = _data["idMarca"];
            this.idTipoViaje = _data["idTipoViaje"];
            this.condicionesGenerales = _data["condicionesGenerales"];
            this.marcaProductoBase = _data["marcaProductoBase"];
            this.pdfCondicionesGenerales = _data["pdfCondicionesGenerales"];
            this.leyendaValidez = _data["leyendaValidez"];
            this.leyendaTratadoEuropa = _data["leyendaTratadoEuropa"];
            this.leyendaValidezIngles = _data["leyendaValidezIngles"];
            this.leyendaTratadoEuropaIngles = _data["leyendaTratadoEuropaIngles"];
            this.leyendaIngles = _data["leyendaIngles"];
            this.orden = _data["orden"];
            this.muestraIngles = _data["muestraIngles"];
            this.idGrupoRangosEdad = _data["idGrupoRangosEdad"];
            this.condicionesGenerales2 = _data["condicionesGenerales2"];
            this.restricciones = _data["restricciones"];
            this.descripcion = _data["descripcion"];
            this.rpt = _data["rpt"];
            this.idMarcaNavigation = _data["idMarcaNavigation"] ? PrMarcasProductos.fromJS(_data["idMarcaNavigation"]) : <any>undefined;
            this.idMonedaNavigation = _data["idMonedaNavigation"] ? BsMonedas.fromJS(_data["idMonedaNavigation"]) : <any>undefined;
            this.idTipoCoberturaNavigation = _data["idTipoCoberturaNavigation"] ? PrTipoCobertura.fromJS(_data["idTipoCoberturaNavigation"]) : <any>undefined;
            this.idTipoViajeNavigation = _data["idTipoViajeNavigation"] ? PrTipoViaje.fromJS(_data["idTipoViajeNavigation"]) : <any>undefined;
            if (Array.isArray(_data["coCotizacionesIndividuosLog"])) {
                this.coCotizacionesIndividuosLog = [] as any;
                for (let item of _data["coCotizacionesIndividuosLog"])
                    this.coCotizacionesIndividuosLog!.push(CoCotizacionesIndividuosLog.fromJS(item));
            }
            if (Array.isArray(_data["coDetallesVenta"])) {
                this.coDetallesVenta = [] as any;
                for (let item of _data["coDetallesVenta"])
                    this.coDetallesVenta!.push(CoDetallesVenta.fromJS(item));
            }
            if (Array.isArray(_data["coDetallesVentaPacksOnline"])) {
                this.coDetallesVentaPacksOnline = [] as any;
                for (let item of _data["coDetallesVentaPacksOnline"])
                    this.coDetallesVentaPacksOnline!.push(CoDetallesVentaPacksOnline.fromJS(item));
            }
            if (Array.isArray(_data["coNominasEmpresas"])) {
                this.coNominasEmpresas = [] as any;
                for (let item of _data["coNominasEmpresas"])
                    this.coNominasEmpresas!.push(CoNominasEmpresas.fromJS(item));
            }
            if (Array.isArray(_data["poBeneficiariosPoliza"])) {
                this.poBeneficiariosPoliza = [] as any;
                for (let item of _data["poBeneficiariosPoliza"])
                    this.poBeneficiariosPoliza!.push(PoBeneficiariosPoliza.fromJS(item));
            }
            if (Array.isArray(_data["poPolizas"])) {
                this.poPolizas = [] as any;
                for (let item of _data["poPolizas"])
                    this.poPolizas!.push(PoPolizas.fromJS(item));
            }
            if (Array.isArray(_data["prFormasPagoProducto"])) {
                this.prFormasPagoProducto = [] as any;
                for (let item of _data["prFormasPagoProducto"])
                    this.prFormasPagoProducto!.push(PrFormasPagoProducto.fromJS(item));
            }
            if (Array.isArray(_data["prPaquetesProductos"])) {
                this.prPaquetesProductos = [] as any;
                for (let item of _data["prPaquetesProductos"])
                    this.prPaquetesProductos!.push(PrPaquetesProductos.fromJS(item));
            }
            if (Array.isArray(_data["prProductoPrecio"])) {
                this.prProductoPrecio = [] as any;
                for (let item of _data["prProductoPrecio"])
                    this.prProductoPrecio!.push(PrProductoPrecio.fromJS(item));
            }
            if (Array.isArray(_data["prProductoServicios"])) {
                this.prProductoServicios = [] as any;
                for (let item of _data["prProductoServicios"])
                    this.prProductoServicios!.push(PrProductoServicios.fromJS(item));
            }
            if (Array.isArray(_data["prProductosHabilitadosPromocion"])) {
                this.prProductosHabilitadosPromocion = [] as any;
                for (let item of _data["prProductosHabilitadosPromocion"])
                    this.prProductosHabilitadosPromocion!.push(PrProductosHabilitadosPromocion.fromJS(item));
            }
            if (Array.isArray(_data["prPromocionProducto"])) {
                this.prPromocionProducto = [] as any;
                for (let item of _data["prPromocionProducto"])
                    this.prPromocionProducto!.push(PrPromocionProducto.fromJS(item));
            }
            if (Array.isArray(_data["prRelacionMultiproductoIdProductoHijoNavigation"])) {
                this.prRelacionMultiproductoIdProductoHijoNavigation = [] as any;
                for (let item of _data["prRelacionMultiproductoIdProductoHijoNavigation"])
                    this.prRelacionMultiproductoIdProductoHijoNavigation!.push(PrRelacionMultiproducto.fromJS(item));
            }
            if (Array.isArray(_data["prRelacionMultiproductoIdProductoPadreNavigation"])) {
                this.prRelacionMultiproductoIdProductoPadreNavigation = [] as any;
                for (let item of _data["prRelacionMultiproductoIdProductoPadreNavigation"])
                    this.prRelacionMultiproductoIdProductoPadreNavigation!.push(PrRelacionMultiproducto.fromJS(item));
            }
            if (Array.isArray(_data["prRelacionProductoModalidad"])) {
                this.prRelacionProductoModalidad = [] as any;
                for (let item of _data["prRelacionProductoModalidad"])
                    this.prRelacionProductoModalidad!.push(PrRelacionProductoModalidad.fromJS(item));
            }
            if (Array.isArray(_data["prVigenciaProducto"])) {
                this.prVigenciaProducto = [] as any;
                for (let item of _data["prVigenciaProducto"])
                    this.prVigenciaProducto!.push(PrVigenciaProducto.fromJS(item));
            }
            if (Array.isArray(_data["tbProduto"])) {
                this.tbProduto = [] as any;
                for (let item of _data["tbProduto"])
                    this.tbProduto!.push(TbProduto.fromJS(item));
            }
            if (Array.isArray(_data["wcfDestinyShowCase"])) {
                this.wcfDestinyShowCase = [] as any;
                for (let item of _data["wcfDestinyShowCase"])
                    this.wcfDestinyShowCase!.push(WcfDestinyShowCase.fromJS(item));
            }
            if (Array.isArray(_data["wcfProductAdditionalCoverage"])) {
                this.wcfProductAdditionalCoverage = [] as any;
                for (let item of _data["wcfProductAdditionalCoverage"])
                    this.wcfProductAdditionalCoverage!.push(WcfProductAdditionalCoverage.fromJS(item));
            }
            if (Array.isArray(_data["wcfProductAdditionalCoveragePrice"])) {
                this.wcfProductAdditionalCoveragePrice = [] as any;
                for (let item of _data["wcfProductAdditionalCoveragePrice"])
                    this.wcfProductAdditionalCoveragePrice!.push(WcfProductAdditionalCoveragePrice.fromJS(item));
            }
            if (Array.isArray(_data["wcfProductShowCaseProduct"])) {
                this.wcfProductShowCaseProduct = [] as any;
                for (let item of _data["wcfProductShowCaseProduct"])
                    this.wcfProductShowCaseProduct!.push(WcfProductShowCase.fromJS(item));
            }
            if (Array.isArray(_data["wcfProductShowCaseRelatedProduct"])) {
                this.wcfProductShowCaseRelatedProduct = [] as any;
                for (let item of _data["wcfProductShowCaseRelatedProduct"])
                    this.wcfProductShowCaseRelatedProduct!.push(WcfProductShowCase.fromJS(item));
            }
            if (Array.isArray(_data["wcfSpecialAudiencesShowCase"])) {
                this.wcfSpecialAudiencesShowCase = [] as any;
                for (let item of _data["wcfSpecialAudiencesShowCase"])
                    this.wcfSpecialAudiencesShowCase!.push(WcfSpecialAudiencesShowCase.fromJS(item));
            }
            if (Array.isArray(_data["wcfTopicShowCase"])) {
                this.wcfTopicShowCase = [] as any;
                for (let item of _data["wcfTopicShowCase"])
                    this.wcfTopicShowCase!.push(WcfTopicShowCase.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PrProducto {
        data = typeof data === 'object' ? data : {};
        let result = new PrProducto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idProducto"] = this.idProducto;
        data["codigoProducto"] = this.codigoProducto;
        data["denominacionProducto"] = this.denominacionProducto;
        data["minimoDias"] = this.minimoDias;
        data["maximoDias"] = this.maximoDias;
        data["edadMaxima"] = this.edadMaxima;
        data["leyenda"] = this.leyenda;
        data["idTipoCobertura"] = this.idTipoCobertura;
        data["linkproducto"] = this.linkproducto;
        data["idMoneda"] = this.idMoneda;
        data["coberturaMaxima"] = this.coberturaMaxima;
        data["productoAgencias"] = this.productoAgencias;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idTipoProducto"] = this.idTipoProducto;
        data["idMarca"] = this.idMarca;
        data["idTipoViaje"] = this.idTipoViaje;
        data["condicionesGenerales"] = this.condicionesGenerales;
        data["marcaProductoBase"] = this.marcaProductoBase;
        data["pdfCondicionesGenerales"] = this.pdfCondicionesGenerales;
        data["leyendaValidez"] = this.leyendaValidez;
        data["leyendaTratadoEuropa"] = this.leyendaTratadoEuropa;
        data["leyendaValidezIngles"] = this.leyendaValidezIngles;
        data["leyendaTratadoEuropaIngles"] = this.leyendaTratadoEuropaIngles;
        data["leyendaIngles"] = this.leyendaIngles;
        data["orden"] = this.orden;
        data["muestraIngles"] = this.muestraIngles;
        data["idGrupoRangosEdad"] = this.idGrupoRangosEdad;
        data["condicionesGenerales2"] = this.condicionesGenerales2;
        data["restricciones"] = this.restricciones;
        data["descripcion"] = this.descripcion;
        data["rpt"] = this.rpt;
        data["idMarcaNavigation"] = this.idMarcaNavigation ? this.idMarcaNavigation.toJSON() : <any>undefined;
        data["idMonedaNavigation"] = this.idMonedaNavigation ? this.idMonedaNavigation.toJSON() : <any>undefined;
        data["idTipoCoberturaNavigation"] = this.idTipoCoberturaNavigation ? this.idTipoCoberturaNavigation.toJSON() : <any>undefined;
        data["idTipoViajeNavigation"] = this.idTipoViajeNavigation ? this.idTipoViajeNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.coCotizacionesIndividuosLog)) {
            data["coCotizacionesIndividuosLog"] = [];
            for (let item of this.coCotizacionesIndividuosLog)
                data["coCotizacionesIndividuosLog"].push(item.toJSON());
        }
        if (Array.isArray(this.coDetallesVenta)) {
            data["coDetallesVenta"] = [];
            for (let item of this.coDetallesVenta)
                data["coDetallesVenta"].push(item.toJSON());
        }
        if (Array.isArray(this.coDetallesVentaPacksOnline)) {
            data["coDetallesVentaPacksOnline"] = [];
            for (let item of this.coDetallesVentaPacksOnline)
                data["coDetallesVentaPacksOnline"].push(item.toJSON());
        }
        if (Array.isArray(this.coNominasEmpresas)) {
            data["coNominasEmpresas"] = [];
            for (let item of this.coNominasEmpresas)
                data["coNominasEmpresas"].push(item.toJSON());
        }
        if (Array.isArray(this.poBeneficiariosPoliza)) {
            data["poBeneficiariosPoliza"] = [];
            for (let item of this.poBeneficiariosPoliza)
                data["poBeneficiariosPoliza"].push(item.toJSON());
        }
        if (Array.isArray(this.poPolizas)) {
            data["poPolizas"] = [];
            for (let item of this.poPolizas)
                data["poPolizas"].push(item.toJSON());
        }
        if (Array.isArray(this.prFormasPagoProducto)) {
            data["prFormasPagoProducto"] = [];
            for (let item of this.prFormasPagoProducto)
                data["prFormasPagoProducto"].push(item.toJSON());
        }
        if (Array.isArray(this.prPaquetesProductos)) {
            data["prPaquetesProductos"] = [];
            for (let item of this.prPaquetesProductos)
                data["prPaquetesProductos"].push(item.toJSON());
        }
        if (Array.isArray(this.prProductoPrecio)) {
            data["prProductoPrecio"] = [];
            for (let item of this.prProductoPrecio)
                data["prProductoPrecio"].push(item.toJSON());
        }
        if (Array.isArray(this.prProductoServicios)) {
            data["prProductoServicios"] = [];
            for (let item of this.prProductoServicios)
                data["prProductoServicios"].push(item.toJSON());
        }
        if (Array.isArray(this.prProductosHabilitadosPromocion)) {
            data["prProductosHabilitadosPromocion"] = [];
            for (let item of this.prProductosHabilitadosPromocion)
                data["prProductosHabilitadosPromocion"].push(item.toJSON());
        }
        if (Array.isArray(this.prPromocionProducto)) {
            data["prPromocionProducto"] = [];
            for (let item of this.prPromocionProducto)
                data["prPromocionProducto"].push(item.toJSON());
        }
        if (Array.isArray(this.prRelacionMultiproductoIdProductoHijoNavigation)) {
            data["prRelacionMultiproductoIdProductoHijoNavigation"] = [];
            for (let item of this.prRelacionMultiproductoIdProductoHijoNavigation)
                data["prRelacionMultiproductoIdProductoHijoNavigation"].push(item.toJSON());
        }
        if (Array.isArray(this.prRelacionMultiproductoIdProductoPadreNavigation)) {
            data["prRelacionMultiproductoIdProductoPadreNavigation"] = [];
            for (let item of this.prRelacionMultiproductoIdProductoPadreNavigation)
                data["prRelacionMultiproductoIdProductoPadreNavigation"].push(item.toJSON());
        }
        if (Array.isArray(this.prRelacionProductoModalidad)) {
            data["prRelacionProductoModalidad"] = [];
            for (let item of this.prRelacionProductoModalidad)
                data["prRelacionProductoModalidad"].push(item.toJSON());
        }
        if (Array.isArray(this.prVigenciaProducto)) {
            data["prVigenciaProducto"] = [];
            for (let item of this.prVigenciaProducto)
                data["prVigenciaProducto"].push(item.toJSON());
        }
        if (Array.isArray(this.tbProduto)) {
            data["tbProduto"] = [];
            for (let item of this.tbProduto)
                data["tbProduto"].push(item.toJSON());
        }
        if (Array.isArray(this.wcfDestinyShowCase)) {
            data["wcfDestinyShowCase"] = [];
            for (let item of this.wcfDestinyShowCase)
                data["wcfDestinyShowCase"].push(item.toJSON());
        }
        if (Array.isArray(this.wcfProductAdditionalCoverage)) {
            data["wcfProductAdditionalCoverage"] = [];
            for (let item of this.wcfProductAdditionalCoverage)
                data["wcfProductAdditionalCoverage"].push(item.toJSON());
        }
        if (Array.isArray(this.wcfProductAdditionalCoveragePrice)) {
            data["wcfProductAdditionalCoveragePrice"] = [];
            for (let item of this.wcfProductAdditionalCoveragePrice)
                data["wcfProductAdditionalCoveragePrice"].push(item.toJSON());
        }
        if (Array.isArray(this.wcfProductShowCaseProduct)) {
            data["wcfProductShowCaseProduct"] = [];
            for (let item of this.wcfProductShowCaseProduct)
                data["wcfProductShowCaseProduct"].push(item.toJSON());
        }
        if (Array.isArray(this.wcfProductShowCaseRelatedProduct)) {
            data["wcfProductShowCaseRelatedProduct"] = [];
            for (let item of this.wcfProductShowCaseRelatedProduct)
                data["wcfProductShowCaseRelatedProduct"].push(item.toJSON());
        }
        if (Array.isArray(this.wcfSpecialAudiencesShowCase)) {
            data["wcfSpecialAudiencesShowCase"] = [];
            for (let item of this.wcfSpecialAudiencesShowCase)
                data["wcfSpecialAudiencesShowCase"].push(item.toJSON());
        }
        if (Array.isArray(this.wcfTopicShowCase)) {
            data["wcfTopicShowCase"] = [];
            for (let item of this.wcfTopicShowCase)
                data["wcfTopicShowCase"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPrProducto {
    idProducto?: number;
    codigoProducto?: string | undefined;
    denominacionProducto?: string | undefined;
    minimoDias?: number;
    maximoDias?: number;
    edadMaxima?: number;
    leyenda?: string | undefined;
    idTipoCobertura?: number;
    linkproducto?: string | undefined;
    idMoneda?: number;
    coberturaMaxima?: number;
    productoAgencias?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idTipoProducto?: number | undefined;
    idMarca?: number | undefined;
    idTipoViaje?: number | undefined;
    condicionesGenerales?: string | undefined;
    marcaProductoBase?: string | undefined;
    pdfCondicionesGenerales?: string | undefined;
    leyendaValidez?: string | undefined;
    leyendaTratadoEuropa?: string | undefined;
    leyendaValidezIngles?: string | undefined;
    leyendaTratadoEuropaIngles?: string | undefined;
    leyendaIngles?: string | undefined;
    orden?: number | undefined;
    muestraIngles?: boolean | undefined;
    idGrupoRangosEdad?: number | undefined;
    condicionesGenerales2?: string | undefined;
    restricciones?: string | undefined;
    descripcion?: string | undefined;
    rpt?: string | undefined;
    idMarcaNavigation?: PrMarcasProductos | undefined;
    idMonedaNavigation?: BsMonedas | undefined;
    idTipoCoberturaNavigation?: PrTipoCobertura | undefined;
    idTipoViajeNavigation?: PrTipoViaje | undefined;
    coCotizacionesIndividuosLog?: CoCotizacionesIndividuosLog[] | undefined;
    coDetallesVenta?: CoDetallesVenta[] | undefined;
    coDetallesVentaPacksOnline?: CoDetallesVentaPacksOnline[] | undefined;
    coNominasEmpresas?: CoNominasEmpresas[] | undefined;
    poBeneficiariosPoliza?: PoBeneficiariosPoliza[] | undefined;
    poPolizas?: PoPolizas[] | undefined;
    prFormasPagoProducto?: PrFormasPagoProducto[] | undefined;
    prPaquetesProductos?: PrPaquetesProductos[] | undefined;
    prProductoPrecio?: PrProductoPrecio[] | undefined;
    prProductoServicios?: PrProductoServicios[] | undefined;
    prProductosHabilitadosPromocion?: PrProductosHabilitadosPromocion[] | undefined;
    prPromocionProducto?: PrPromocionProducto[] | undefined;
    prRelacionMultiproductoIdProductoHijoNavigation?: PrRelacionMultiproducto[] | undefined;
    prRelacionMultiproductoIdProductoPadreNavigation?: PrRelacionMultiproducto[] | undefined;
    prRelacionProductoModalidad?: PrRelacionProductoModalidad[] | undefined;
    prVigenciaProducto?: PrVigenciaProducto[] | undefined;
    tbProduto?: TbProduto[] | undefined;
    wcfDestinyShowCase?: WcfDestinyShowCase[] | undefined;
    wcfProductAdditionalCoverage?: WcfProductAdditionalCoverage[] | undefined;
    wcfProductAdditionalCoveragePrice?: WcfProductAdditionalCoveragePrice[] | undefined;
    wcfProductShowCaseProduct?: WcfProductShowCase[] | undefined;
    wcfProductShowCaseRelatedProduct?: WcfProductShowCase[] | undefined;
    wcfSpecialAudiencesShowCase?: WcfSpecialAudiencesShowCase[] | undefined;
    wcfTopicShowCase?: WcfTopicShowCase[] | undefined;
}

export class PrMarcasProductos implements IPrMarcasProductos {
    idMarca?: number;
    codigoMarca?: string | undefined;
    descripcionMarca?: string | undefined;
    idLineaProducto?: number;
    fileLogo?: string | undefined;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModPor?: Date | undefined;
    idLineaProductoNavigation?: PrLineaProducto | undefined;
    coPatrocinadorMarca?: CoPatrocinadorMarca[] | undefined;
    prProducto?: PrProducto[] | undefined;

    constructor(data?: IPrMarcasProductos) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idMarca = _data["idMarca"];
            this.codigoMarca = _data["codigoMarca"];
            this.descripcionMarca = _data["descripcionMarca"];
            this.idLineaProducto = _data["idLineaProducto"];
            this.fileLogo = _data["fileLogo"];
            this.fechaInicioVigencia = _data["fechaInicioVigencia"] ? new Date(_data["fechaInicioVigencia"].toString()) : <any>undefined;
            this.fechaFinVigencia = _data["fechaFinVigencia"] ? new Date(_data["fechaFinVigencia"].toString()) : <any>undefined;
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModPor = _data["fecModPor"] ? new Date(_data["fecModPor"].toString()) : <any>undefined;
            this.idLineaProductoNavigation = _data["idLineaProductoNavigation"] ? PrLineaProducto.fromJS(_data["idLineaProductoNavigation"]) : <any>undefined;
            if (Array.isArray(_data["coPatrocinadorMarca"])) {
                this.coPatrocinadorMarca = [] as any;
                for (let item of _data["coPatrocinadorMarca"])
                    this.coPatrocinadorMarca!.push(CoPatrocinadorMarca.fromJS(item));
            }
            if (Array.isArray(_data["prProducto"])) {
                this.prProducto = [] as any;
                for (let item of _data["prProducto"])
                    this.prProducto!.push(PrProducto.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PrMarcasProductos {
        data = typeof data === 'object' ? data : {};
        let result = new PrMarcasProductos();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idMarca"] = this.idMarca;
        data["codigoMarca"] = this.codigoMarca;
        data["descripcionMarca"] = this.descripcionMarca;
        data["idLineaProducto"] = this.idLineaProducto;
        data["fileLogo"] = this.fileLogo;
        data["fechaInicioVigencia"] = this.fechaInicioVigencia ? this.fechaInicioVigencia.toISOString() : <any>undefined;
        data["fechaFinVigencia"] = this.fechaFinVigencia ? this.fechaFinVigencia.toISOString() : <any>undefined;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModPor"] = this.fecModPor ? this.fecModPor.toISOString() : <any>undefined;
        data["idLineaProductoNavigation"] = this.idLineaProductoNavigation ? this.idLineaProductoNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.coPatrocinadorMarca)) {
            data["coPatrocinadorMarca"] = [];
            for (let item of this.coPatrocinadorMarca)
                data["coPatrocinadorMarca"].push(item.toJSON());
        }
        if (Array.isArray(this.prProducto)) {
            data["prProducto"] = [];
            for (let item of this.prProducto)
                data["prProducto"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPrMarcasProductos {
    idMarca?: number;
    codigoMarca?: string | undefined;
    descripcionMarca?: string | undefined;
    idLineaProducto?: number;
    fileLogo?: string | undefined;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModPor?: Date | undefined;
    idLineaProductoNavigation?: PrLineaProducto | undefined;
    coPatrocinadorMarca?: CoPatrocinadorMarca[] | undefined;
    prProducto?: PrProducto[] | undefined;
}

export class PrLineaProducto implements IPrLineaProducto {
    idLineaProducto?: number;
    idCompania?: number;
    codigoLineaProducto?: string | undefined;
    descripcionLineaProducto?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idCompaniaNavigation?: BsCompanias | undefined;
    prMarcasProductos?: PrMarcasProductos[] | undefined;

    constructor(data?: IPrLineaProducto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idLineaProducto = _data["idLineaProducto"];
            this.idCompania = _data["idCompania"];
            this.codigoLineaProducto = _data["codigoLineaProducto"];
            this.descripcionLineaProducto = _data["descripcionLineaProducto"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idCompaniaNavigation = _data["idCompaniaNavigation"] ? BsCompanias.fromJS(_data["idCompaniaNavigation"]) : <any>undefined;
            if (Array.isArray(_data["prMarcasProductos"])) {
                this.prMarcasProductos = [] as any;
                for (let item of _data["prMarcasProductos"])
                    this.prMarcasProductos!.push(PrMarcasProductos.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PrLineaProducto {
        data = typeof data === 'object' ? data : {};
        let result = new PrLineaProducto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idLineaProducto"] = this.idLineaProducto;
        data["idCompania"] = this.idCompania;
        data["codigoLineaProducto"] = this.codigoLineaProducto;
        data["descripcionLineaProducto"] = this.descripcionLineaProducto;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idCompaniaNavigation"] = this.idCompaniaNavigation ? this.idCompaniaNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.prMarcasProductos)) {
            data["prMarcasProductos"] = [];
            for (let item of this.prMarcasProductos)
                data["prMarcasProductos"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPrLineaProducto {
    idLineaProducto?: number;
    idCompania?: number;
    codigoLineaProducto?: string | undefined;
    descripcionLineaProducto?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idCompaniaNavigation?: BsCompanias | undefined;
    prMarcasProductos?: PrMarcasProductos[] | undefined;
}

export class CoPatrocinadorMarca implements ICoPatrocinadorMarca {
    idPatrocinadorMarca?: number;
    idPatrocinador?: number;
    idMarca?: number;
    fechaAcuerdo?: Date;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    fileDocumento?: string | undefined;
    patrocinadorAffinity?: string | undefined;
    fileLogo?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    fechaBaja?: Date | undefined;
    idMarcaNavigation?: PrMarcasProductos | undefined;
    idPatrocinadorNavigation?: CoPatrocinadores | undefined;

    constructor(data?: ICoPatrocinadorMarca) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idPatrocinadorMarca = _data["idPatrocinadorMarca"];
            this.idPatrocinador = _data["idPatrocinador"];
            this.idMarca = _data["idMarca"];
            this.fechaAcuerdo = _data["fechaAcuerdo"] ? new Date(_data["fechaAcuerdo"].toString()) : <any>undefined;
            this.fechaInicioVigencia = _data["fechaInicioVigencia"] ? new Date(_data["fechaInicioVigencia"].toString()) : <any>undefined;
            this.fechaFinVigencia = _data["fechaFinVigencia"] ? new Date(_data["fechaFinVigencia"].toString()) : <any>undefined;
            this.fileDocumento = _data["fileDocumento"];
            this.patrocinadorAffinity = _data["patrocinadorAffinity"];
            this.fileLogo = _data["fileLogo"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.fechaBaja = _data["fechaBaja"] ? new Date(_data["fechaBaja"].toString()) : <any>undefined;
            this.idMarcaNavigation = _data["idMarcaNavigation"] ? PrMarcasProductos.fromJS(_data["idMarcaNavigation"]) : <any>undefined;
            this.idPatrocinadorNavigation = _data["idPatrocinadorNavigation"] ? CoPatrocinadores.fromJS(_data["idPatrocinadorNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): CoPatrocinadorMarca {
        data = typeof data === 'object' ? data : {};
        let result = new CoPatrocinadorMarca();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idPatrocinadorMarca"] = this.idPatrocinadorMarca;
        data["idPatrocinador"] = this.idPatrocinador;
        data["idMarca"] = this.idMarca;
        data["fechaAcuerdo"] = this.fechaAcuerdo ? this.fechaAcuerdo.toISOString() : <any>undefined;
        data["fechaInicioVigencia"] = this.fechaInicioVigencia ? this.fechaInicioVigencia.toISOString() : <any>undefined;
        data["fechaFinVigencia"] = this.fechaFinVigencia ? this.fechaFinVigencia.toISOString() : <any>undefined;
        data["fileDocumento"] = this.fileDocumento;
        data["patrocinadorAffinity"] = this.patrocinadorAffinity;
        data["fileLogo"] = this.fileLogo;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["fechaBaja"] = this.fechaBaja ? this.fechaBaja.toISOString() : <any>undefined;
        data["idMarcaNavigation"] = this.idMarcaNavigation ? this.idMarcaNavigation.toJSON() : <any>undefined;
        data["idPatrocinadorNavigation"] = this.idPatrocinadorNavigation ? this.idPatrocinadorNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface ICoPatrocinadorMarca {
    idPatrocinadorMarca?: number;
    idPatrocinador?: number;
    idMarca?: number;
    fechaAcuerdo?: Date;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    fileDocumento?: string | undefined;
    patrocinadorAffinity?: string | undefined;
    fileLogo?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    fechaBaja?: Date | undefined;
    idMarcaNavigation?: PrMarcasProductos | undefined;
    idPatrocinadorNavigation?: CoPatrocinadores | undefined;
}

export class CoPatrocinadores implements ICoPatrocinadores {
    idPatrocinador?: number;
    idPersonaJuridica?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    fechaBaja?: Date | undefined;
    idCompania?: number | undefined;
    idPersonaJuridicaNavigation?: PePersonaJuridica | undefined;
    coPatrocinadorMarca?: CoPatrocinadorMarca[] | undefined;

    constructor(data?: ICoPatrocinadores) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idPatrocinador = _data["idPatrocinador"];
            this.idPersonaJuridica = _data["idPersonaJuridica"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.fechaBaja = _data["fechaBaja"] ? new Date(_data["fechaBaja"].toString()) : <any>undefined;
            this.idCompania = _data["idCompania"];
            this.idPersonaJuridicaNavigation = _data["idPersonaJuridicaNavigation"] ? PePersonaJuridica.fromJS(_data["idPersonaJuridicaNavigation"]) : <any>undefined;
            if (Array.isArray(_data["coPatrocinadorMarca"])) {
                this.coPatrocinadorMarca = [] as any;
                for (let item of _data["coPatrocinadorMarca"])
                    this.coPatrocinadorMarca!.push(CoPatrocinadorMarca.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CoPatrocinadores {
        data = typeof data === 'object' ? data : {};
        let result = new CoPatrocinadores();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idPatrocinador"] = this.idPatrocinador;
        data["idPersonaJuridica"] = this.idPersonaJuridica;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["fechaBaja"] = this.fechaBaja ? this.fechaBaja.toISOString() : <any>undefined;
        data["idCompania"] = this.idCompania;
        data["idPersonaJuridicaNavigation"] = this.idPersonaJuridicaNavigation ? this.idPersonaJuridicaNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.coPatrocinadorMarca)) {
            data["coPatrocinadorMarca"] = [];
            for (let item of this.coPatrocinadorMarca)
                data["coPatrocinadorMarca"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICoPatrocinadores {
    idPatrocinador?: number;
    idPersonaJuridica?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    fechaBaja?: Date | undefined;
    idCompania?: number | undefined;
    idPersonaJuridicaNavigation?: PePersonaJuridica | undefined;
    coPatrocinadorMarca?: CoPatrocinadorMarca[] | undefined;
}

export class BsMonedas implements IBsMonedas {
    idMoneda?: number;
    codigoMoneda?: string | undefined;
    moneda?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    bsMonedasCotizaciones?: BsMonedasCotizaciones[] | undefined;
    coDetalleCotizacionesIndividuosLog?: CoDetalleCotizacionesIndividuosLog[] | undefined;
    coDetallesVenta?: CoDetallesVenta[] | undefined;
    coDetallesVentaPacksOnline?: CoDetallesVentaPacksOnline[] | undefined;
    lpDocumentosPagoIdMonedaLiquidacionNavigation?: LpDocumentosPago[] | undefined;
    lpDocumentosPagoIdMonedaPagoNavigation?: LpDocumentosPago[] | undefined;
    prPaquetesProductos?: PrPaquetesProductos[] | undefined;
    prProducto?: PrProducto[] | undefined;
    prProductoPrecio?: PrProductoPrecio[] | undefined;
    prRelacionProductoModalidad?: PrRelacionProductoModalidad[] | undefined;

    constructor(data?: IBsMonedas) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idMoneda = _data["idMoneda"];
            this.codigoMoneda = _data["codigoMoneda"];
            this.moneda = _data["moneda"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            if (Array.isArray(_data["bsMonedasCotizaciones"])) {
                this.bsMonedasCotizaciones = [] as any;
                for (let item of _data["bsMonedasCotizaciones"])
                    this.bsMonedasCotizaciones!.push(BsMonedasCotizaciones.fromJS(item));
            }
            if (Array.isArray(_data["coDetalleCotizacionesIndividuosLog"])) {
                this.coDetalleCotizacionesIndividuosLog = [] as any;
                for (let item of _data["coDetalleCotizacionesIndividuosLog"])
                    this.coDetalleCotizacionesIndividuosLog!.push(CoDetalleCotizacionesIndividuosLog.fromJS(item));
            }
            if (Array.isArray(_data["coDetallesVenta"])) {
                this.coDetallesVenta = [] as any;
                for (let item of _data["coDetallesVenta"])
                    this.coDetallesVenta!.push(CoDetallesVenta.fromJS(item));
            }
            if (Array.isArray(_data["coDetallesVentaPacksOnline"])) {
                this.coDetallesVentaPacksOnline = [] as any;
                for (let item of _data["coDetallesVentaPacksOnline"])
                    this.coDetallesVentaPacksOnline!.push(CoDetallesVentaPacksOnline.fromJS(item));
            }
            if (Array.isArray(_data["lpDocumentosPagoIdMonedaLiquidacionNavigation"])) {
                this.lpDocumentosPagoIdMonedaLiquidacionNavigation = [] as any;
                for (let item of _data["lpDocumentosPagoIdMonedaLiquidacionNavigation"])
                    this.lpDocumentosPagoIdMonedaLiquidacionNavigation!.push(LpDocumentosPago.fromJS(item));
            }
            if (Array.isArray(_data["lpDocumentosPagoIdMonedaPagoNavigation"])) {
                this.lpDocumentosPagoIdMonedaPagoNavigation = [] as any;
                for (let item of _data["lpDocumentosPagoIdMonedaPagoNavigation"])
                    this.lpDocumentosPagoIdMonedaPagoNavigation!.push(LpDocumentosPago.fromJS(item));
            }
            if (Array.isArray(_data["prPaquetesProductos"])) {
                this.prPaquetesProductos = [] as any;
                for (let item of _data["prPaquetesProductos"])
                    this.prPaquetesProductos!.push(PrPaquetesProductos.fromJS(item));
            }
            if (Array.isArray(_data["prProducto"])) {
                this.prProducto = [] as any;
                for (let item of _data["prProducto"])
                    this.prProducto!.push(PrProducto.fromJS(item));
            }
            if (Array.isArray(_data["prProductoPrecio"])) {
                this.prProductoPrecio = [] as any;
                for (let item of _data["prProductoPrecio"])
                    this.prProductoPrecio!.push(PrProductoPrecio.fromJS(item));
            }
            if (Array.isArray(_data["prRelacionProductoModalidad"])) {
                this.prRelacionProductoModalidad = [] as any;
                for (let item of _data["prRelacionProductoModalidad"])
                    this.prRelacionProductoModalidad!.push(PrRelacionProductoModalidad.fromJS(item));
            }
        }
    }

    static fromJS(data: any): BsMonedas {
        data = typeof data === 'object' ? data : {};
        let result = new BsMonedas();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idMoneda"] = this.idMoneda;
        data["codigoMoneda"] = this.codigoMoneda;
        data["moneda"] = this.moneda;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        if (Array.isArray(this.bsMonedasCotizaciones)) {
            data["bsMonedasCotizaciones"] = [];
            for (let item of this.bsMonedasCotizaciones)
                data["bsMonedasCotizaciones"].push(item.toJSON());
        }
        if (Array.isArray(this.coDetalleCotizacionesIndividuosLog)) {
            data["coDetalleCotizacionesIndividuosLog"] = [];
            for (let item of this.coDetalleCotizacionesIndividuosLog)
                data["coDetalleCotizacionesIndividuosLog"].push(item.toJSON());
        }
        if (Array.isArray(this.coDetallesVenta)) {
            data["coDetallesVenta"] = [];
            for (let item of this.coDetallesVenta)
                data["coDetallesVenta"].push(item.toJSON());
        }
        if (Array.isArray(this.coDetallesVentaPacksOnline)) {
            data["coDetallesVentaPacksOnline"] = [];
            for (let item of this.coDetallesVentaPacksOnline)
                data["coDetallesVentaPacksOnline"].push(item.toJSON());
        }
        if (Array.isArray(this.lpDocumentosPagoIdMonedaLiquidacionNavigation)) {
            data["lpDocumentosPagoIdMonedaLiquidacionNavigation"] = [];
            for (let item of this.lpDocumentosPagoIdMonedaLiquidacionNavigation)
                data["lpDocumentosPagoIdMonedaLiquidacionNavigation"].push(item.toJSON());
        }
        if (Array.isArray(this.lpDocumentosPagoIdMonedaPagoNavigation)) {
            data["lpDocumentosPagoIdMonedaPagoNavigation"] = [];
            for (let item of this.lpDocumentosPagoIdMonedaPagoNavigation)
                data["lpDocumentosPagoIdMonedaPagoNavigation"].push(item.toJSON());
        }
        if (Array.isArray(this.prPaquetesProductos)) {
            data["prPaquetesProductos"] = [];
            for (let item of this.prPaquetesProductos)
                data["prPaquetesProductos"].push(item.toJSON());
        }
        if (Array.isArray(this.prProducto)) {
            data["prProducto"] = [];
            for (let item of this.prProducto)
                data["prProducto"].push(item.toJSON());
        }
        if (Array.isArray(this.prProductoPrecio)) {
            data["prProductoPrecio"] = [];
            for (let item of this.prProductoPrecio)
                data["prProductoPrecio"].push(item.toJSON());
        }
        if (Array.isArray(this.prRelacionProductoModalidad)) {
            data["prRelacionProductoModalidad"] = [];
            for (let item of this.prRelacionProductoModalidad)
                data["prRelacionProductoModalidad"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IBsMonedas {
    idMoneda?: number;
    codigoMoneda?: string | undefined;
    moneda?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    bsMonedasCotizaciones?: BsMonedasCotizaciones[] | undefined;
    coDetalleCotizacionesIndividuosLog?: CoDetalleCotizacionesIndividuosLog[] | undefined;
    coDetallesVenta?: CoDetallesVenta[] | undefined;
    coDetallesVentaPacksOnline?: CoDetallesVentaPacksOnline[] | undefined;
    lpDocumentosPagoIdMonedaLiquidacionNavigation?: LpDocumentosPago[] | undefined;
    lpDocumentosPagoIdMonedaPagoNavigation?: LpDocumentosPago[] | undefined;
    prPaquetesProductos?: PrPaquetesProductos[] | undefined;
    prProducto?: PrProducto[] | undefined;
    prProductoPrecio?: PrProductoPrecio[] | undefined;
    prRelacionProductoModalidad?: PrRelacionProductoModalidad[] | undefined;
}

export class BsMonedasCotizaciones implements IBsMonedasCotizaciones {
    idMonedaCotizacion?: number;
    idMoneda?: number;
    fechaCotizacion?: Date;
    importe?: number | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idMonedaNavigation?: BsMonedas | undefined;

    constructor(data?: IBsMonedasCotizaciones) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idMonedaCotizacion = _data["idMonedaCotizacion"];
            this.idMoneda = _data["idMoneda"];
            this.fechaCotizacion = _data["fechaCotizacion"] ? new Date(_data["fechaCotizacion"].toString()) : <any>undefined;
            this.importe = _data["importe"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idMonedaNavigation = _data["idMonedaNavigation"] ? BsMonedas.fromJS(_data["idMonedaNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): BsMonedasCotizaciones {
        data = typeof data === 'object' ? data : {};
        let result = new BsMonedasCotizaciones();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idMonedaCotizacion"] = this.idMonedaCotizacion;
        data["idMoneda"] = this.idMoneda;
        data["fechaCotizacion"] = this.fechaCotizacion ? this.fechaCotizacion.toISOString() : <any>undefined;
        data["importe"] = this.importe;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idMonedaNavigation"] = this.idMonedaNavigation ? this.idMonedaNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IBsMonedasCotizaciones {
    idMonedaCotizacion?: number;
    idMoneda?: number;
    fechaCotizacion?: Date;
    importe?: number | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idMonedaNavigation?: BsMonedas | undefined;
}

export class CoDetalleCotizacionesIndividuosLog implements ICoDetalleCotizacionesIndividuosLog {
    idDetalleCotizacionesIndividuos?: number;
    idCotizacionIndividuo?: number;
    idRangoEtario?: number | undefined;
    cantidadPasajeros?: number | undefined;
    idMoneda?: number | undefined;
    importe?: number | undefined;
    edad?: number | undefined;
    bonificacion?: number | undefined;
    importeFinal?: number | undefined;
    fecCreaReg?: Date | undefined;
    idCotizacionIndividuoNavigation?: CoCotizacionesIndividuosLog | undefined;
    idMonedaNavigation?: BsMonedas | undefined;

    constructor(data?: ICoDetalleCotizacionesIndividuosLog) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idDetalleCotizacionesIndividuos = _data["idDetalleCotizacionesIndividuos"];
            this.idCotizacionIndividuo = _data["idCotizacionIndividuo"];
            this.idRangoEtario = _data["idRangoEtario"];
            this.cantidadPasajeros = _data["cantidadPasajeros"];
            this.idMoneda = _data["idMoneda"];
            this.importe = _data["importe"];
            this.edad = _data["edad"];
            this.bonificacion = _data["bonificacion"];
            this.importeFinal = _data["importeFinal"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.idCotizacionIndividuoNavigation = _data["idCotizacionIndividuoNavigation"] ? CoCotizacionesIndividuosLog.fromJS(_data["idCotizacionIndividuoNavigation"]) : <any>undefined;
            this.idMonedaNavigation = _data["idMonedaNavigation"] ? BsMonedas.fromJS(_data["idMonedaNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): CoDetalleCotizacionesIndividuosLog {
        data = typeof data === 'object' ? data : {};
        let result = new CoDetalleCotizacionesIndividuosLog();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idDetalleCotizacionesIndividuos"] = this.idDetalleCotizacionesIndividuos;
        data["idCotizacionIndividuo"] = this.idCotizacionIndividuo;
        data["idRangoEtario"] = this.idRangoEtario;
        data["cantidadPasajeros"] = this.cantidadPasajeros;
        data["idMoneda"] = this.idMoneda;
        data["importe"] = this.importe;
        data["edad"] = this.edad;
        data["bonificacion"] = this.bonificacion;
        data["importeFinal"] = this.importeFinal;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["idCotizacionIndividuoNavigation"] = this.idCotizacionIndividuoNavigation ? this.idCotizacionIndividuoNavigation.toJSON() : <any>undefined;
        data["idMonedaNavigation"] = this.idMonedaNavigation ? this.idMonedaNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface ICoDetalleCotizacionesIndividuosLog {
    idDetalleCotizacionesIndividuos?: number;
    idCotizacionIndividuo?: number;
    idRangoEtario?: number | undefined;
    cantidadPasajeros?: number | undefined;
    idMoneda?: number | undefined;
    importe?: number | undefined;
    edad?: number | undefined;
    bonificacion?: number | undefined;
    importeFinal?: number | undefined;
    fecCreaReg?: Date | undefined;
    idCotizacionIndividuoNavigation?: CoCotizacionesIndividuosLog | undefined;
    idMonedaNavigation?: BsMonedas | undefined;
}

export class CoCotizacionesIndividuosLog implements ICoCotizacionesIndividuosLog {
    idCotizacionIndividuo?: number;
    idProvincia?: number | undefined;
    idPais?: number | undefined;
    idTipoViaje?: number | undefined;
    idTipoProducto?: number | undefined;
    marcaDestinoEuropa?: string | undefined;
    fechaInicVigencia?: Date | undefined;
    fechaFinVigencia?: Date | undefined;
    idProducto?: number | undefined;
    idCuponDescuento?: number | undefined;
    fecCreaReg?: Date | undefined;
    creadoPor?: string | undefined;
    valorTotal?: number | undefined;
    email?: string | undefined;
    telefono?: string | undefined;
    idAgencia?: number | undefined;
    idTipoPromocion?: number | undefined;
    idDetallePromocion?: number | undefined;
    valorGrilla?: number | undefined;
    cupon?: string | undefined;
    productTypeId?: number | undefined;
    idAgenciaNavigation?: CoAgencias | undefined;
    idPaisNavigation?: BsPaises | undefined;
    idProductoNavigation?: PrProducto | undefined;
    idProvinciaNavigation?: BsProvincias | undefined;
    idTipoProductoNavigation?: PrTipoProducto | undefined;
    idTipoPromocionNavigation?: PrTiposPromocion | undefined;
    idTipoViajeNavigation?: PrTipoViaje | undefined;
    coDetalleCotizacionesIndividuosLog?: CoDetalleCotizacionesIndividuosLog[] | undefined;

    constructor(data?: ICoCotizacionesIndividuosLog) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idCotizacionIndividuo = _data["idCotizacionIndividuo"];
            this.idProvincia = _data["idProvincia"];
            this.idPais = _data["idPais"];
            this.idTipoViaje = _data["idTipoViaje"];
            this.idTipoProducto = _data["idTipoProducto"];
            this.marcaDestinoEuropa = _data["marcaDestinoEuropa"];
            this.fechaInicVigencia = _data["fechaInicVigencia"] ? new Date(_data["fechaInicVigencia"].toString()) : <any>undefined;
            this.fechaFinVigencia = _data["fechaFinVigencia"] ? new Date(_data["fechaFinVigencia"].toString()) : <any>undefined;
            this.idProducto = _data["idProducto"];
            this.idCuponDescuento = _data["idCuponDescuento"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.creadoPor = _data["creadoPor"];
            this.valorTotal = _data["valorTotal"];
            this.email = _data["email"];
            this.telefono = _data["telefono"];
            this.idAgencia = _data["idAgencia"];
            this.idTipoPromocion = _data["idTipoPromocion"];
            this.idDetallePromocion = _data["idDetallePromocion"];
            this.valorGrilla = _data["valorGrilla"];
            this.cupon = _data["cupon"];
            this.productTypeId = _data["productTypeId"];
            this.idAgenciaNavigation = _data["idAgenciaNavigation"] ? CoAgencias.fromJS(_data["idAgenciaNavigation"]) : <any>undefined;
            this.idPaisNavigation = _data["idPaisNavigation"] ? BsPaises.fromJS(_data["idPaisNavigation"]) : <any>undefined;
            this.idProductoNavigation = _data["idProductoNavigation"] ? PrProducto.fromJS(_data["idProductoNavigation"]) : <any>undefined;
            this.idProvinciaNavigation = _data["idProvinciaNavigation"] ? BsProvincias.fromJS(_data["idProvinciaNavigation"]) : <any>undefined;
            this.idTipoProductoNavigation = _data["idTipoProductoNavigation"] ? PrTipoProducto.fromJS(_data["idTipoProductoNavigation"]) : <any>undefined;
            this.idTipoPromocionNavigation = _data["idTipoPromocionNavigation"] ? PrTiposPromocion.fromJS(_data["idTipoPromocionNavigation"]) : <any>undefined;
            this.idTipoViajeNavigation = _data["idTipoViajeNavigation"] ? PrTipoViaje.fromJS(_data["idTipoViajeNavigation"]) : <any>undefined;
            if (Array.isArray(_data["coDetalleCotizacionesIndividuosLog"])) {
                this.coDetalleCotizacionesIndividuosLog = [] as any;
                for (let item of _data["coDetalleCotizacionesIndividuosLog"])
                    this.coDetalleCotizacionesIndividuosLog!.push(CoDetalleCotizacionesIndividuosLog.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CoCotizacionesIndividuosLog {
        data = typeof data === 'object' ? data : {};
        let result = new CoCotizacionesIndividuosLog();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idCotizacionIndividuo"] = this.idCotizacionIndividuo;
        data["idProvincia"] = this.idProvincia;
        data["idPais"] = this.idPais;
        data["idTipoViaje"] = this.idTipoViaje;
        data["idTipoProducto"] = this.idTipoProducto;
        data["marcaDestinoEuropa"] = this.marcaDestinoEuropa;
        data["fechaInicVigencia"] = this.fechaInicVigencia ? this.fechaInicVigencia.toISOString() : <any>undefined;
        data["fechaFinVigencia"] = this.fechaFinVigencia ? this.fechaFinVigencia.toISOString() : <any>undefined;
        data["idProducto"] = this.idProducto;
        data["idCuponDescuento"] = this.idCuponDescuento;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["creadoPor"] = this.creadoPor;
        data["valorTotal"] = this.valorTotal;
        data["email"] = this.email;
        data["telefono"] = this.telefono;
        data["idAgencia"] = this.idAgencia;
        data["idTipoPromocion"] = this.idTipoPromocion;
        data["idDetallePromocion"] = this.idDetallePromocion;
        data["valorGrilla"] = this.valorGrilla;
        data["cupon"] = this.cupon;
        data["productTypeId"] = this.productTypeId;
        data["idAgenciaNavigation"] = this.idAgenciaNavigation ? this.idAgenciaNavigation.toJSON() : <any>undefined;
        data["idPaisNavigation"] = this.idPaisNavigation ? this.idPaisNavigation.toJSON() : <any>undefined;
        data["idProductoNavigation"] = this.idProductoNavigation ? this.idProductoNavigation.toJSON() : <any>undefined;
        data["idProvinciaNavigation"] = this.idProvinciaNavigation ? this.idProvinciaNavigation.toJSON() : <any>undefined;
        data["idTipoProductoNavigation"] = this.idTipoProductoNavigation ? this.idTipoProductoNavigation.toJSON() : <any>undefined;
        data["idTipoPromocionNavigation"] = this.idTipoPromocionNavigation ? this.idTipoPromocionNavigation.toJSON() : <any>undefined;
        data["idTipoViajeNavigation"] = this.idTipoViajeNavigation ? this.idTipoViajeNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.coDetalleCotizacionesIndividuosLog)) {
            data["coDetalleCotizacionesIndividuosLog"] = [];
            for (let item of this.coDetalleCotizacionesIndividuosLog)
                data["coDetalleCotizacionesIndividuosLog"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICoCotizacionesIndividuosLog {
    idCotizacionIndividuo?: number;
    idProvincia?: number | undefined;
    idPais?: number | undefined;
    idTipoViaje?: number | undefined;
    idTipoProducto?: number | undefined;
    marcaDestinoEuropa?: string | undefined;
    fechaInicVigencia?: Date | undefined;
    fechaFinVigencia?: Date | undefined;
    idProducto?: number | undefined;
    idCuponDescuento?: number | undefined;
    fecCreaReg?: Date | undefined;
    creadoPor?: string | undefined;
    valorTotal?: number | undefined;
    email?: string | undefined;
    telefono?: string | undefined;
    idAgencia?: number | undefined;
    idTipoPromocion?: number | undefined;
    idDetallePromocion?: number | undefined;
    valorGrilla?: number | undefined;
    cupon?: string | undefined;
    productTypeId?: number | undefined;
    idAgenciaNavigation?: CoAgencias | undefined;
    idPaisNavigation?: BsPaises | undefined;
    idProductoNavigation?: PrProducto | undefined;
    idProvinciaNavigation?: BsProvincias | undefined;
    idTipoProductoNavigation?: PrTipoProducto | undefined;
    idTipoPromocionNavigation?: PrTiposPromocion | undefined;
    idTipoViajeNavigation?: PrTipoViaje | undefined;
    coDetalleCotizacionesIndividuosLog?: CoDetalleCotizacionesIndividuosLog[] | undefined;
}

export class BsPaises implements IBsPaises {
    idPais?: number;
    codigoPais?: string | undefined;
    denominacionPais?: string | undefined;
    diferenciaHoraria?: number | undefined;
    contactoIag?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    iso3l?: string | undefined;
    orden?: number | undefined;
    idContinente?: number | undefined;
    euro?: number | undefined;
    productTypeId?: number | undefined;
    bsProvincias?: BsProvincias[] | undefined;
    coCotizacionesIndividuosLog?: CoCotizacionesIndividuosLog[] | undefined;
    coDetallesVentaPacksOnline?: CoDetallesVentaPacksOnline[] | undefined;
    miCorresponsalesBup?: MiCorresponsalesBup[] | undefined;
    miPaisesAtencionCorresponsales?: MiPaisesAtencionCorresponsales[] | undefined;
    peDomicilios?: PeDomicilios[] | undefined;
    pePersonaFisica?: PePersonaFisica[] | undefined;
    prPromocionPaisDestino?: PrPromocionPaisDestino[] | undefined;
    wcfDestinyShowCase?: WcfDestinyShowCase[] | undefined;

    constructor(data?: IBsPaises) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idPais = _data["idPais"];
            this.codigoPais = _data["codigoPais"];
            this.denominacionPais = _data["denominacionPais"];
            this.diferenciaHoraria = _data["diferenciaHoraria"];
            this.contactoIag = _data["contactoIag"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.iso3l = _data["iso3l"];
            this.orden = _data["orden"];
            this.idContinente = _data["idContinente"];
            this.euro = _data["euro"];
            this.productTypeId = _data["productTypeId"];
            if (Array.isArray(_data["bsProvincias"])) {
                this.bsProvincias = [] as any;
                for (let item of _data["bsProvincias"])
                    this.bsProvincias!.push(BsProvincias.fromJS(item));
            }
            if (Array.isArray(_data["coCotizacionesIndividuosLog"])) {
                this.coCotizacionesIndividuosLog = [] as any;
                for (let item of _data["coCotizacionesIndividuosLog"])
                    this.coCotizacionesIndividuosLog!.push(CoCotizacionesIndividuosLog.fromJS(item));
            }
            if (Array.isArray(_data["coDetallesVentaPacksOnline"])) {
                this.coDetallesVentaPacksOnline = [] as any;
                for (let item of _data["coDetallesVentaPacksOnline"])
                    this.coDetallesVentaPacksOnline!.push(CoDetallesVentaPacksOnline.fromJS(item));
            }
            if (Array.isArray(_data["miCorresponsalesBup"])) {
                this.miCorresponsalesBup = [] as any;
                for (let item of _data["miCorresponsalesBup"])
                    this.miCorresponsalesBup!.push(MiCorresponsalesBup.fromJS(item));
            }
            if (Array.isArray(_data["miPaisesAtencionCorresponsales"])) {
                this.miPaisesAtencionCorresponsales = [] as any;
                for (let item of _data["miPaisesAtencionCorresponsales"])
                    this.miPaisesAtencionCorresponsales!.push(MiPaisesAtencionCorresponsales.fromJS(item));
            }
            if (Array.isArray(_data["peDomicilios"])) {
                this.peDomicilios = [] as any;
                for (let item of _data["peDomicilios"])
                    this.peDomicilios!.push(PeDomicilios.fromJS(item));
            }
            if (Array.isArray(_data["pePersonaFisica"])) {
                this.pePersonaFisica = [] as any;
                for (let item of _data["pePersonaFisica"])
                    this.pePersonaFisica!.push(PePersonaFisica.fromJS(item));
            }
            if (Array.isArray(_data["prPromocionPaisDestino"])) {
                this.prPromocionPaisDestino = [] as any;
                for (let item of _data["prPromocionPaisDestino"])
                    this.prPromocionPaisDestino!.push(PrPromocionPaisDestino.fromJS(item));
            }
            if (Array.isArray(_data["wcfDestinyShowCase"])) {
                this.wcfDestinyShowCase = [] as any;
                for (let item of _data["wcfDestinyShowCase"])
                    this.wcfDestinyShowCase!.push(WcfDestinyShowCase.fromJS(item));
            }
        }
    }

    static fromJS(data: any): BsPaises {
        data = typeof data === 'object' ? data : {};
        let result = new BsPaises();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idPais"] = this.idPais;
        data["codigoPais"] = this.codigoPais;
        data["denominacionPais"] = this.denominacionPais;
        data["diferenciaHoraria"] = this.diferenciaHoraria;
        data["contactoIag"] = this.contactoIag;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["iso3l"] = this.iso3l;
        data["orden"] = this.orden;
        data["idContinente"] = this.idContinente;
        data["euro"] = this.euro;
        data["productTypeId"] = this.productTypeId;
        if (Array.isArray(this.bsProvincias)) {
            data["bsProvincias"] = [];
            for (let item of this.bsProvincias)
                data["bsProvincias"].push(item.toJSON());
        }
        if (Array.isArray(this.coCotizacionesIndividuosLog)) {
            data["coCotizacionesIndividuosLog"] = [];
            for (let item of this.coCotizacionesIndividuosLog)
                data["coCotizacionesIndividuosLog"].push(item.toJSON());
        }
        if (Array.isArray(this.coDetallesVentaPacksOnline)) {
            data["coDetallesVentaPacksOnline"] = [];
            for (let item of this.coDetallesVentaPacksOnline)
                data["coDetallesVentaPacksOnline"].push(item.toJSON());
        }
        if (Array.isArray(this.miCorresponsalesBup)) {
            data["miCorresponsalesBup"] = [];
            for (let item of this.miCorresponsalesBup)
                data["miCorresponsalesBup"].push(item.toJSON());
        }
        if (Array.isArray(this.miPaisesAtencionCorresponsales)) {
            data["miPaisesAtencionCorresponsales"] = [];
            for (let item of this.miPaisesAtencionCorresponsales)
                data["miPaisesAtencionCorresponsales"].push(item.toJSON());
        }
        if (Array.isArray(this.peDomicilios)) {
            data["peDomicilios"] = [];
            for (let item of this.peDomicilios)
                data["peDomicilios"].push(item.toJSON());
        }
        if (Array.isArray(this.pePersonaFisica)) {
            data["pePersonaFisica"] = [];
            for (let item of this.pePersonaFisica)
                data["pePersonaFisica"].push(item.toJSON());
        }
        if (Array.isArray(this.prPromocionPaisDestino)) {
            data["prPromocionPaisDestino"] = [];
            for (let item of this.prPromocionPaisDestino)
                data["prPromocionPaisDestino"].push(item.toJSON());
        }
        if (Array.isArray(this.wcfDestinyShowCase)) {
            data["wcfDestinyShowCase"] = [];
            for (let item of this.wcfDestinyShowCase)
                data["wcfDestinyShowCase"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IBsPaises {
    idPais?: number;
    codigoPais?: string | undefined;
    denominacionPais?: string | undefined;
    diferenciaHoraria?: number | undefined;
    contactoIag?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    iso3l?: string | undefined;
    orden?: number | undefined;
    idContinente?: number | undefined;
    euro?: number | undefined;
    productTypeId?: number | undefined;
    bsProvincias?: BsProvincias[] | undefined;
    coCotizacionesIndividuosLog?: CoCotizacionesIndividuosLog[] | undefined;
    coDetallesVentaPacksOnline?: CoDetallesVentaPacksOnline[] | undefined;
    miCorresponsalesBup?: MiCorresponsalesBup[] | undefined;
    miPaisesAtencionCorresponsales?: MiPaisesAtencionCorresponsales[] | undefined;
    peDomicilios?: PeDomicilios[] | undefined;
    pePersonaFisica?: PePersonaFisica[] | undefined;
    prPromocionPaisDestino?: PrPromocionPaisDestino[] | undefined;
    wcfDestinyShowCase?: WcfDestinyShowCase[] | undefined;
}

export class BsProvincias implements IBsProvincias {
    idProvincia?: number;
    idPais?: number;
    descripcionProvincia?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    codigoProvincia?: string | undefined;
    idPaisNavigation?: BsPaises | undefined;
    coCotizacionesIndividuosLog?: CoCotizacionesIndividuosLog[] | undefined;
    peDomicilios?: PeDomicilios[] | undefined;

    constructor(data?: IBsProvincias) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idProvincia = _data["idProvincia"];
            this.idPais = _data["idPais"];
            this.descripcionProvincia = _data["descripcionProvincia"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.codigoProvincia = _data["codigoProvincia"];
            this.idPaisNavigation = _data["idPaisNavigation"] ? BsPaises.fromJS(_data["idPaisNavigation"]) : <any>undefined;
            if (Array.isArray(_data["coCotizacionesIndividuosLog"])) {
                this.coCotizacionesIndividuosLog = [] as any;
                for (let item of _data["coCotizacionesIndividuosLog"])
                    this.coCotizacionesIndividuosLog!.push(CoCotizacionesIndividuosLog.fromJS(item));
            }
            if (Array.isArray(_data["peDomicilios"])) {
                this.peDomicilios = [] as any;
                for (let item of _data["peDomicilios"])
                    this.peDomicilios!.push(PeDomicilios.fromJS(item));
            }
        }
    }

    static fromJS(data: any): BsProvincias {
        data = typeof data === 'object' ? data : {};
        let result = new BsProvincias();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idProvincia"] = this.idProvincia;
        data["idPais"] = this.idPais;
        data["descripcionProvincia"] = this.descripcionProvincia;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["codigoProvincia"] = this.codigoProvincia;
        data["idPaisNavigation"] = this.idPaisNavigation ? this.idPaisNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.coCotizacionesIndividuosLog)) {
            data["coCotizacionesIndividuosLog"] = [];
            for (let item of this.coCotizacionesIndividuosLog)
                data["coCotizacionesIndividuosLog"].push(item.toJSON());
        }
        if (Array.isArray(this.peDomicilios)) {
            data["peDomicilios"] = [];
            for (let item of this.peDomicilios)
                data["peDomicilios"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IBsProvincias {
    idProvincia?: number;
    idPais?: number;
    descripcionProvincia?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    codigoProvincia?: string | undefined;
    idPaisNavigation?: BsPaises | undefined;
    coCotizacionesIndividuosLog?: CoCotizacionesIndividuosLog[] | undefined;
    peDomicilios?: PeDomicilios[] | undefined;
}

export class PeDomicilios implements IPeDomicilios {
    idDomicilio?: number;
    calle?: string | undefined;
    numero?: string | undefined;
    piso?: string | undefined;
    deptoOficina?: string | undefined;
    ciudad?: string | undefined;
    cp?: string | undefined;
    idProvincia?: number | undefined;
    idPais?: number | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idTipoCalle?: number | undefined;
    barrio?: string | undefined;
    idPaisNavigation?: BsPaises | undefined;
    idProvinciaNavigation?: BsProvincias | undefined;
    idTipoCalleNavigation?: PeTiposCalle | undefined;
    peDomicilioPersonaJuridica?: PeDomicilioPersonaJuridica[] | undefined;
    peDomiciliosAgenciasCobranza?: PeDomiciliosAgenciasCobranza[] | undefined;
    peDomiciliosPersona?: PeDomiciliosPersona[] | undefined;

    constructor(data?: IPeDomicilios) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idDomicilio = _data["idDomicilio"];
            this.calle = _data["calle"];
            this.numero = _data["numero"];
            this.piso = _data["piso"];
            this.deptoOficina = _data["deptoOficina"];
            this.ciudad = _data["ciudad"];
            this.cp = _data["cp"];
            this.idProvincia = _data["idProvincia"];
            this.idPais = _data["idPais"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idTipoCalle = _data["idTipoCalle"];
            this.barrio = _data["barrio"];
            this.idPaisNavigation = _data["idPaisNavigation"] ? BsPaises.fromJS(_data["idPaisNavigation"]) : <any>undefined;
            this.idProvinciaNavigation = _data["idProvinciaNavigation"] ? BsProvincias.fromJS(_data["idProvinciaNavigation"]) : <any>undefined;
            this.idTipoCalleNavigation = _data["idTipoCalleNavigation"] ? PeTiposCalle.fromJS(_data["idTipoCalleNavigation"]) : <any>undefined;
            if (Array.isArray(_data["peDomicilioPersonaJuridica"])) {
                this.peDomicilioPersonaJuridica = [] as any;
                for (let item of _data["peDomicilioPersonaJuridica"])
                    this.peDomicilioPersonaJuridica!.push(PeDomicilioPersonaJuridica.fromJS(item));
            }
            if (Array.isArray(_data["peDomiciliosAgenciasCobranza"])) {
                this.peDomiciliosAgenciasCobranza = [] as any;
                for (let item of _data["peDomiciliosAgenciasCobranza"])
                    this.peDomiciliosAgenciasCobranza!.push(PeDomiciliosAgenciasCobranza.fromJS(item));
            }
            if (Array.isArray(_data["peDomiciliosPersona"])) {
                this.peDomiciliosPersona = [] as any;
                for (let item of _data["peDomiciliosPersona"])
                    this.peDomiciliosPersona!.push(PeDomiciliosPersona.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PeDomicilios {
        data = typeof data === 'object' ? data : {};
        let result = new PeDomicilios();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idDomicilio"] = this.idDomicilio;
        data["calle"] = this.calle;
        data["numero"] = this.numero;
        data["piso"] = this.piso;
        data["deptoOficina"] = this.deptoOficina;
        data["ciudad"] = this.ciudad;
        data["cp"] = this.cp;
        data["idProvincia"] = this.idProvincia;
        data["idPais"] = this.idPais;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idTipoCalle"] = this.idTipoCalle;
        data["barrio"] = this.barrio;
        data["idPaisNavigation"] = this.idPaisNavigation ? this.idPaisNavigation.toJSON() : <any>undefined;
        data["idProvinciaNavigation"] = this.idProvinciaNavigation ? this.idProvinciaNavigation.toJSON() : <any>undefined;
        data["idTipoCalleNavigation"] = this.idTipoCalleNavigation ? this.idTipoCalleNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.peDomicilioPersonaJuridica)) {
            data["peDomicilioPersonaJuridica"] = [];
            for (let item of this.peDomicilioPersonaJuridica)
                data["peDomicilioPersonaJuridica"].push(item.toJSON());
        }
        if (Array.isArray(this.peDomiciliosAgenciasCobranza)) {
            data["peDomiciliosAgenciasCobranza"] = [];
            for (let item of this.peDomiciliosAgenciasCobranza)
                data["peDomiciliosAgenciasCobranza"].push(item.toJSON());
        }
        if (Array.isArray(this.peDomiciliosPersona)) {
            data["peDomiciliosPersona"] = [];
            for (let item of this.peDomiciliosPersona)
                data["peDomiciliosPersona"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPeDomicilios {
    idDomicilio?: number;
    calle?: string | undefined;
    numero?: string | undefined;
    piso?: string | undefined;
    deptoOficina?: string | undefined;
    ciudad?: string | undefined;
    cp?: string | undefined;
    idProvincia?: number | undefined;
    idPais?: number | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idTipoCalle?: number | undefined;
    barrio?: string | undefined;
    idPaisNavigation?: BsPaises | undefined;
    idProvinciaNavigation?: BsProvincias | undefined;
    idTipoCalleNavigation?: PeTiposCalle | undefined;
    peDomicilioPersonaJuridica?: PeDomicilioPersonaJuridica[] | undefined;
    peDomiciliosAgenciasCobranza?: PeDomiciliosAgenciasCobranza[] | undefined;
    peDomiciliosPersona?: PeDomiciliosPersona[] | undefined;
}

export class PeTiposCalle implements IPeTiposCalle {
    idTipoCalle?: number;
    idCompania?: number;
    codigoTipoCalle?: string | undefined;
    descripcionTipoCalle?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idCompaniaNavigation?: BsCompanias | undefined;
    peDomicilios?: PeDomicilios[] | undefined;

    constructor(data?: IPeTiposCalle) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idTipoCalle = _data["idTipoCalle"];
            this.idCompania = _data["idCompania"];
            this.codigoTipoCalle = _data["codigoTipoCalle"];
            this.descripcionTipoCalle = _data["descripcionTipoCalle"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idCompaniaNavigation = _data["idCompaniaNavigation"] ? BsCompanias.fromJS(_data["idCompaniaNavigation"]) : <any>undefined;
            if (Array.isArray(_data["peDomicilios"])) {
                this.peDomicilios = [] as any;
                for (let item of _data["peDomicilios"])
                    this.peDomicilios!.push(PeDomicilios.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PeTiposCalle {
        data = typeof data === 'object' ? data : {};
        let result = new PeTiposCalle();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idTipoCalle"] = this.idTipoCalle;
        data["idCompania"] = this.idCompania;
        data["codigoTipoCalle"] = this.codigoTipoCalle;
        data["descripcionTipoCalle"] = this.descripcionTipoCalle;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idCompaniaNavigation"] = this.idCompaniaNavigation ? this.idCompaniaNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.peDomicilios)) {
            data["peDomicilios"] = [];
            for (let item of this.peDomicilios)
                data["peDomicilios"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPeTiposCalle {
    idTipoCalle?: number;
    idCompania?: number;
    codigoTipoCalle?: string | undefined;
    descripcionTipoCalle?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idCompaniaNavigation?: BsCompanias | undefined;
    peDomicilios?: PeDomicilios[] | undefined;
}

export class PeDomicilioPersonaJuridica implements IPeDomicilioPersonaJuridica {
    idDomicilioPersonaJuridica?: number;
    idPersonaJuridica?: number;
    idDomicilio?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idDomicilioNavigation?: PeDomicilios | undefined;
    idPersonaJuridicaNavigation?: PePersonaJuridica | undefined;

    constructor(data?: IPeDomicilioPersonaJuridica) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idDomicilioPersonaJuridica = _data["idDomicilioPersonaJuridica"];
            this.idPersonaJuridica = _data["idPersonaJuridica"];
            this.idDomicilio = _data["idDomicilio"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idDomicilioNavigation = _data["idDomicilioNavigation"] ? PeDomicilios.fromJS(_data["idDomicilioNavigation"]) : <any>undefined;
            this.idPersonaJuridicaNavigation = _data["idPersonaJuridicaNavigation"] ? PePersonaJuridica.fromJS(_data["idPersonaJuridicaNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PeDomicilioPersonaJuridica {
        data = typeof data === 'object' ? data : {};
        let result = new PeDomicilioPersonaJuridica();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idDomicilioPersonaJuridica"] = this.idDomicilioPersonaJuridica;
        data["idPersonaJuridica"] = this.idPersonaJuridica;
        data["idDomicilio"] = this.idDomicilio;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idDomicilioNavigation"] = this.idDomicilioNavigation ? this.idDomicilioNavigation.toJSON() : <any>undefined;
        data["idPersonaJuridicaNavigation"] = this.idPersonaJuridicaNavigation ? this.idPersonaJuridicaNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPeDomicilioPersonaJuridica {
    idDomicilioPersonaJuridica?: number;
    idPersonaJuridica?: number;
    idDomicilio?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idDomicilioNavigation?: PeDomicilios | undefined;
    idPersonaJuridicaNavigation?: PePersonaJuridica | undefined;
}

export class PeDomiciliosAgenciasCobranza implements IPeDomiciliosAgenciasCobranza {
    idAgenciaCobranzaDomicilio?: number;
    idAgenciaCobranza?: number | undefined;
    idDomicilio?: number | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date | undefined;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idAgenciaCobranzaNavigation?: CoAgenciasCobranza | undefined;
    idDomicilioNavigation?: PeDomicilios | undefined;

    constructor(data?: IPeDomiciliosAgenciasCobranza) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idAgenciaCobranzaDomicilio = _data["idAgenciaCobranzaDomicilio"];
            this.idAgenciaCobranza = _data["idAgenciaCobranza"];
            this.idDomicilio = _data["idDomicilio"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idAgenciaCobranzaNavigation = _data["idAgenciaCobranzaNavigation"] ? CoAgenciasCobranza.fromJS(_data["idAgenciaCobranzaNavigation"]) : <any>undefined;
            this.idDomicilioNavigation = _data["idDomicilioNavigation"] ? PeDomicilios.fromJS(_data["idDomicilioNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PeDomiciliosAgenciasCobranza {
        data = typeof data === 'object' ? data : {};
        let result = new PeDomiciliosAgenciasCobranza();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idAgenciaCobranzaDomicilio"] = this.idAgenciaCobranzaDomicilio;
        data["idAgenciaCobranza"] = this.idAgenciaCobranza;
        data["idDomicilio"] = this.idDomicilio;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idAgenciaCobranzaNavigation"] = this.idAgenciaCobranzaNavigation ? this.idAgenciaCobranzaNavigation.toJSON() : <any>undefined;
        data["idDomicilioNavigation"] = this.idDomicilioNavigation ? this.idDomicilioNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPeDomiciliosAgenciasCobranza {
    idAgenciaCobranzaDomicilio?: number;
    idAgenciaCobranza?: number | undefined;
    idDomicilio?: number | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date | undefined;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idAgenciaCobranzaNavigation?: CoAgenciasCobranza | undefined;
    idDomicilioNavigation?: PeDomicilios | undefined;
}

export class CoAgenciasCobranza implements ICoAgenciasCobranza {
    idAgenciaCobranza?: number;
    idAgencia?: number | undefined;
    nombre?: string | undefined;
    email?: string | undefined;
    telefono?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date | undefined;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idAgenciaNavigation?: CoAgencias | undefined;
    peDomiciliosAgenciasCobranza?: PeDomiciliosAgenciasCobranza[] | undefined;

    constructor(data?: ICoAgenciasCobranza) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idAgenciaCobranza = _data["idAgenciaCobranza"];
            this.idAgencia = _data["idAgencia"];
            this.nombre = _data["nombre"];
            this.email = _data["email"];
            this.telefono = _data["telefono"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idAgenciaNavigation = _data["idAgenciaNavigation"] ? CoAgencias.fromJS(_data["idAgenciaNavigation"]) : <any>undefined;
            if (Array.isArray(_data["peDomiciliosAgenciasCobranza"])) {
                this.peDomiciliosAgenciasCobranza = [] as any;
                for (let item of _data["peDomiciliosAgenciasCobranza"])
                    this.peDomiciliosAgenciasCobranza!.push(PeDomiciliosAgenciasCobranza.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CoAgenciasCobranza {
        data = typeof data === 'object' ? data : {};
        let result = new CoAgenciasCobranza();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idAgenciaCobranza"] = this.idAgenciaCobranza;
        data["idAgencia"] = this.idAgencia;
        data["nombre"] = this.nombre;
        data["email"] = this.email;
        data["telefono"] = this.telefono;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idAgenciaNavigation"] = this.idAgenciaNavigation ? this.idAgenciaNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.peDomiciliosAgenciasCobranza)) {
            data["peDomiciliosAgenciasCobranza"] = [];
            for (let item of this.peDomiciliosAgenciasCobranza)
                data["peDomiciliosAgenciasCobranza"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICoAgenciasCobranza {
    idAgenciaCobranza?: number;
    idAgencia?: number | undefined;
    nombre?: string | undefined;
    email?: string | undefined;
    telefono?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date | undefined;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idAgenciaNavigation?: CoAgencias | undefined;
    peDomiciliosAgenciasCobranza?: PeDomiciliosAgenciasCobranza[] | undefined;
}

export class PeDomiciliosPersona implements IPeDomiciliosPersona {
    idDomicilioPersona?: number;
    idPersona?: number;
    idDomicilio?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idDomicilioNavigation?: PeDomicilios | undefined;
    idPersonaNavigation?: PePersonaFisica | undefined;

    constructor(data?: IPeDomiciliosPersona) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idDomicilioPersona = _data["idDomicilioPersona"];
            this.idPersona = _data["idPersona"];
            this.idDomicilio = _data["idDomicilio"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idDomicilioNavigation = _data["idDomicilioNavigation"] ? PeDomicilios.fromJS(_data["idDomicilioNavigation"]) : <any>undefined;
            this.idPersonaNavigation = _data["idPersonaNavigation"] ? PePersonaFisica.fromJS(_data["idPersonaNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PeDomiciliosPersona {
        data = typeof data === 'object' ? data : {};
        let result = new PeDomiciliosPersona();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idDomicilioPersona"] = this.idDomicilioPersona;
        data["idPersona"] = this.idPersona;
        data["idDomicilio"] = this.idDomicilio;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idDomicilioNavigation"] = this.idDomicilioNavigation ? this.idDomicilioNavigation.toJSON() : <any>undefined;
        data["idPersonaNavigation"] = this.idPersonaNavigation ? this.idPersonaNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPeDomiciliosPersona {
    idDomicilioPersona?: number;
    idPersona?: number;
    idDomicilio?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idDomicilioNavigation?: PeDomicilios | undefined;
    idPersonaNavigation?: PePersonaFisica | undefined;
}

export class PePersonaFisica implements IPePersonaFisica {
    idPersona?: number;
    apellido?: string | undefined;
    nombre?: string | undefined;
    fechaNacimiento?: Date | undefined;
    idPaisResidencia?: number;
    sexo?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idResponsableIva?: number | undefined;
    idPaisResidenciaNavigation?: BsPaises | undefined;
    coClientes?: CoClientes[] | undefined;
    coClientesIndividuales?: CoClientesIndividuales[] | undefined;
    coComposicionGrupoClienteIndividual?: CoComposicionGrupoClienteIndividual[] | undefined;
    coConsumosVentas?: CoConsumosVentas[] | undefined;
    coEjecutivos?: CoEjecutivos[] | undefined;
    coNominasEmpresas?: CoNominasEmpresas[] | undefined;
    coVendedoresAgencias?: CoVendedoresAgencias[] | undefined;
    peAlteracaoPessoaFisica?: PeAlteracaoPessoaFisica[] | undefined;
    peCanalesPersona?: PeCanalesPersona[] | undefined;
    peDocumentosPersonaFisica?: PeDocumentosPersonaFisica[] | undefined;
    peDomiciliosPersona?: PeDomiciliosPersona[] | undefined;
    poBeneficiariosPoliza?: PoBeneficiariosPoliza[] | undefined;

    constructor(data?: IPePersonaFisica) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idPersona = _data["idPersona"];
            this.apellido = _data["apellido"];
            this.nombre = _data["nombre"];
            this.fechaNacimiento = _data["fechaNacimiento"] ? new Date(_data["fechaNacimiento"].toString()) : <any>undefined;
            this.idPaisResidencia = _data["idPaisResidencia"];
            this.sexo = _data["sexo"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idResponsableIva = _data["idResponsableIva"];
            this.idPaisResidenciaNavigation = _data["idPaisResidenciaNavigation"] ? BsPaises.fromJS(_data["idPaisResidenciaNavigation"]) : <any>undefined;
            if (Array.isArray(_data["coClientes"])) {
                this.coClientes = [] as any;
                for (let item of _data["coClientes"])
                    this.coClientes!.push(CoClientes.fromJS(item));
            }
            if (Array.isArray(_data["coClientesIndividuales"])) {
                this.coClientesIndividuales = [] as any;
                for (let item of _data["coClientesIndividuales"])
                    this.coClientesIndividuales!.push(CoClientesIndividuales.fromJS(item));
            }
            if (Array.isArray(_data["coComposicionGrupoClienteIndividual"])) {
                this.coComposicionGrupoClienteIndividual = [] as any;
                for (let item of _data["coComposicionGrupoClienteIndividual"])
                    this.coComposicionGrupoClienteIndividual!.push(CoComposicionGrupoClienteIndividual.fromJS(item));
            }
            if (Array.isArray(_data["coConsumosVentas"])) {
                this.coConsumosVentas = [] as any;
                for (let item of _data["coConsumosVentas"])
                    this.coConsumosVentas!.push(CoConsumosVentas.fromJS(item));
            }
            if (Array.isArray(_data["coEjecutivos"])) {
                this.coEjecutivos = [] as any;
                for (let item of _data["coEjecutivos"])
                    this.coEjecutivos!.push(CoEjecutivos.fromJS(item));
            }
            if (Array.isArray(_data["coNominasEmpresas"])) {
                this.coNominasEmpresas = [] as any;
                for (let item of _data["coNominasEmpresas"])
                    this.coNominasEmpresas!.push(CoNominasEmpresas.fromJS(item));
            }
            if (Array.isArray(_data["coVendedoresAgencias"])) {
                this.coVendedoresAgencias = [] as any;
                for (let item of _data["coVendedoresAgencias"])
                    this.coVendedoresAgencias!.push(CoVendedoresAgencias.fromJS(item));
            }
            if (Array.isArray(_data["peAlteracaoPessoaFisica"])) {
                this.peAlteracaoPessoaFisica = [] as any;
                for (let item of _data["peAlteracaoPessoaFisica"])
                    this.peAlteracaoPessoaFisica!.push(PeAlteracaoPessoaFisica.fromJS(item));
            }
            if (Array.isArray(_data["peCanalesPersona"])) {
                this.peCanalesPersona = [] as any;
                for (let item of _data["peCanalesPersona"])
                    this.peCanalesPersona!.push(PeCanalesPersona.fromJS(item));
            }
            if (Array.isArray(_data["peDocumentosPersonaFisica"])) {
                this.peDocumentosPersonaFisica = [] as any;
                for (let item of _data["peDocumentosPersonaFisica"])
                    this.peDocumentosPersonaFisica!.push(PeDocumentosPersonaFisica.fromJS(item));
            }
            if (Array.isArray(_data["peDomiciliosPersona"])) {
                this.peDomiciliosPersona = [] as any;
                for (let item of _data["peDomiciliosPersona"])
                    this.peDomiciliosPersona!.push(PeDomiciliosPersona.fromJS(item));
            }
            if (Array.isArray(_data["poBeneficiariosPoliza"])) {
                this.poBeneficiariosPoliza = [] as any;
                for (let item of _data["poBeneficiariosPoliza"])
                    this.poBeneficiariosPoliza!.push(PoBeneficiariosPoliza.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PePersonaFisica {
        data = typeof data === 'object' ? data : {};
        let result = new PePersonaFisica();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idPersona"] = this.idPersona;
        data["apellido"] = this.apellido;
        data["nombre"] = this.nombre;
        data["fechaNacimiento"] = this.fechaNacimiento ? this.fechaNacimiento.toISOString() : <any>undefined;
        data["idPaisResidencia"] = this.idPaisResidencia;
        data["sexo"] = this.sexo;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idResponsableIva"] = this.idResponsableIva;
        data["idPaisResidenciaNavigation"] = this.idPaisResidenciaNavigation ? this.idPaisResidenciaNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.coClientes)) {
            data["coClientes"] = [];
            for (let item of this.coClientes)
                data["coClientes"].push(item.toJSON());
        }
        if (Array.isArray(this.coClientesIndividuales)) {
            data["coClientesIndividuales"] = [];
            for (let item of this.coClientesIndividuales)
                data["coClientesIndividuales"].push(item.toJSON());
        }
        if (Array.isArray(this.coComposicionGrupoClienteIndividual)) {
            data["coComposicionGrupoClienteIndividual"] = [];
            for (let item of this.coComposicionGrupoClienteIndividual)
                data["coComposicionGrupoClienteIndividual"].push(item.toJSON());
        }
        if (Array.isArray(this.coConsumosVentas)) {
            data["coConsumosVentas"] = [];
            for (let item of this.coConsumosVentas)
                data["coConsumosVentas"].push(item.toJSON());
        }
        if (Array.isArray(this.coEjecutivos)) {
            data["coEjecutivos"] = [];
            for (let item of this.coEjecutivos)
                data["coEjecutivos"].push(item.toJSON());
        }
        if (Array.isArray(this.coNominasEmpresas)) {
            data["coNominasEmpresas"] = [];
            for (let item of this.coNominasEmpresas)
                data["coNominasEmpresas"].push(item.toJSON());
        }
        if (Array.isArray(this.coVendedoresAgencias)) {
            data["coVendedoresAgencias"] = [];
            for (let item of this.coVendedoresAgencias)
                data["coVendedoresAgencias"].push(item.toJSON());
        }
        if (Array.isArray(this.peAlteracaoPessoaFisica)) {
            data["peAlteracaoPessoaFisica"] = [];
            for (let item of this.peAlteracaoPessoaFisica)
                data["peAlteracaoPessoaFisica"].push(item.toJSON());
        }
        if (Array.isArray(this.peCanalesPersona)) {
            data["peCanalesPersona"] = [];
            for (let item of this.peCanalesPersona)
                data["peCanalesPersona"].push(item.toJSON());
        }
        if (Array.isArray(this.peDocumentosPersonaFisica)) {
            data["peDocumentosPersonaFisica"] = [];
            for (let item of this.peDocumentosPersonaFisica)
                data["peDocumentosPersonaFisica"].push(item.toJSON());
        }
        if (Array.isArray(this.peDomiciliosPersona)) {
            data["peDomiciliosPersona"] = [];
            for (let item of this.peDomiciliosPersona)
                data["peDomiciliosPersona"].push(item.toJSON());
        }
        if (Array.isArray(this.poBeneficiariosPoliza)) {
            data["poBeneficiariosPoliza"] = [];
            for (let item of this.poBeneficiariosPoliza)
                data["poBeneficiariosPoliza"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPePersonaFisica {
    idPersona?: number;
    apellido?: string | undefined;
    nombre?: string | undefined;
    fechaNacimiento?: Date | undefined;
    idPaisResidencia?: number;
    sexo?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idResponsableIva?: number | undefined;
    idPaisResidenciaNavigation?: BsPaises | undefined;
    coClientes?: CoClientes[] | undefined;
    coClientesIndividuales?: CoClientesIndividuales[] | undefined;
    coComposicionGrupoClienteIndividual?: CoComposicionGrupoClienteIndividual[] | undefined;
    coConsumosVentas?: CoConsumosVentas[] | undefined;
    coEjecutivos?: CoEjecutivos[] | undefined;
    coNominasEmpresas?: CoNominasEmpresas[] | undefined;
    coVendedoresAgencias?: CoVendedoresAgencias[] | undefined;
    peAlteracaoPessoaFisica?: PeAlteracaoPessoaFisica[] | undefined;
    peCanalesPersona?: PeCanalesPersona[] | undefined;
    peDocumentosPersonaFisica?: PeDocumentosPersonaFisica[] | undefined;
    peDomiciliosPersona?: PeDomiciliosPersona[] | undefined;
    poBeneficiariosPoliza?: PoBeneficiariosPoliza[] | undefined;
}

export class CoClientes implements ICoClientes {
    idCliente?: number;
    idTipoCliente?: number;
    idPersonaJuridica?: number | undefined;
    idPersona?: number | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idClienteIndividual?: number | undefined;
    idEmpresa?: number | undefined;
    idClienteIndividualNavigation?: CoClientesIndividuales | undefined;
    idEmpresaNavigation?: CoEmpresas | undefined;
    idPersonaJuridicaNavigation?: PePersonaJuridica | undefined;
    idPersonaNavigation?: PePersonaFisica | undefined;
    idTipoClienteNavigation?: CoTiposCliente | undefined;
    coNominasEmpresas?: CoNominasEmpresas[] | undefined;
    coVentaPacksOnline?: CoVentaPacksOnline[] | undefined;
    coVentas?: CoVentas[] | undefined;

    constructor(data?: ICoClientes) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idCliente = _data["idCliente"];
            this.idTipoCliente = _data["idTipoCliente"];
            this.idPersonaJuridica = _data["idPersonaJuridica"];
            this.idPersona = _data["idPersona"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idClienteIndividual = _data["idClienteIndividual"];
            this.idEmpresa = _data["idEmpresa"];
            this.idClienteIndividualNavigation = _data["idClienteIndividualNavigation"] ? CoClientesIndividuales.fromJS(_data["idClienteIndividualNavigation"]) : <any>undefined;
            this.idEmpresaNavigation = _data["idEmpresaNavigation"] ? CoEmpresas.fromJS(_data["idEmpresaNavigation"]) : <any>undefined;
            this.idPersonaJuridicaNavigation = _data["idPersonaJuridicaNavigation"] ? PePersonaJuridica.fromJS(_data["idPersonaJuridicaNavigation"]) : <any>undefined;
            this.idPersonaNavigation = _data["idPersonaNavigation"] ? PePersonaFisica.fromJS(_data["idPersonaNavigation"]) : <any>undefined;
            this.idTipoClienteNavigation = _data["idTipoClienteNavigation"] ? CoTiposCliente.fromJS(_data["idTipoClienteNavigation"]) : <any>undefined;
            if (Array.isArray(_data["coNominasEmpresas"])) {
                this.coNominasEmpresas = [] as any;
                for (let item of _data["coNominasEmpresas"])
                    this.coNominasEmpresas!.push(CoNominasEmpresas.fromJS(item));
            }
            if (Array.isArray(_data["coVentaPacksOnline"])) {
                this.coVentaPacksOnline = [] as any;
                for (let item of _data["coVentaPacksOnline"])
                    this.coVentaPacksOnline!.push(CoVentaPacksOnline.fromJS(item));
            }
            if (Array.isArray(_data["coVentas"])) {
                this.coVentas = [] as any;
                for (let item of _data["coVentas"])
                    this.coVentas!.push(CoVentas.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CoClientes {
        data = typeof data === 'object' ? data : {};
        let result = new CoClientes();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idCliente"] = this.idCliente;
        data["idTipoCliente"] = this.idTipoCliente;
        data["idPersonaJuridica"] = this.idPersonaJuridica;
        data["idPersona"] = this.idPersona;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idClienteIndividual"] = this.idClienteIndividual;
        data["idEmpresa"] = this.idEmpresa;
        data["idClienteIndividualNavigation"] = this.idClienteIndividualNavigation ? this.idClienteIndividualNavigation.toJSON() : <any>undefined;
        data["idEmpresaNavigation"] = this.idEmpresaNavigation ? this.idEmpresaNavigation.toJSON() : <any>undefined;
        data["idPersonaJuridicaNavigation"] = this.idPersonaJuridicaNavigation ? this.idPersonaJuridicaNavigation.toJSON() : <any>undefined;
        data["idPersonaNavigation"] = this.idPersonaNavigation ? this.idPersonaNavigation.toJSON() : <any>undefined;
        data["idTipoClienteNavigation"] = this.idTipoClienteNavigation ? this.idTipoClienteNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.coNominasEmpresas)) {
            data["coNominasEmpresas"] = [];
            for (let item of this.coNominasEmpresas)
                data["coNominasEmpresas"].push(item.toJSON());
        }
        if (Array.isArray(this.coVentaPacksOnline)) {
            data["coVentaPacksOnline"] = [];
            for (let item of this.coVentaPacksOnline)
                data["coVentaPacksOnline"].push(item.toJSON());
        }
        if (Array.isArray(this.coVentas)) {
            data["coVentas"] = [];
            for (let item of this.coVentas)
                data["coVentas"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICoClientes {
    idCliente?: number;
    idTipoCliente?: number;
    idPersonaJuridica?: number | undefined;
    idPersona?: number | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idClienteIndividual?: number | undefined;
    idEmpresa?: number | undefined;
    idClienteIndividualNavigation?: CoClientesIndividuales | undefined;
    idEmpresaNavigation?: CoEmpresas | undefined;
    idPersonaJuridicaNavigation?: PePersonaJuridica | undefined;
    idPersonaNavigation?: PePersonaFisica | undefined;
    idTipoClienteNavigation?: CoTiposCliente | undefined;
    coNominasEmpresas?: CoNominasEmpresas[] | undefined;
    coVentaPacksOnline?: CoVentaPacksOnline[] | undefined;
    coVentas?: CoVentas[] | undefined;
}

export class CoClientesIndividuales implements ICoClientesIndividuales {
    idClienteIndividual?: number;
    idPersona?: number;
    fechaBaja?: Date | undefined;
    idFormaPago?: number | undefined;
    numeroTarjeta?: string | undefined;
    fechaVencimiento?: Date | undefined;
    codigoVerificador?: string | undefined;
    marcaGrupo?: boolean;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idCompania?: number;
    idFormaPagoNavigation?: PoFormasPago | undefined;
    idPersonaNavigation?: PePersonaFisica | undefined;
    coClientes?: CoClientes[] | undefined;
    coComposicionGrupoClienteIndividual?: CoComposicionGrupoClienteIndividual[] | undefined;

    constructor(data?: ICoClientesIndividuales) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idClienteIndividual = _data["idClienteIndividual"];
            this.idPersona = _data["idPersona"];
            this.fechaBaja = _data["fechaBaja"] ? new Date(_data["fechaBaja"].toString()) : <any>undefined;
            this.idFormaPago = _data["idFormaPago"];
            this.numeroTarjeta = _data["numeroTarjeta"];
            this.fechaVencimiento = _data["fechaVencimiento"] ? new Date(_data["fechaVencimiento"].toString()) : <any>undefined;
            this.codigoVerificador = _data["codigoVerificador"];
            this.marcaGrupo = _data["marcaGrupo"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idCompania = _data["idCompania"];
            this.idFormaPagoNavigation = _data["idFormaPagoNavigation"] ? PoFormasPago.fromJS(_data["idFormaPagoNavigation"]) : <any>undefined;
            this.idPersonaNavigation = _data["idPersonaNavigation"] ? PePersonaFisica.fromJS(_data["idPersonaNavigation"]) : <any>undefined;
            if (Array.isArray(_data["coClientes"])) {
                this.coClientes = [] as any;
                for (let item of _data["coClientes"])
                    this.coClientes!.push(CoClientes.fromJS(item));
            }
            if (Array.isArray(_data["coComposicionGrupoClienteIndividual"])) {
                this.coComposicionGrupoClienteIndividual = [] as any;
                for (let item of _data["coComposicionGrupoClienteIndividual"])
                    this.coComposicionGrupoClienteIndividual!.push(CoComposicionGrupoClienteIndividual.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CoClientesIndividuales {
        data = typeof data === 'object' ? data : {};
        let result = new CoClientesIndividuales();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idClienteIndividual"] = this.idClienteIndividual;
        data["idPersona"] = this.idPersona;
        data["fechaBaja"] = this.fechaBaja ? this.fechaBaja.toISOString() : <any>undefined;
        data["idFormaPago"] = this.idFormaPago;
        data["numeroTarjeta"] = this.numeroTarjeta;
        data["fechaVencimiento"] = this.fechaVencimiento ? this.fechaVencimiento.toISOString() : <any>undefined;
        data["codigoVerificador"] = this.codigoVerificador;
        data["marcaGrupo"] = this.marcaGrupo;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idCompania"] = this.idCompania;
        data["idFormaPagoNavigation"] = this.idFormaPagoNavigation ? this.idFormaPagoNavigation.toJSON() : <any>undefined;
        data["idPersonaNavigation"] = this.idPersonaNavigation ? this.idPersonaNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.coClientes)) {
            data["coClientes"] = [];
            for (let item of this.coClientes)
                data["coClientes"].push(item.toJSON());
        }
        if (Array.isArray(this.coComposicionGrupoClienteIndividual)) {
            data["coComposicionGrupoClienteIndividual"] = [];
            for (let item of this.coComposicionGrupoClienteIndividual)
                data["coComposicionGrupoClienteIndividual"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICoClientesIndividuales {
    idClienteIndividual?: number;
    idPersona?: number;
    fechaBaja?: Date | undefined;
    idFormaPago?: number | undefined;
    numeroTarjeta?: string | undefined;
    fechaVencimiento?: Date | undefined;
    codigoVerificador?: string | undefined;
    marcaGrupo?: boolean;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idCompania?: number;
    idFormaPagoNavigation?: PoFormasPago | undefined;
    idPersonaNavigation?: PePersonaFisica | undefined;
    coClientes?: CoClientes[] | undefined;
    coComposicionGrupoClienteIndividual?: CoComposicionGrupoClienteIndividual[] | undefined;
}

export class PoFormasPago implements IPoFormasPago {
    idFormaPago?: number;
    codigoFormaPago?: string | undefined;
    descripcionFormaPago?: string | undefined;
    tipoFormaPago?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    urlPagoOnline?: string | undefined;
    cantidadCuotas?: number | undefined;
    idTipoInteres?: number | undefined;
    codigoPasarela?: string | undefined;
    imagenUrl?: string | undefined;
    coClientesIndividuales?: CoClientesIndividuales[] | undefined;
    coFormasPagoAgencias?: CoFormasPagoAgencias[] | undefined;
    coVentasFormaPago?: CoVentasFormaPago[] | undefined;
    peFormasPagoTipoCliente?: PeFormasPagoTipoCliente[] | undefined;
    poDetalleFormasPago?: PoDetalleFormasPago[] | undefined;
    prFormaPagoCuotaInteres?: PrFormaPagoCuotaInteres[] | undefined;
    prFormasPagoProducto?: PrFormasPagoProducto[] | undefined;

    constructor(data?: IPoFormasPago) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idFormaPago = _data["idFormaPago"];
            this.codigoFormaPago = _data["codigoFormaPago"];
            this.descripcionFormaPago = _data["descripcionFormaPago"];
            this.tipoFormaPago = _data["tipoFormaPago"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.urlPagoOnline = _data["urlPagoOnline"];
            this.cantidadCuotas = _data["cantidadCuotas"];
            this.idTipoInteres = _data["idTipoInteres"];
            this.codigoPasarela = _data["codigoPasarela"];
            this.imagenUrl = _data["imagenUrl"];
            if (Array.isArray(_data["coClientesIndividuales"])) {
                this.coClientesIndividuales = [] as any;
                for (let item of _data["coClientesIndividuales"])
                    this.coClientesIndividuales!.push(CoClientesIndividuales.fromJS(item));
            }
            if (Array.isArray(_data["coFormasPagoAgencias"])) {
                this.coFormasPagoAgencias = [] as any;
                for (let item of _data["coFormasPagoAgencias"])
                    this.coFormasPagoAgencias!.push(CoFormasPagoAgencias.fromJS(item));
            }
            if (Array.isArray(_data["coVentasFormaPago"])) {
                this.coVentasFormaPago = [] as any;
                for (let item of _data["coVentasFormaPago"])
                    this.coVentasFormaPago!.push(CoVentasFormaPago.fromJS(item));
            }
            if (Array.isArray(_data["peFormasPagoTipoCliente"])) {
                this.peFormasPagoTipoCliente = [] as any;
                for (let item of _data["peFormasPagoTipoCliente"])
                    this.peFormasPagoTipoCliente!.push(PeFormasPagoTipoCliente.fromJS(item));
            }
            if (Array.isArray(_data["poDetalleFormasPago"])) {
                this.poDetalleFormasPago = [] as any;
                for (let item of _data["poDetalleFormasPago"])
                    this.poDetalleFormasPago!.push(PoDetalleFormasPago.fromJS(item));
            }
            if (Array.isArray(_data["prFormaPagoCuotaInteres"])) {
                this.prFormaPagoCuotaInteres = [] as any;
                for (let item of _data["prFormaPagoCuotaInteres"])
                    this.prFormaPagoCuotaInteres!.push(PrFormaPagoCuotaInteres.fromJS(item));
            }
            if (Array.isArray(_data["prFormasPagoProducto"])) {
                this.prFormasPagoProducto = [] as any;
                for (let item of _data["prFormasPagoProducto"])
                    this.prFormasPagoProducto!.push(PrFormasPagoProducto.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PoFormasPago {
        data = typeof data === 'object' ? data : {};
        let result = new PoFormasPago();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idFormaPago"] = this.idFormaPago;
        data["codigoFormaPago"] = this.codigoFormaPago;
        data["descripcionFormaPago"] = this.descripcionFormaPago;
        data["tipoFormaPago"] = this.tipoFormaPago;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["urlPagoOnline"] = this.urlPagoOnline;
        data["cantidadCuotas"] = this.cantidadCuotas;
        data["idTipoInteres"] = this.idTipoInteres;
        data["codigoPasarela"] = this.codigoPasarela;
        data["imagenUrl"] = this.imagenUrl;
        if (Array.isArray(this.coClientesIndividuales)) {
            data["coClientesIndividuales"] = [];
            for (let item of this.coClientesIndividuales)
                data["coClientesIndividuales"].push(item.toJSON());
        }
        if (Array.isArray(this.coFormasPagoAgencias)) {
            data["coFormasPagoAgencias"] = [];
            for (let item of this.coFormasPagoAgencias)
                data["coFormasPagoAgencias"].push(item.toJSON());
        }
        if (Array.isArray(this.coVentasFormaPago)) {
            data["coVentasFormaPago"] = [];
            for (let item of this.coVentasFormaPago)
                data["coVentasFormaPago"].push(item.toJSON());
        }
        if (Array.isArray(this.peFormasPagoTipoCliente)) {
            data["peFormasPagoTipoCliente"] = [];
            for (let item of this.peFormasPagoTipoCliente)
                data["peFormasPagoTipoCliente"].push(item.toJSON());
        }
        if (Array.isArray(this.poDetalleFormasPago)) {
            data["poDetalleFormasPago"] = [];
            for (let item of this.poDetalleFormasPago)
                data["poDetalleFormasPago"].push(item.toJSON());
        }
        if (Array.isArray(this.prFormaPagoCuotaInteres)) {
            data["prFormaPagoCuotaInteres"] = [];
            for (let item of this.prFormaPagoCuotaInteres)
                data["prFormaPagoCuotaInteres"].push(item.toJSON());
        }
        if (Array.isArray(this.prFormasPagoProducto)) {
            data["prFormasPagoProducto"] = [];
            for (let item of this.prFormasPagoProducto)
                data["prFormasPagoProducto"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPoFormasPago {
    idFormaPago?: number;
    codigoFormaPago?: string | undefined;
    descripcionFormaPago?: string | undefined;
    tipoFormaPago?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    urlPagoOnline?: string | undefined;
    cantidadCuotas?: number | undefined;
    idTipoInteres?: number | undefined;
    codigoPasarela?: string | undefined;
    imagenUrl?: string | undefined;
    coClientesIndividuales?: CoClientesIndividuales[] | undefined;
    coFormasPagoAgencias?: CoFormasPagoAgencias[] | undefined;
    coVentasFormaPago?: CoVentasFormaPago[] | undefined;
    peFormasPagoTipoCliente?: PeFormasPagoTipoCliente[] | undefined;
    poDetalleFormasPago?: PoDetalleFormasPago[] | undefined;
    prFormaPagoCuotaInteres?: PrFormaPagoCuotaInteres[] | undefined;
    prFormasPagoProducto?: PrFormasPagoProducto[] | undefined;
}

export class CoFormasPagoAgencias implements ICoFormasPagoAgencias {
    idFormaPagoAgencia?: number;
    idAgencia?: number;
    idFormaPago?: number;
    fechaInicio?: Date;
    fechaFin?: Date | undefined;
    fechaBaja?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    urlPagoOnline?: string | undefined;
    cantidadCuotas?: number | undefined;
    montoMinimoCuotas?: number | undefined;
    idAgenciaNavigation?: CoAgencias | undefined;
    idFormaPagoNavigation?: PoFormasPago | undefined;

    constructor(data?: ICoFormasPagoAgencias) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idFormaPagoAgencia = _data["idFormaPagoAgencia"];
            this.idAgencia = _data["idAgencia"];
            this.idFormaPago = _data["idFormaPago"];
            this.fechaInicio = _data["fechaInicio"] ? new Date(_data["fechaInicio"].toString()) : <any>undefined;
            this.fechaFin = _data["fechaFin"] ? new Date(_data["fechaFin"].toString()) : <any>undefined;
            this.fechaBaja = _data["fechaBaja"] ? new Date(_data["fechaBaja"].toString()) : <any>undefined;
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.urlPagoOnline = _data["urlPagoOnline"];
            this.cantidadCuotas = _data["cantidadCuotas"];
            this.montoMinimoCuotas = _data["montoMinimoCuotas"];
            this.idAgenciaNavigation = _data["idAgenciaNavigation"] ? CoAgencias.fromJS(_data["idAgenciaNavigation"]) : <any>undefined;
            this.idFormaPagoNavigation = _data["idFormaPagoNavigation"] ? PoFormasPago.fromJS(_data["idFormaPagoNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): CoFormasPagoAgencias {
        data = typeof data === 'object' ? data : {};
        let result = new CoFormasPagoAgencias();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idFormaPagoAgencia"] = this.idFormaPagoAgencia;
        data["idAgencia"] = this.idAgencia;
        data["idFormaPago"] = this.idFormaPago;
        data["fechaInicio"] = this.fechaInicio ? this.fechaInicio.toISOString() : <any>undefined;
        data["fechaFin"] = this.fechaFin ? this.fechaFin.toISOString() : <any>undefined;
        data["fechaBaja"] = this.fechaBaja ? this.fechaBaja.toISOString() : <any>undefined;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["urlPagoOnline"] = this.urlPagoOnline;
        data["cantidadCuotas"] = this.cantidadCuotas;
        data["montoMinimoCuotas"] = this.montoMinimoCuotas;
        data["idAgenciaNavigation"] = this.idAgenciaNavigation ? this.idAgenciaNavigation.toJSON() : <any>undefined;
        data["idFormaPagoNavigation"] = this.idFormaPagoNavigation ? this.idFormaPagoNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface ICoFormasPagoAgencias {
    idFormaPagoAgencia?: number;
    idAgencia?: number;
    idFormaPago?: number;
    fechaInicio?: Date;
    fechaFin?: Date | undefined;
    fechaBaja?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    urlPagoOnline?: string | undefined;
    cantidadCuotas?: number | undefined;
    montoMinimoCuotas?: number | undefined;
    idAgenciaNavigation?: CoAgencias | undefined;
    idFormaPagoNavigation?: PoFormasPago | undefined;
}

export class CoVentasFormaPago implements ICoVentasFormaPago {
    idVentaFormaPago?: number;
    idVenta?: number;
    idFormaPagoBs?: number;
    importe?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idFormaPagoBsNavigation?: PoFormasPago | undefined;
    idVentaNavigation?: CoVentas | undefined;

    constructor(data?: ICoVentasFormaPago) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idVentaFormaPago = _data["idVentaFormaPago"];
            this.idVenta = _data["idVenta"];
            this.idFormaPagoBs = _data["idFormaPagoBs"];
            this.importe = _data["importe"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idFormaPagoBsNavigation = _data["idFormaPagoBsNavigation"] ? PoFormasPago.fromJS(_data["idFormaPagoBsNavigation"]) : <any>undefined;
            this.idVentaNavigation = _data["idVentaNavigation"] ? CoVentas.fromJS(_data["idVentaNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): CoVentasFormaPago {
        data = typeof data === 'object' ? data : {};
        let result = new CoVentasFormaPago();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idVentaFormaPago"] = this.idVentaFormaPago;
        data["idVenta"] = this.idVenta;
        data["idFormaPagoBs"] = this.idFormaPagoBs;
        data["importe"] = this.importe;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idFormaPagoBsNavigation"] = this.idFormaPagoBsNavigation ? this.idFormaPagoBsNavigation.toJSON() : <any>undefined;
        data["idVentaNavigation"] = this.idVentaNavigation ? this.idVentaNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface ICoVentasFormaPago {
    idVentaFormaPago?: number;
    idVenta?: number;
    idFormaPagoBs?: number;
    importe?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idFormaPagoBsNavigation?: PoFormasPago | undefined;
    idVentaNavigation?: CoVentas | undefined;
}

export class CoVentas implements ICoVentas {
    idVenta?: number;
    idCliente?: number;
    fechaVenta?: Date;
    idModalidadProducto?: number;
    fechaAnulacion?: Date | undefined;
    comision?: number | undefined;
    idVendedor?: number | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    periodoVigencia?: number | undefined;
    renovacionAutomatica?: string | undefined;
    idClienteNavigation?: CoClientes | undefined;
    idModalidadProductoNavigation?: PrModalidadProducto | undefined;
    idVendedorNavigation?: CoVendedoresAgencias | undefined;
    coDetallesVenta?: CoDetallesVenta[] | undefined;
    coVentasFormaPago?: CoVentasFormaPago[] | undefined;

    constructor(data?: ICoVentas) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idVenta = _data["idVenta"];
            this.idCliente = _data["idCliente"];
            this.fechaVenta = _data["fechaVenta"] ? new Date(_data["fechaVenta"].toString()) : <any>undefined;
            this.idModalidadProducto = _data["idModalidadProducto"];
            this.fechaAnulacion = _data["fechaAnulacion"] ? new Date(_data["fechaAnulacion"].toString()) : <any>undefined;
            this.comision = _data["comision"];
            this.idVendedor = _data["idVendedor"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.periodoVigencia = _data["periodoVigencia"];
            this.renovacionAutomatica = _data["renovacionAutomatica"];
            this.idClienteNavigation = _data["idClienteNavigation"] ? CoClientes.fromJS(_data["idClienteNavigation"]) : <any>undefined;
            this.idModalidadProductoNavigation = _data["idModalidadProductoNavigation"] ? PrModalidadProducto.fromJS(_data["idModalidadProductoNavigation"]) : <any>undefined;
            this.idVendedorNavigation = _data["idVendedorNavigation"] ? CoVendedoresAgencias.fromJS(_data["idVendedorNavigation"]) : <any>undefined;
            if (Array.isArray(_data["coDetallesVenta"])) {
                this.coDetallesVenta = [] as any;
                for (let item of _data["coDetallesVenta"])
                    this.coDetallesVenta!.push(CoDetallesVenta.fromJS(item));
            }
            if (Array.isArray(_data["coVentasFormaPago"])) {
                this.coVentasFormaPago = [] as any;
                for (let item of _data["coVentasFormaPago"])
                    this.coVentasFormaPago!.push(CoVentasFormaPago.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CoVentas {
        data = typeof data === 'object' ? data : {};
        let result = new CoVentas();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idVenta"] = this.idVenta;
        data["idCliente"] = this.idCliente;
        data["fechaVenta"] = this.fechaVenta ? this.fechaVenta.toISOString() : <any>undefined;
        data["idModalidadProducto"] = this.idModalidadProducto;
        data["fechaAnulacion"] = this.fechaAnulacion ? this.fechaAnulacion.toISOString() : <any>undefined;
        data["comision"] = this.comision;
        data["idVendedor"] = this.idVendedor;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["periodoVigencia"] = this.periodoVigencia;
        data["renovacionAutomatica"] = this.renovacionAutomatica;
        data["idClienteNavigation"] = this.idClienteNavigation ? this.idClienteNavigation.toJSON() : <any>undefined;
        data["idModalidadProductoNavigation"] = this.idModalidadProductoNavigation ? this.idModalidadProductoNavigation.toJSON() : <any>undefined;
        data["idVendedorNavigation"] = this.idVendedorNavigation ? this.idVendedorNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.coDetallesVenta)) {
            data["coDetallesVenta"] = [];
            for (let item of this.coDetallesVenta)
                data["coDetallesVenta"].push(item.toJSON());
        }
        if (Array.isArray(this.coVentasFormaPago)) {
            data["coVentasFormaPago"] = [];
            for (let item of this.coVentasFormaPago)
                data["coVentasFormaPago"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICoVentas {
    idVenta?: number;
    idCliente?: number;
    fechaVenta?: Date;
    idModalidadProducto?: number;
    fechaAnulacion?: Date | undefined;
    comision?: number | undefined;
    idVendedor?: number | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    periodoVigencia?: number | undefined;
    renovacionAutomatica?: string | undefined;
    idClienteNavigation?: CoClientes | undefined;
    idModalidadProductoNavigation?: PrModalidadProducto | undefined;
    idVendedorNavigation?: CoVendedoresAgencias | undefined;
    coDetallesVenta?: CoDetallesVenta[] | undefined;
    coVentasFormaPago?: CoVentasFormaPago[] | undefined;
}

export class PrModalidadProducto implements IPrModalidadProducto {
    idModalidadProducto?: number;
    codigoModalidad?: string | undefined;
    descripcionModalidad?: string | undefined;
    idTipoUso?: number;
    idTipoFacturacionProducto?: number;
    requiereCtaCte?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idTipoFacturacionProductoNavigation?: PrTipoFacturacionProducto | undefined;
    idTipoUsoNavigation?: PrProductoTiposUso | undefined;
    coRelacionTipoClienteModalidadProducto?: CoRelacionTipoClienteModalidadProducto[] | undefined;
    coVentaPacksOnline?: CoVentaPacksOnline[] | undefined;
    coVentas?: CoVentas[] | undefined;
    prProductoPrecio?: PrProductoPrecio[] | undefined;
    prRelacionProductoModalidad?: PrRelacionProductoModalidad[] | undefined;

    constructor(data?: IPrModalidadProducto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idModalidadProducto = _data["idModalidadProducto"];
            this.codigoModalidad = _data["codigoModalidad"];
            this.descripcionModalidad = _data["descripcionModalidad"];
            this.idTipoUso = _data["idTipoUso"];
            this.idTipoFacturacionProducto = _data["idTipoFacturacionProducto"];
            this.requiereCtaCte = _data["requiereCtaCte"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idTipoFacturacionProductoNavigation = _data["idTipoFacturacionProductoNavigation"] ? PrTipoFacturacionProducto.fromJS(_data["idTipoFacturacionProductoNavigation"]) : <any>undefined;
            this.idTipoUsoNavigation = _data["idTipoUsoNavigation"] ? PrProductoTiposUso.fromJS(_data["idTipoUsoNavigation"]) : <any>undefined;
            if (Array.isArray(_data["coRelacionTipoClienteModalidadProducto"])) {
                this.coRelacionTipoClienteModalidadProducto = [] as any;
                for (let item of _data["coRelacionTipoClienteModalidadProducto"])
                    this.coRelacionTipoClienteModalidadProducto!.push(CoRelacionTipoClienteModalidadProducto.fromJS(item));
            }
            if (Array.isArray(_data["coVentaPacksOnline"])) {
                this.coVentaPacksOnline = [] as any;
                for (let item of _data["coVentaPacksOnline"])
                    this.coVentaPacksOnline!.push(CoVentaPacksOnline.fromJS(item));
            }
            if (Array.isArray(_data["coVentas"])) {
                this.coVentas = [] as any;
                for (let item of _data["coVentas"])
                    this.coVentas!.push(CoVentas.fromJS(item));
            }
            if (Array.isArray(_data["prProductoPrecio"])) {
                this.prProductoPrecio = [] as any;
                for (let item of _data["prProductoPrecio"])
                    this.prProductoPrecio!.push(PrProductoPrecio.fromJS(item));
            }
            if (Array.isArray(_data["prRelacionProductoModalidad"])) {
                this.prRelacionProductoModalidad = [] as any;
                for (let item of _data["prRelacionProductoModalidad"])
                    this.prRelacionProductoModalidad!.push(PrRelacionProductoModalidad.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PrModalidadProducto {
        data = typeof data === 'object' ? data : {};
        let result = new PrModalidadProducto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idModalidadProducto"] = this.idModalidadProducto;
        data["codigoModalidad"] = this.codigoModalidad;
        data["descripcionModalidad"] = this.descripcionModalidad;
        data["idTipoUso"] = this.idTipoUso;
        data["idTipoFacturacionProducto"] = this.idTipoFacturacionProducto;
        data["requiereCtaCte"] = this.requiereCtaCte;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idTipoFacturacionProductoNavigation"] = this.idTipoFacturacionProductoNavigation ? this.idTipoFacturacionProductoNavigation.toJSON() : <any>undefined;
        data["idTipoUsoNavigation"] = this.idTipoUsoNavigation ? this.idTipoUsoNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.coRelacionTipoClienteModalidadProducto)) {
            data["coRelacionTipoClienteModalidadProducto"] = [];
            for (let item of this.coRelacionTipoClienteModalidadProducto)
                data["coRelacionTipoClienteModalidadProducto"].push(item.toJSON());
        }
        if (Array.isArray(this.coVentaPacksOnline)) {
            data["coVentaPacksOnline"] = [];
            for (let item of this.coVentaPacksOnline)
                data["coVentaPacksOnline"].push(item.toJSON());
        }
        if (Array.isArray(this.coVentas)) {
            data["coVentas"] = [];
            for (let item of this.coVentas)
                data["coVentas"].push(item.toJSON());
        }
        if (Array.isArray(this.prProductoPrecio)) {
            data["prProductoPrecio"] = [];
            for (let item of this.prProductoPrecio)
                data["prProductoPrecio"].push(item.toJSON());
        }
        if (Array.isArray(this.prRelacionProductoModalidad)) {
            data["prRelacionProductoModalidad"] = [];
            for (let item of this.prRelacionProductoModalidad)
                data["prRelacionProductoModalidad"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPrModalidadProducto {
    idModalidadProducto?: number;
    codigoModalidad?: string | undefined;
    descripcionModalidad?: string | undefined;
    idTipoUso?: number;
    idTipoFacturacionProducto?: number;
    requiereCtaCte?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idTipoFacturacionProductoNavigation?: PrTipoFacturacionProducto | undefined;
    idTipoUsoNavigation?: PrProductoTiposUso | undefined;
    coRelacionTipoClienteModalidadProducto?: CoRelacionTipoClienteModalidadProducto[] | undefined;
    coVentaPacksOnline?: CoVentaPacksOnline[] | undefined;
    coVentas?: CoVentas[] | undefined;
    prProductoPrecio?: PrProductoPrecio[] | undefined;
    prRelacionProductoModalidad?: PrRelacionProductoModalidad[] | undefined;
}

export class PrTipoFacturacionProducto implements IPrTipoFacturacionProducto {
    idTipoFacturacionProducto?: number;
    tipoFacturacion?: string | undefined;
    descripcionTipoFacturacion?: string | undefined;
    requiereNomina?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    prModalidadProducto?: PrModalidadProducto[] | undefined;

    constructor(data?: IPrTipoFacturacionProducto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idTipoFacturacionProducto = _data["idTipoFacturacionProducto"];
            this.tipoFacturacion = _data["tipoFacturacion"];
            this.descripcionTipoFacturacion = _data["descripcionTipoFacturacion"];
            this.requiereNomina = _data["requiereNomina"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            if (Array.isArray(_data["prModalidadProducto"])) {
                this.prModalidadProducto = [] as any;
                for (let item of _data["prModalidadProducto"])
                    this.prModalidadProducto!.push(PrModalidadProducto.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PrTipoFacturacionProducto {
        data = typeof data === 'object' ? data : {};
        let result = new PrTipoFacturacionProducto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idTipoFacturacionProducto"] = this.idTipoFacturacionProducto;
        data["tipoFacturacion"] = this.tipoFacturacion;
        data["descripcionTipoFacturacion"] = this.descripcionTipoFacturacion;
        data["requiereNomina"] = this.requiereNomina;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        if (Array.isArray(this.prModalidadProducto)) {
            data["prModalidadProducto"] = [];
            for (let item of this.prModalidadProducto)
                data["prModalidadProducto"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPrTipoFacturacionProducto {
    idTipoFacturacionProducto?: number;
    tipoFacturacion?: string | undefined;
    descripcionTipoFacturacion?: string | undefined;
    requiereNomina?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    prModalidadProducto?: PrModalidadProducto[] | undefined;
}

export class PrProductoTiposUso implements IPrProductoTiposUso {
    idProductoTipoUso?: number;
    codigoTipoUso?: string | undefined;
    descripcionTipoUso?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    prModalidadProducto?: PrModalidadProducto[] | undefined;

    constructor(data?: IPrProductoTiposUso) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idProductoTipoUso = _data["idProductoTipoUso"];
            this.codigoTipoUso = _data["codigoTipoUso"];
            this.descripcionTipoUso = _data["descripcionTipoUso"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            if (Array.isArray(_data["prModalidadProducto"])) {
                this.prModalidadProducto = [] as any;
                for (let item of _data["prModalidadProducto"])
                    this.prModalidadProducto!.push(PrModalidadProducto.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PrProductoTiposUso {
        data = typeof data === 'object' ? data : {};
        let result = new PrProductoTiposUso();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idProductoTipoUso"] = this.idProductoTipoUso;
        data["codigoTipoUso"] = this.codigoTipoUso;
        data["descripcionTipoUso"] = this.descripcionTipoUso;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        if (Array.isArray(this.prModalidadProducto)) {
            data["prModalidadProducto"] = [];
            for (let item of this.prModalidadProducto)
                data["prModalidadProducto"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPrProductoTiposUso {
    idProductoTipoUso?: number;
    codigoTipoUso?: string | undefined;
    descripcionTipoUso?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    prModalidadProducto?: PrModalidadProducto[] | undefined;
}

export class CoRelacionTipoClienteModalidadProducto implements ICoRelacionTipoClienteModalidadProducto {
    idTipoRelacionClienteProducto?: number;
    idTipoCliente?: number;
    idModalidadProducto?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idModalidadProductoNavigation?: PrModalidadProducto | undefined;
    idTipoClienteNavigation?: CoTiposCliente | undefined;
    coComisionesTipoClienteModalidadProducto?: CoComisionesTipoClienteModalidadProducto[] | undefined;

    constructor(data?: ICoRelacionTipoClienteModalidadProducto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idTipoRelacionClienteProducto = _data["idTipoRelacionClienteProducto"];
            this.idTipoCliente = _data["idTipoCliente"];
            this.idModalidadProducto = _data["idModalidadProducto"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idModalidadProductoNavigation = _data["idModalidadProductoNavigation"] ? PrModalidadProducto.fromJS(_data["idModalidadProductoNavigation"]) : <any>undefined;
            this.idTipoClienteNavigation = _data["idTipoClienteNavigation"] ? CoTiposCliente.fromJS(_data["idTipoClienteNavigation"]) : <any>undefined;
            if (Array.isArray(_data["coComisionesTipoClienteModalidadProducto"])) {
                this.coComisionesTipoClienteModalidadProducto = [] as any;
                for (let item of _data["coComisionesTipoClienteModalidadProducto"])
                    this.coComisionesTipoClienteModalidadProducto!.push(CoComisionesTipoClienteModalidadProducto.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CoRelacionTipoClienteModalidadProducto {
        data = typeof data === 'object' ? data : {};
        let result = new CoRelacionTipoClienteModalidadProducto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idTipoRelacionClienteProducto"] = this.idTipoRelacionClienteProducto;
        data["idTipoCliente"] = this.idTipoCliente;
        data["idModalidadProducto"] = this.idModalidadProducto;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idModalidadProductoNavigation"] = this.idModalidadProductoNavigation ? this.idModalidadProductoNavigation.toJSON() : <any>undefined;
        data["idTipoClienteNavigation"] = this.idTipoClienteNavigation ? this.idTipoClienteNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.coComisionesTipoClienteModalidadProducto)) {
            data["coComisionesTipoClienteModalidadProducto"] = [];
            for (let item of this.coComisionesTipoClienteModalidadProducto)
                data["coComisionesTipoClienteModalidadProducto"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICoRelacionTipoClienteModalidadProducto {
    idTipoRelacionClienteProducto?: number;
    idTipoCliente?: number;
    idModalidadProducto?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idModalidadProductoNavigation?: PrModalidadProducto | undefined;
    idTipoClienteNavigation?: CoTiposCliente | undefined;
    coComisionesTipoClienteModalidadProducto?: CoComisionesTipoClienteModalidadProducto[] | undefined;
}

export class CoTiposCliente implements ICoTiposCliente {
    idTipoCliente?: number;
    tipoCliente?: string | undefined;
    descripcionTipoCliente?: string | undefined;
    idTipoVenta?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idTipoVentaNavigation?: CoTiposdeVenta | undefined;
    coClientes?: CoClientes[] | undefined;
    coRelacionTipoClienteModalidadProducto?: CoRelacionTipoClienteModalidadProducto[] | undefined;
    peFormasPagoTipoCliente?: PeFormasPagoTipoCliente[] | undefined;

    constructor(data?: ICoTiposCliente) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idTipoCliente = _data["idTipoCliente"];
            this.tipoCliente = _data["tipoCliente"];
            this.descripcionTipoCliente = _data["descripcionTipoCliente"];
            this.idTipoVenta = _data["idTipoVenta"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idTipoVentaNavigation = _data["idTipoVentaNavigation"] ? CoTiposdeVenta.fromJS(_data["idTipoVentaNavigation"]) : <any>undefined;
            if (Array.isArray(_data["coClientes"])) {
                this.coClientes = [] as any;
                for (let item of _data["coClientes"])
                    this.coClientes!.push(CoClientes.fromJS(item));
            }
            if (Array.isArray(_data["coRelacionTipoClienteModalidadProducto"])) {
                this.coRelacionTipoClienteModalidadProducto = [] as any;
                for (let item of _data["coRelacionTipoClienteModalidadProducto"])
                    this.coRelacionTipoClienteModalidadProducto!.push(CoRelacionTipoClienteModalidadProducto.fromJS(item));
            }
            if (Array.isArray(_data["peFormasPagoTipoCliente"])) {
                this.peFormasPagoTipoCliente = [] as any;
                for (let item of _data["peFormasPagoTipoCliente"])
                    this.peFormasPagoTipoCliente!.push(PeFormasPagoTipoCliente.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CoTiposCliente {
        data = typeof data === 'object' ? data : {};
        let result = new CoTiposCliente();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idTipoCliente"] = this.idTipoCliente;
        data["tipoCliente"] = this.tipoCliente;
        data["descripcionTipoCliente"] = this.descripcionTipoCliente;
        data["idTipoVenta"] = this.idTipoVenta;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idTipoVentaNavigation"] = this.idTipoVentaNavigation ? this.idTipoVentaNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.coClientes)) {
            data["coClientes"] = [];
            for (let item of this.coClientes)
                data["coClientes"].push(item.toJSON());
        }
        if (Array.isArray(this.coRelacionTipoClienteModalidadProducto)) {
            data["coRelacionTipoClienteModalidadProducto"] = [];
            for (let item of this.coRelacionTipoClienteModalidadProducto)
                data["coRelacionTipoClienteModalidadProducto"].push(item.toJSON());
        }
        if (Array.isArray(this.peFormasPagoTipoCliente)) {
            data["peFormasPagoTipoCliente"] = [];
            for (let item of this.peFormasPagoTipoCliente)
                data["peFormasPagoTipoCliente"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICoTiposCliente {
    idTipoCliente?: number;
    tipoCliente?: string | undefined;
    descripcionTipoCliente?: string | undefined;
    idTipoVenta?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idTipoVentaNavigation?: CoTiposdeVenta | undefined;
    coClientes?: CoClientes[] | undefined;
    coRelacionTipoClienteModalidadProducto?: CoRelacionTipoClienteModalidadProducto[] | undefined;
    peFormasPagoTipoCliente?: PeFormasPagoTipoCliente[] | undefined;
}

export class CoTiposdeVenta implements ICoTiposdeVenta {
    idTipodeVenta?: number;
    tipoVenta?: string | undefined;
    descripcionTipoVenta?: string | undefined;
    creadoPor?: string | undefined;
    fecCreReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    codigoTipoClienteFacturador?: string | undefined;
    coTiposCliente?: CoTiposCliente[] | undefined;

    constructor(data?: ICoTiposdeVenta) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idTipodeVenta = _data["idTipodeVenta"];
            this.tipoVenta = _data["tipoVenta"];
            this.descripcionTipoVenta = _data["descripcionTipoVenta"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreReg = _data["fecCreReg"] ? new Date(_data["fecCreReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.codigoTipoClienteFacturador = _data["codigoTipoClienteFacturador"];
            if (Array.isArray(_data["coTiposCliente"])) {
                this.coTiposCliente = [] as any;
                for (let item of _data["coTiposCliente"])
                    this.coTiposCliente!.push(CoTiposCliente.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CoTiposdeVenta {
        data = typeof data === 'object' ? data : {};
        let result = new CoTiposdeVenta();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idTipodeVenta"] = this.idTipodeVenta;
        data["tipoVenta"] = this.tipoVenta;
        data["descripcionTipoVenta"] = this.descripcionTipoVenta;
        data["creadoPor"] = this.creadoPor;
        data["fecCreReg"] = this.fecCreReg ? this.fecCreReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["codigoTipoClienteFacturador"] = this.codigoTipoClienteFacturador;
        if (Array.isArray(this.coTiposCliente)) {
            data["coTiposCliente"] = [];
            for (let item of this.coTiposCliente)
                data["coTiposCliente"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICoTiposdeVenta {
    idTipodeVenta?: number;
    tipoVenta?: string | undefined;
    descripcionTipoVenta?: string | undefined;
    creadoPor?: string | undefined;
    fecCreReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    codigoTipoClienteFacturador?: string | undefined;
    coTiposCliente?: CoTiposCliente[] | undefined;
}

export class PeFormasPagoTipoCliente implements IPeFormasPagoTipoCliente {
    idFormasPagoTipoPersona?: number;
    idTipoCliente?: number;
    idFormaPagoBs?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idFormaPagoBsNavigation?: PoFormasPago | undefined;
    idTipoClienteNavigation?: CoTiposCliente | undefined;

    constructor(data?: IPeFormasPagoTipoCliente) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idFormasPagoTipoPersona = _data["idFormasPagoTipoPersona"];
            this.idTipoCliente = _data["idTipoCliente"];
            this.idFormaPagoBs = _data["idFormaPagoBs"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idFormaPagoBsNavigation = _data["idFormaPagoBsNavigation"] ? PoFormasPago.fromJS(_data["idFormaPagoBsNavigation"]) : <any>undefined;
            this.idTipoClienteNavigation = _data["idTipoClienteNavigation"] ? CoTiposCliente.fromJS(_data["idTipoClienteNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PeFormasPagoTipoCliente {
        data = typeof data === 'object' ? data : {};
        let result = new PeFormasPagoTipoCliente();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idFormasPagoTipoPersona"] = this.idFormasPagoTipoPersona;
        data["idTipoCliente"] = this.idTipoCliente;
        data["idFormaPagoBs"] = this.idFormaPagoBs;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idFormaPagoBsNavigation"] = this.idFormaPagoBsNavigation ? this.idFormaPagoBsNavigation.toJSON() : <any>undefined;
        data["idTipoClienteNavigation"] = this.idTipoClienteNavigation ? this.idTipoClienteNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPeFormasPagoTipoCliente {
    idFormasPagoTipoPersona?: number;
    idTipoCliente?: number;
    idFormaPagoBs?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idFormaPagoBsNavigation?: PoFormasPago | undefined;
    idTipoClienteNavigation?: CoTiposCliente | undefined;
}

export class CoComisionesTipoClienteModalidadProducto implements ICoComisionesTipoClienteModalidadProducto {
    idComisionModalidadProducto?: number;
    idTipoRelacionClienteProducto?: number;
    fechaVigencia?: Date;
    comision?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idTipoRelacionClienteProductoNavigation?: CoRelacionTipoClienteModalidadProducto | undefined;

    constructor(data?: ICoComisionesTipoClienteModalidadProducto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idComisionModalidadProducto = _data["idComisionModalidadProducto"];
            this.idTipoRelacionClienteProducto = _data["idTipoRelacionClienteProducto"];
            this.fechaVigencia = _data["fechaVigencia"] ? new Date(_data["fechaVigencia"].toString()) : <any>undefined;
            this.comision = _data["comision"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idTipoRelacionClienteProductoNavigation = _data["idTipoRelacionClienteProductoNavigation"] ? CoRelacionTipoClienteModalidadProducto.fromJS(_data["idTipoRelacionClienteProductoNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): CoComisionesTipoClienteModalidadProducto {
        data = typeof data === 'object' ? data : {};
        let result = new CoComisionesTipoClienteModalidadProducto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idComisionModalidadProducto"] = this.idComisionModalidadProducto;
        data["idTipoRelacionClienteProducto"] = this.idTipoRelacionClienteProducto;
        data["fechaVigencia"] = this.fechaVigencia ? this.fechaVigencia.toISOString() : <any>undefined;
        data["comision"] = this.comision;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idTipoRelacionClienteProductoNavigation"] = this.idTipoRelacionClienteProductoNavigation ? this.idTipoRelacionClienteProductoNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface ICoComisionesTipoClienteModalidadProducto {
    idComisionModalidadProducto?: number;
    idTipoRelacionClienteProducto?: number;
    fechaVigencia?: Date;
    comision?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idTipoRelacionClienteProductoNavigation?: CoRelacionTipoClienteModalidadProducto | undefined;
}

export class CoVentaPacksOnline implements ICoVentaPacksOnline {
    idVentaPackOnline?: number;
    idCliente?: number;
    fechaVenta?: Date;
    idModalidadProducto?: number;
    fechaAnulacion?: Date | undefined;
    comision?: number;
    idVendedor?: number | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    idClienteNavigation?: CoClientes | undefined;
    idModalidadProductoNavigation?: PrModalidadProducto | undefined;
    idVendedorNavigation?: CoVendedoresAgencias | undefined;
    coDetallesVentaPacksOnline?: CoDetallesVentaPacksOnline[] | undefined;

    constructor(data?: ICoVentaPacksOnline) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idVentaPackOnline = _data["idVentaPackOnline"];
            this.idCliente = _data["idCliente"];
            this.fechaVenta = _data["fechaVenta"] ? new Date(_data["fechaVenta"].toString()) : <any>undefined;
            this.idModalidadProducto = _data["idModalidadProducto"];
            this.fechaAnulacion = _data["fechaAnulacion"] ? new Date(_data["fechaAnulacion"].toString()) : <any>undefined;
            this.comision = _data["comision"];
            this.idVendedor = _data["idVendedor"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.idClienteNavigation = _data["idClienteNavigation"] ? CoClientes.fromJS(_data["idClienteNavigation"]) : <any>undefined;
            this.idModalidadProductoNavigation = _data["idModalidadProductoNavigation"] ? PrModalidadProducto.fromJS(_data["idModalidadProductoNavigation"]) : <any>undefined;
            this.idVendedorNavigation = _data["idVendedorNavigation"] ? CoVendedoresAgencias.fromJS(_data["idVendedorNavigation"]) : <any>undefined;
            if (Array.isArray(_data["coDetallesVentaPacksOnline"])) {
                this.coDetallesVentaPacksOnline = [] as any;
                for (let item of _data["coDetallesVentaPacksOnline"])
                    this.coDetallesVentaPacksOnline!.push(CoDetallesVentaPacksOnline.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CoVentaPacksOnline {
        data = typeof data === 'object' ? data : {};
        let result = new CoVentaPacksOnline();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idVentaPackOnline"] = this.idVentaPackOnline;
        data["idCliente"] = this.idCliente;
        data["fechaVenta"] = this.fechaVenta ? this.fechaVenta.toISOString() : <any>undefined;
        data["idModalidadProducto"] = this.idModalidadProducto;
        data["fechaAnulacion"] = this.fechaAnulacion ? this.fechaAnulacion.toISOString() : <any>undefined;
        data["comision"] = this.comision;
        data["idVendedor"] = this.idVendedor;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["idClienteNavigation"] = this.idClienteNavigation ? this.idClienteNavigation.toJSON() : <any>undefined;
        data["idModalidadProductoNavigation"] = this.idModalidadProductoNavigation ? this.idModalidadProductoNavigation.toJSON() : <any>undefined;
        data["idVendedorNavigation"] = this.idVendedorNavigation ? this.idVendedorNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.coDetallesVentaPacksOnline)) {
            data["coDetallesVentaPacksOnline"] = [];
            for (let item of this.coDetallesVentaPacksOnline)
                data["coDetallesVentaPacksOnline"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICoVentaPacksOnline {
    idVentaPackOnline?: number;
    idCliente?: number;
    fechaVenta?: Date;
    idModalidadProducto?: number;
    fechaAnulacion?: Date | undefined;
    comision?: number;
    idVendedor?: number | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    idClienteNavigation?: CoClientes | undefined;
    idModalidadProductoNavigation?: PrModalidadProducto | undefined;
    idVendedorNavigation?: CoVendedoresAgencias | undefined;
    coDetallesVentaPacksOnline?: CoDetallesVentaPacksOnline[] | undefined;
}

export class CoVendedoresAgencias implements ICoVendedoresAgencias {
    idVendedor?: number;
    idAgencia?: number;
    idPersonaFisica?: number;
    legajo?: string | undefined;
    fechaBaja?: Date | undefined;
    idUser?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    supervisor?: string | undefined;
    email?: string | undefined;
    nombreFantasia?: string | undefined;
    filial?: string | undefined;
    hashVendedor?: string | undefined;
    idAgenciaNavigation?: CoAgencias | undefined;
    idPersonaFisicaNavigation?: PePersonaFisica | undefined;
    coVentaPacksOnline?: CoVentaPacksOnline[] | undefined;
    coVentas?: CoVentas[] | undefined;
    poPolizas?: PoPolizas[] | undefined;

    constructor(data?: ICoVendedoresAgencias) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idVendedor = _data["idVendedor"];
            this.idAgencia = _data["idAgencia"];
            this.idPersonaFisica = _data["idPersonaFisica"];
            this.legajo = _data["legajo"];
            this.fechaBaja = _data["fechaBaja"] ? new Date(_data["fechaBaja"].toString()) : <any>undefined;
            this.idUser = _data["idUser"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.supervisor = _data["supervisor"];
            this.email = _data["email"];
            this.nombreFantasia = _data["nombreFantasia"];
            this.filial = _data["filial"];
            this.hashVendedor = _data["hashVendedor"];
            this.idAgenciaNavigation = _data["idAgenciaNavigation"] ? CoAgencias.fromJS(_data["idAgenciaNavigation"]) : <any>undefined;
            this.idPersonaFisicaNavigation = _data["idPersonaFisicaNavigation"] ? PePersonaFisica.fromJS(_data["idPersonaFisicaNavigation"]) : <any>undefined;
            if (Array.isArray(_data["coVentaPacksOnline"])) {
                this.coVentaPacksOnline = [] as any;
                for (let item of _data["coVentaPacksOnline"])
                    this.coVentaPacksOnline!.push(CoVentaPacksOnline.fromJS(item));
            }
            if (Array.isArray(_data["coVentas"])) {
                this.coVentas = [] as any;
                for (let item of _data["coVentas"])
                    this.coVentas!.push(CoVentas.fromJS(item));
            }
            if (Array.isArray(_data["poPolizas"])) {
                this.poPolizas = [] as any;
                for (let item of _data["poPolizas"])
                    this.poPolizas!.push(PoPolizas.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CoVendedoresAgencias {
        data = typeof data === 'object' ? data : {};
        let result = new CoVendedoresAgencias();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idVendedor"] = this.idVendedor;
        data["idAgencia"] = this.idAgencia;
        data["idPersonaFisica"] = this.idPersonaFisica;
        data["legajo"] = this.legajo;
        data["fechaBaja"] = this.fechaBaja ? this.fechaBaja.toISOString() : <any>undefined;
        data["idUser"] = this.idUser;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["supervisor"] = this.supervisor;
        data["email"] = this.email;
        data["nombreFantasia"] = this.nombreFantasia;
        data["filial"] = this.filial;
        data["hashVendedor"] = this.hashVendedor;
        data["idAgenciaNavigation"] = this.idAgenciaNavigation ? this.idAgenciaNavigation.toJSON() : <any>undefined;
        data["idPersonaFisicaNavigation"] = this.idPersonaFisicaNavigation ? this.idPersonaFisicaNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.coVentaPacksOnline)) {
            data["coVentaPacksOnline"] = [];
            for (let item of this.coVentaPacksOnline)
                data["coVentaPacksOnline"].push(item.toJSON());
        }
        if (Array.isArray(this.coVentas)) {
            data["coVentas"] = [];
            for (let item of this.coVentas)
                data["coVentas"].push(item.toJSON());
        }
        if (Array.isArray(this.poPolizas)) {
            data["poPolizas"] = [];
            for (let item of this.poPolizas)
                data["poPolizas"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICoVendedoresAgencias {
    idVendedor?: number;
    idAgencia?: number;
    idPersonaFisica?: number;
    legajo?: string | undefined;
    fechaBaja?: Date | undefined;
    idUser?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    supervisor?: string | undefined;
    email?: string | undefined;
    nombreFantasia?: string | undefined;
    filial?: string | undefined;
    hashVendedor?: string | undefined;
    idAgenciaNavigation?: CoAgencias | undefined;
    idPersonaFisicaNavigation?: PePersonaFisica | undefined;
    coVentaPacksOnline?: CoVentaPacksOnline[] | undefined;
    coVentas?: CoVentas[] | undefined;
    poPolizas?: PoPolizas[] | undefined;
}

export class CoDetallesVentaPacksOnline implements ICoDetallesVentaPacksOnline {
    idDetallesVentaPackOnline?: number;
    idVentaPackOnline?: number;
    idProducto?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    cantidadDias?: number;
    idMoneda?: number;
    precioVenta?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    idPaisDestino?: number;
    idMonedaNavigation?: BsMonedas | undefined;
    idPaisDestinoNavigation?: BsPaises | undefined;
    idProductoNavigation?: PrProducto | undefined;
    idVentaPackOnlineNavigation?: CoVentaPacksOnline | undefined;

    constructor(data?: ICoDetallesVentaPacksOnline) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idDetallesVentaPackOnline = _data["idDetallesVentaPackOnline"];
            this.idVentaPackOnline = _data["idVentaPackOnline"];
            this.idProducto = _data["idProducto"];
            this.fechaInicioVigencia = _data["fechaInicioVigencia"] ? new Date(_data["fechaInicioVigencia"].toString()) : <any>undefined;
            this.fechaFinVigencia = _data["fechaFinVigencia"] ? new Date(_data["fechaFinVigencia"].toString()) : <any>undefined;
            this.cantidadDias = _data["cantidadDias"];
            this.idMoneda = _data["idMoneda"];
            this.precioVenta = _data["precioVenta"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.idPaisDestino = _data["idPaisDestino"];
            this.idMonedaNavigation = _data["idMonedaNavigation"] ? BsMonedas.fromJS(_data["idMonedaNavigation"]) : <any>undefined;
            this.idPaisDestinoNavigation = _data["idPaisDestinoNavigation"] ? BsPaises.fromJS(_data["idPaisDestinoNavigation"]) : <any>undefined;
            this.idProductoNavigation = _data["idProductoNavigation"] ? PrProducto.fromJS(_data["idProductoNavigation"]) : <any>undefined;
            this.idVentaPackOnlineNavigation = _data["idVentaPackOnlineNavigation"] ? CoVentaPacksOnline.fromJS(_data["idVentaPackOnlineNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): CoDetallesVentaPacksOnline {
        data = typeof data === 'object' ? data : {};
        let result = new CoDetallesVentaPacksOnline();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idDetallesVentaPackOnline"] = this.idDetallesVentaPackOnline;
        data["idVentaPackOnline"] = this.idVentaPackOnline;
        data["idProducto"] = this.idProducto;
        data["fechaInicioVigencia"] = this.fechaInicioVigencia ? this.fechaInicioVigencia.toISOString() : <any>undefined;
        data["fechaFinVigencia"] = this.fechaFinVigencia ? this.fechaFinVigencia.toISOString() : <any>undefined;
        data["cantidadDias"] = this.cantidadDias;
        data["idMoneda"] = this.idMoneda;
        data["precioVenta"] = this.precioVenta;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["idPaisDestino"] = this.idPaisDestino;
        data["idMonedaNavigation"] = this.idMonedaNavigation ? this.idMonedaNavigation.toJSON() : <any>undefined;
        data["idPaisDestinoNavigation"] = this.idPaisDestinoNavigation ? this.idPaisDestinoNavigation.toJSON() : <any>undefined;
        data["idProductoNavigation"] = this.idProductoNavigation ? this.idProductoNavigation.toJSON() : <any>undefined;
        data["idVentaPackOnlineNavigation"] = this.idVentaPackOnlineNavigation ? this.idVentaPackOnlineNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface ICoDetallesVentaPacksOnline {
    idDetallesVentaPackOnline?: number;
    idVentaPackOnline?: number;
    idProducto?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    cantidadDias?: number;
    idMoneda?: number;
    precioVenta?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    idPaisDestino?: number;
    idMonedaNavigation?: BsMonedas | undefined;
    idPaisDestinoNavigation?: BsPaises | undefined;
    idProductoNavigation?: PrProducto | undefined;
    idVentaPackOnlineNavigation?: CoVentaPacksOnline | undefined;
}

export class PrProductoPrecio implements IPrProductoPrecio {
    idProductoPrecio?: number;
    idProducto?: number;
    fechaDesde?: Date;
    fechaHasta?: Date | undefined;
    dias?: number | undefined;
    edadDesde?: number | undefined;
    edadHasta?: number | undefined;
    idMoneda?: number;
    importe?: number;
    porcentajeAdicional?: number | undefined;
    idProductoAdicional?: number | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date | undefined;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idGrupoAfinidad?: number | undefined;
    idAgencia?: number | undefined;
    idModalidadProducto?: number | undefined;
    capitasDesde?: number | undefined;
    capitasHasta?: number | undefined;
    productTypeId?: number | undefined;
    idAgenciaNavigation?: CoAgencias | undefined;
    idGrupoAfinidadNavigation?: PrGruposAfinidad | undefined;
    idModalidadProductoNavigation?: PrModalidadProducto | undefined;
    idMonedaNavigation?: BsMonedas | undefined;
    idProductoNavigation?: PrProducto | undefined;

    constructor(data?: IPrProductoPrecio) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idProductoPrecio = _data["idProductoPrecio"];
            this.idProducto = _data["idProducto"];
            this.fechaDesde = _data["fechaDesde"] ? new Date(_data["fechaDesde"].toString()) : <any>undefined;
            this.fechaHasta = _data["fechaHasta"] ? new Date(_data["fechaHasta"].toString()) : <any>undefined;
            this.dias = _data["dias"];
            this.edadDesde = _data["edadDesde"];
            this.edadHasta = _data["edadHasta"];
            this.idMoneda = _data["idMoneda"];
            this.importe = _data["importe"];
            this.porcentajeAdicional = _data["porcentajeAdicional"];
            this.idProductoAdicional = _data["idProductoAdicional"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idGrupoAfinidad = _data["idGrupoAfinidad"];
            this.idAgencia = _data["idAgencia"];
            this.idModalidadProducto = _data["idModalidadProducto"];
            this.capitasDesde = _data["capitasDesde"];
            this.capitasHasta = _data["capitasHasta"];
            this.productTypeId = _data["productTypeId"];
            this.idAgenciaNavigation = _data["idAgenciaNavigation"] ? CoAgencias.fromJS(_data["idAgenciaNavigation"]) : <any>undefined;
            this.idGrupoAfinidadNavigation = _data["idGrupoAfinidadNavigation"] ? PrGruposAfinidad.fromJS(_data["idGrupoAfinidadNavigation"]) : <any>undefined;
            this.idModalidadProductoNavigation = _data["idModalidadProductoNavigation"] ? PrModalidadProducto.fromJS(_data["idModalidadProductoNavigation"]) : <any>undefined;
            this.idMonedaNavigation = _data["idMonedaNavigation"] ? BsMonedas.fromJS(_data["idMonedaNavigation"]) : <any>undefined;
            this.idProductoNavigation = _data["idProductoNavigation"] ? PrProducto.fromJS(_data["idProductoNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PrProductoPrecio {
        data = typeof data === 'object' ? data : {};
        let result = new PrProductoPrecio();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idProductoPrecio"] = this.idProductoPrecio;
        data["idProducto"] = this.idProducto;
        data["fechaDesde"] = this.fechaDesde ? this.fechaDesde.toISOString() : <any>undefined;
        data["fechaHasta"] = this.fechaHasta ? this.fechaHasta.toISOString() : <any>undefined;
        data["dias"] = this.dias;
        data["edadDesde"] = this.edadDesde;
        data["edadHasta"] = this.edadHasta;
        data["idMoneda"] = this.idMoneda;
        data["importe"] = this.importe;
        data["porcentajeAdicional"] = this.porcentajeAdicional;
        data["idProductoAdicional"] = this.idProductoAdicional;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idGrupoAfinidad"] = this.idGrupoAfinidad;
        data["idAgencia"] = this.idAgencia;
        data["idModalidadProducto"] = this.idModalidadProducto;
        data["capitasDesde"] = this.capitasDesde;
        data["capitasHasta"] = this.capitasHasta;
        data["productTypeId"] = this.productTypeId;
        data["idAgenciaNavigation"] = this.idAgenciaNavigation ? this.idAgenciaNavigation.toJSON() : <any>undefined;
        data["idGrupoAfinidadNavigation"] = this.idGrupoAfinidadNavigation ? this.idGrupoAfinidadNavigation.toJSON() : <any>undefined;
        data["idModalidadProductoNavigation"] = this.idModalidadProductoNavigation ? this.idModalidadProductoNavigation.toJSON() : <any>undefined;
        data["idMonedaNavigation"] = this.idMonedaNavigation ? this.idMonedaNavigation.toJSON() : <any>undefined;
        data["idProductoNavigation"] = this.idProductoNavigation ? this.idProductoNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPrProductoPrecio {
    idProductoPrecio?: number;
    idProducto?: number;
    fechaDesde?: Date;
    fechaHasta?: Date | undefined;
    dias?: number | undefined;
    edadDesde?: number | undefined;
    edadHasta?: number | undefined;
    idMoneda?: number;
    importe?: number;
    porcentajeAdicional?: number | undefined;
    idProductoAdicional?: number | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date | undefined;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idGrupoAfinidad?: number | undefined;
    idAgencia?: number | undefined;
    idModalidadProducto?: number | undefined;
    capitasDesde?: number | undefined;
    capitasHasta?: number | undefined;
    productTypeId?: number | undefined;
    idAgenciaNavigation?: CoAgencias | undefined;
    idGrupoAfinidadNavigation?: PrGruposAfinidad | undefined;
    idModalidadProductoNavigation?: PrModalidadProducto | undefined;
    idMonedaNavigation?: BsMonedas | undefined;
    idProductoNavigation?: PrProducto | undefined;
}

export class PrRelacionProductoModalidad implements IPrRelacionProductoModalidad {
    idRelacionProductoModalidad?: number;
    idProducto?: number;
    idModalidadProducto?: number;
    cantidadDiasReferencia?: number;
    idMoneda?: number;
    precioReferencial?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModPor?: Date | undefined;
    idModalidadProductoNavigation?: PrModalidadProducto | undefined;
    idMonedaNavigation?: BsMonedas | undefined;
    idProductoNavigation?: PrProducto | undefined;

    constructor(data?: IPrRelacionProductoModalidad) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idRelacionProductoModalidad = _data["idRelacionProductoModalidad"];
            this.idProducto = _data["idProducto"];
            this.idModalidadProducto = _data["idModalidadProducto"];
            this.cantidadDiasReferencia = _data["cantidadDiasReferencia"];
            this.idMoneda = _data["idMoneda"];
            this.precioReferencial = _data["precioReferencial"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModPor = _data["fecModPor"] ? new Date(_data["fecModPor"].toString()) : <any>undefined;
            this.idModalidadProductoNavigation = _data["idModalidadProductoNavigation"] ? PrModalidadProducto.fromJS(_data["idModalidadProductoNavigation"]) : <any>undefined;
            this.idMonedaNavigation = _data["idMonedaNavigation"] ? BsMonedas.fromJS(_data["idMonedaNavigation"]) : <any>undefined;
            this.idProductoNavigation = _data["idProductoNavigation"] ? PrProducto.fromJS(_data["idProductoNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PrRelacionProductoModalidad {
        data = typeof data === 'object' ? data : {};
        let result = new PrRelacionProductoModalidad();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idRelacionProductoModalidad"] = this.idRelacionProductoModalidad;
        data["idProducto"] = this.idProducto;
        data["idModalidadProducto"] = this.idModalidadProducto;
        data["cantidadDiasReferencia"] = this.cantidadDiasReferencia;
        data["idMoneda"] = this.idMoneda;
        data["precioReferencial"] = this.precioReferencial;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModPor"] = this.fecModPor ? this.fecModPor.toISOString() : <any>undefined;
        data["idModalidadProductoNavigation"] = this.idModalidadProductoNavigation ? this.idModalidadProductoNavigation.toJSON() : <any>undefined;
        data["idMonedaNavigation"] = this.idMonedaNavigation ? this.idMonedaNavigation.toJSON() : <any>undefined;
        data["idProductoNavigation"] = this.idProductoNavigation ? this.idProductoNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPrRelacionProductoModalidad {
    idRelacionProductoModalidad?: number;
    idProducto?: number;
    idModalidadProducto?: number;
    cantidadDiasReferencia?: number;
    idMoneda?: number;
    precioReferencial?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModPor?: Date | undefined;
    idModalidadProductoNavigation?: PrModalidadProducto | undefined;
    idMonedaNavigation?: BsMonedas | undefined;
    idProductoNavigation?: PrProducto | undefined;
}

export class CoDetallesVenta implements ICoDetallesVenta {
    idDetallesVenta?: number;
    idVenta?: number;
    idProducto?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    cantidadDias?: number;
    idMoneda?: number;
    precioVenta?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idgrupoFamiliarIndividuo?: number | undefined;
    idMonedaNavigation?: BsMonedas | undefined;
    idProductoNavigation?: PrProducto | undefined;
    idVentaNavigation?: CoVentas | undefined;
    coConsumosVentas?: CoConsumosVentas[] | undefined;

    constructor(data?: ICoDetallesVenta) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idDetallesVenta = _data["idDetallesVenta"];
            this.idVenta = _data["idVenta"];
            this.idProducto = _data["idProducto"];
            this.fechaInicioVigencia = _data["fechaInicioVigencia"] ? new Date(_data["fechaInicioVigencia"].toString()) : <any>undefined;
            this.fechaFinVigencia = _data["fechaFinVigencia"] ? new Date(_data["fechaFinVigencia"].toString()) : <any>undefined;
            this.cantidadDias = _data["cantidadDias"];
            this.idMoneda = _data["idMoneda"];
            this.precioVenta = _data["precioVenta"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idgrupoFamiliarIndividuo = _data["idgrupoFamiliarIndividuo"];
            this.idMonedaNavigation = _data["idMonedaNavigation"] ? BsMonedas.fromJS(_data["idMonedaNavigation"]) : <any>undefined;
            this.idProductoNavigation = _data["idProductoNavigation"] ? PrProducto.fromJS(_data["idProductoNavigation"]) : <any>undefined;
            this.idVentaNavigation = _data["idVentaNavigation"] ? CoVentas.fromJS(_data["idVentaNavigation"]) : <any>undefined;
            if (Array.isArray(_data["coConsumosVentas"])) {
                this.coConsumosVentas = [] as any;
                for (let item of _data["coConsumosVentas"])
                    this.coConsumosVentas!.push(CoConsumosVentas.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CoDetallesVenta {
        data = typeof data === 'object' ? data : {};
        let result = new CoDetallesVenta();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idDetallesVenta"] = this.idDetallesVenta;
        data["idVenta"] = this.idVenta;
        data["idProducto"] = this.idProducto;
        data["fechaInicioVigencia"] = this.fechaInicioVigencia ? this.fechaInicioVigencia.toISOString() : <any>undefined;
        data["fechaFinVigencia"] = this.fechaFinVigencia ? this.fechaFinVigencia.toISOString() : <any>undefined;
        data["cantidadDias"] = this.cantidadDias;
        data["idMoneda"] = this.idMoneda;
        data["precioVenta"] = this.precioVenta;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idgrupoFamiliarIndividuo"] = this.idgrupoFamiliarIndividuo;
        data["idMonedaNavigation"] = this.idMonedaNavigation ? this.idMonedaNavigation.toJSON() : <any>undefined;
        data["idProductoNavigation"] = this.idProductoNavigation ? this.idProductoNavigation.toJSON() : <any>undefined;
        data["idVentaNavigation"] = this.idVentaNavigation ? this.idVentaNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.coConsumosVentas)) {
            data["coConsumosVentas"] = [];
            for (let item of this.coConsumosVentas)
                data["coConsumosVentas"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICoDetallesVenta {
    idDetallesVenta?: number;
    idVenta?: number;
    idProducto?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    cantidadDias?: number;
    idMoneda?: number;
    precioVenta?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idgrupoFamiliarIndividuo?: number | undefined;
    idMonedaNavigation?: BsMonedas | undefined;
    idProductoNavigation?: PrProducto | undefined;
    idVentaNavigation?: CoVentas | undefined;
    coConsumosVentas?: CoConsumosVentas[] | undefined;
}

export class CoConsumosVentas implements ICoConsumosVentas {
    idConsumosVenta?: number;
    idDetallesVenta?: number;
    idPersona?: number | undefined;
    fechaConsumo?: Date | undefined;
    totalDias?: number;
    consumoDias?: number;
    diasDisponibles?: number;
    idPoliza?: number | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idDetallesVentaNavigation?: CoDetallesVenta | undefined;
    idPersonaNavigation?: PePersonaFisica | undefined;
    idPolizaNavigation?: PoPolizas | undefined;

    constructor(data?: ICoConsumosVentas) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idConsumosVenta = _data["idConsumosVenta"];
            this.idDetallesVenta = _data["idDetallesVenta"];
            this.idPersona = _data["idPersona"];
            this.fechaConsumo = _data["fechaConsumo"] ? new Date(_data["fechaConsumo"].toString()) : <any>undefined;
            this.totalDias = _data["totalDias"];
            this.consumoDias = _data["consumoDias"];
            this.diasDisponibles = _data["diasDisponibles"];
            this.idPoliza = _data["idPoliza"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idDetallesVentaNavigation = _data["idDetallesVentaNavigation"] ? CoDetallesVenta.fromJS(_data["idDetallesVentaNavigation"]) : <any>undefined;
            this.idPersonaNavigation = _data["idPersonaNavigation"] ? PePersonaFisica.fromJS(_data["idPersonaNavigation"]) : <any>undefined;
            this.idPolizaNavigation = _data["idPolizaNavigation"] ? PoPolizas.fromJS(_data["idPolizaNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): CoConsumosVentas {
        data = typeof data === 'object' ? data : {};
        let result = new CoConsumosVentas();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idConsumosVenta"] = this.idConsumosVenta;
        data["idDetallesVenta"] = this.idDetallesVenta;
        data["idPersona"] = this.idPersona;
        data["fechaConsumo"] = this.fechaConsumo ? this.fechaConsumo.toISOString() : <any>undefined;
        data["totalDias"] = this.totalDias;
        data["consumoDias"] = this.consumoDias;
        data["diasDisponibles"] = this.diasDisponibles;
        data["idPoliza"] = this.idPoliza;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idDetallesVentaNavigation"] = this.idDetallesVentaNavigation ? this.idDetallesVentaNavigation.toJSON() : <any>undefined;
        data["idPersonaNavigation"] = this.idPersonaNavigation ? this.idPersonaNavigation.toJSON() : <any>undefined;
        data["idPolizaNavigation"] = this.idPolizaNavigation ? this.idPolizaNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface ICoConsumosVentas {
    idConsumosVenta?: number;
    idDetallesVenta?: number;
    idPersona?: number | undefined;
    fechaConsumo?: Date | undefined;
    totalDias?: number;
    consumoDias?: number;
    diasDisponibles?: number;
    idPoliza?: number | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idDetallesVentaNavigation?: CoDetallesVenta | undefined;
    idPersonaNavigation?: PePersonaFisica | undefined;
    idPolizaNavigation?: PoPolizas | undefined;
}

export class PoDetalleFormasPago implements IPoDetalleFormasPago {
    idDetalleFormasPago?: number;
    idPoliza?: number;
    idFormaPago?: number | undefined;
    importe?: number | undefined;
    nroCargo?: string | undefined;
    nroLote?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    fecElimReg?: Date | undefined;
    eliminadoPor?: string | undefined;
    pagoOnlineErrorId?: number | undefined;
    pagoOnlineErrorDescrip?: string | undefined;
    numeroReciboCobranza?: number | undefined;
    fechaCobro?: Date | undefined;
    cuotas?: number | undefined;
    importeGrilla?: number | undefined;
    importeConPromocion?: number | undefined;
    markUp?: number | undefined;
    importeConMarkUp?: number | undefined;
    interes?: number | undefined;
    importeConInteres?: number | undefined;
    numeroTarjeta?: string | undefined;
    vencimientoTarjeta?: string | undefined;
    titularTarjeta?: string | undefined;
    braspagTransactionId?: string | undefined;
    requestId?: string | undefined;
    codigoVersion?: string | undefined;
    idFormaPagoNavigation?: PoFormasPago | undefined;
    idPolizaNavigation?: PoPolizas | undefined;

    constructor(data?: IPoDetalleFormasPago) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idDetalleFormasPago = _data["idDetalleFormasPago"];
            this.idPoliza = _data["idPoliza"];
            this.idFormaPago = _data["idFormaPago"];
            this.importe = _data["importe"];
            this.nroCargo = _data["nroCargo"];
            this.nroLote = _data["nroLote"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.fecElimReg = _data["fecElimReg"] ? new Date(_data["fecElimReg"].toString()) : <any>undefined;
            this.eliminadoPor = _data["eliminadoPor"];
            this.pagoOnlineErrorId = _data["pagoOnlineErrorId"];
            this.pagoOnlineErrorDescrip = _data["pagoOnlineErrorDescrip"];
            this.numeroReciboCobranza = _data["numeroReciboCobranza"];
            this.fechaCobro = _data["fechaCobro"] ? new Date(_data["fechaCobro"].toString()) : <any>undefined;
            this.cuotas = _data["cuotas"];
            this.importeGrilla = _data["importeGrilla"];
            this.importeConPromocion = _data["importeConPromocion"];
            this.markUp = _data["markUp"];
            this.importeConMarkUp = _data["importeConMarkUp"];
            this.interes = _data["interes"];
            this.importeConInteres = _data["importeConInteres"];
            this.numeroTarjeta = _data["numeroTarjeta"];
            this.vencimientoTarjeta = _data["vencimientoTarjeta"];
            this.titularTarjeta = _data["titularTarjeta"];
            this.braspagTransactionId = _data["braspagTransactionId"];
            this.requestId = _data["requestId"];
            this.codigoVersion = _data["codigoVersion"];
            this.idFormaPagoNavigation = _data["idFormaPagoNavigation"] ? PoFormasPago.fromJS(_data["idFormaPagoNavigation"]) : <any>undefined;
            this.idPolizaNavigation = _data["idPolizaNavigation"] ? PoPolizas.fromJS(_data["idPolizaNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PoDetalleFormasPago {
        data = typeof data === 'object' ? data : {};
        let result = new PoDetalleFormasPago();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idDetalleFormasPago"] = this.idDetalleFormasPago;
        data["idPoliza"] = this.idPoliza;
        data["idFormaPago"] = this.idFormaPago;
        data["importe"] = this.importe;
        data["nroCargo"] = this.nroCargo;
        data["nroLote"] = this.nroLote;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["fecElimReg"] = this.fecElimReg ? this.fecElimReg.toISOString() : <any>undefined;
        data["eliminadoPor"] = this.eliminadoPor;
        data["pagoOnlineErrorId"] = this.pagoOnlineErrorId;
        data["pagoOnlineErrorDescrip"] = this.pagoOnlineErrorDescrip;
        data["numeroReciboCobranza"] = this.numeroReciboCobranza;
        data["fechaCobro"] = this.fechaCobro ? this.fechaCobro.toISOString() : <any>undefined;
        data["cuotas"] = this.cuotas;
        data["importeGrilla"] = this.importeGrilla;
        data["importeConPromocion"] = this.importeConPromocion;
        data["markUp"] = this.markUp;
        data["importeConMarkUp"] = this.importeConMarkUp;
        data["interes"] = this.interes;
        data["importeConInteres"] = this.importeConInteres;
        data["numeroTarjeta"] = this.numeroTarjeta;
        data["vencimientoTarjeta"] = this.vencimientoTarjeta;
        data["titularTarjeta"] = this.titularTarjeta;
        data["braspagTransactionId"] = this.braspagTransactionId;
        data["requestId"] = this.requestId;
        data["codigoVersion"] = this.codigoVersion;
        data["idFormaPagoNavigation"] = this.idFormaPagoNavigation ? this.idFormaPagoNavigation.toJSON() : <any>undefined;
        data["idPolizaNavigation"] = this.idPolizaNavigation ? this.idPolizaNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPoDetalleFormasPago {
    idDetalleFormasPago?: number;
    idPoliza?: number;
    idFormaPago?: number | undefined;
    importe?: number | undefined;
    nroCargo?: string | undefined;
    nroLote?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    fecElimReg?: Date | undefined;
    eliminadoPor?: string | undefined;
    pagoOnlineErrorId?: number | undefined;
    pagoOnlineErrorDescrip?: string | undefined;
    numeroReciboCobranza?: number | undefined;
    fechaCobro?: Date | undefined;
    cuotas?: number | undefined;
    importeGrilla?: number | undefined;
    importeConPromocion?: number | undefined;
    markUp?: number | undefined;
    importeConMarkUp?: number | undefined;
    interes?: number | undefined;
    importeConInteres?: number | undefined;
    numeroTarjeta?: string | undefined;
    vencimientoTarjeta?: string | undefined;
    titularTarjeta?: string | undefined;
    braspagTransactionId?: string | undefined;
    requestId?: string | undefined;
    codigoVersion?: string | undefined;
    idFormaPagoNavigation?: PoFormasPago | undefined;
    idPolizaNavigation?: PoPolizas | undefined;
}

export class PrFormaPagoCuotaInteres implements IPrFormaPagoCuotaInteres {
    idFormaPagoCuotaInteres?: number;
    idFormaPago?: number;
    idTipoInteres?: number;
    planCuotas?: number;
    tna?: number | undefined;
    tem?: number | undefined;
    coeficiente?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idFormaPagoNavigation?: PoFormasPago | undefined;

    constructor(data?: IPrFormaPagoCuotaInteres) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idFormaPagoCuotaInteres = _data["idFormaPagoCuotaInteres"];
            this.idFormaPago = _data["idFormaPago"];
            this.idTipoInteres = _data["idTipoInteres"];
            this.planCuotas = _data["planCuotas"];
            this.tna = _data["tna"];
            this.tem = _data["tem"];
            this.coeficiente = _data["coeficiente"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idFormaPagoNavigation = _data["idFormaPagoNavigation"] ? PoFormasPago.fromJS(_data["idFormaPagoNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PrFormaPagoCuotaInteres {
        data = typeof data === 'object' ? data : {};
        let result = new PrFormaPagoCuotaInteres();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idFormaPagoCuotaInteres"] = this.idFormaPagoCuotaInteres;
        data["idFormaPago"] = this.idFormaPago;
        data["idTipoInteres"] = this.idTipoInteres;
        data["planCuotas"] = this.planCuotas;
        data["tna"] = this.tna;
        data["tem"] = this.tem;
        data["coeficiente"] = this.coeficiente;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idFormaPagoNavigation"] = this.idFormaPagoNavigation ? this.idFormaPagoNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPrFormaPagoCuotaInteres {
    idFormaPagoCuotaInteres?: number;
    idFormaPago?: number;
    idTipoInteres?: number;
    planCuotas?: number;
    tna?: number | undefined;
    tem?: number | undefined;
    coeficiente?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idFormaPagoNavigation?: PoFormasPago | undefined;
}

export class PrFormasPagoProducto implements IPrFormasPagoProducto {
    idFormasPagoProducto?: number;
    idProducto?: number;
    idFormaPago?: number;
    cantidadCuotas?: number;
    idTipoInteres?: number | undefined;
    interes?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idFormaPagoNavigation?: PoFormasPago | undefined;
    idProductoNavigation?: PrProducto | undefined;

    constructor(data?: IPrFormasPagoProducto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idFormasPagoProducto = _data["idFormasPagoProducto"];
            this.idProducto = _data["idProducto"];
            this.idFormaPago = _data["idFormaPago"];
            this.cantidadCuotas = _data["cantidadCuotas"];
            this.idTipoInteres = _data["idTipoInteres"];
            this.interes = _data["interes"];
            this.fechaInicioVigencia = _data["fechaInicioVigencia"] ? new Date(_data["fechaInicioVigencia"].toString()) : <any>undefined;
            this.fechaFinVigencia = _data["fechaFinVigencia"] ? new Date(_data["fechaFinVigencia"].toString()) : <any>undefined;
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idFormaPagoNavigation = _data["idFormaPagoNavigation"] ? PoFormasPago.fromJS(_data["idFormaPagoNavigation"]) : <any>undefined;
            this.idProductoNavigation = _data["idProductoNavigation"] ? PrProducto.fromJS(_data["idProductoNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PrFormasPagoProducto {
        data = typeof data === 'object' ? data : {};
        let result = new PrFormasPagoProducto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idFormasPagoProducto"] = this.idFormasPagoProducto;
        data["idProducto"] = this.idProducto;
        data["idFormaPago"] = this.idFormaPago;
        data["cantidadCuotas"] = this.cantidadCuotas;
        data["idTipoInteres"] = this.idTipoInteres;
        data["interes"] = this.interes;
        data["fechaInicioVigencia"] = this.fechaInicioVigencia ? this.fechaInicioVigencia.toISOString() : <any>undefined;
        data["fechaFinVigencia"] = this.fechaFinVigencia ? this.fechaFinVigencia.toISOString() : <any>undefined;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idFormaPagoNavigation"] = this.idFormaPagoNavigation ? this.idFormaPagoNavigation.toJSON() : <any>undefined;
        data["idProductoNavigation"] = this.idProductoNavigation ? this.idProductoNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPrFormasPagoProducto {
    idFormasPagoProducto?: number;
    idProducto?: number;
    idFormaPago?: number;
    cantidadCuotas?: number;
    idTipoInteres?: number | undefined;
    interes?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idFormaPagoNavigation?: PoFormasPago | undefined;
    idProductoNavigation?: PrProducto | undefined;
}

export class CoComposicionGrupoClienteIndividual implements ICoComposicionGrupoClienteIndividual {
    idGrupoFamiliarIndividuo?: number;
    idClienteIndividual?: number;
    idPersona?: number;
    idParentesco?: number | undefined;
    marcaTitular?: boolean;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idClienteIndividualNavigation?: CoClientesIndividuales | undefined;
    idParentescoNavigation?: PoParentesco | undefined;
    idPersonaNavigation?: PePersonaFisica | undefined;

    constructor(data?: ICoComposicionGrupoClienteIndividual) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idGrupoFamiliarIndividuo = _data["idGrupoFamiliarIndividuo"];
            this.idClienteIndividual = _data["idClienteIndividual"];
            this.idPersona = _data["idPersona"];
            this.idParentesco = _data["idParentesco"];
            this.marcaTitular = _data["marcaTitular"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idClienteIndividualNavigation = _data["idClienteIndividualNavigation"] ? CoClientesIndividuales.fromJS(_data["idClienteIndividualNavigation"]) : <any>undefined;
            this.idParentescoNavigation = _data["idParentescoNavigation"] ? PoParentesco.fromJS(_data["idParentescoNavigation"]) : <any>undefined;
            this.idPersonaNavigation = _data["idPersonaNavigation"] ? PePersonaFisica.fromJS(_data["idPersonaNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): CoComposicionGrupoClienteIndividual {
        data = typeof data === 'object' ? data : {};
        let result = new CoComposicionGrupoClienteIndividual();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idGrupoFamiliarIndividuo"] = this.idGrupoFamiliarIndividuo;
        data["idClienteIndividual"] = this.idClienteIndividual;
        data["idPersona"] = this.idPersona;
        data["idParentesco"] = this.idParentesco;
        data["marcaTitular"] = this.marcaTitular;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idClienteIndividualNavigation"] = this.idClienteIndividualNavigation ? this.idClienteIndividualNavigation.toJSON() : <any>undefined;
        data["idParentescoNavigation"] = this.idParentescoNavigation ? this.idParentescoNavigation.toJSON() : <any>undefined;
        data["idPersonaNavigation"] = this.idPersonaNavigation ? this.idPersonaNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface ICoComposicionGrupoClienteIndividual {
    idGrupoFamiliarIndividuo?: number;
    idClienteIndividual?: number;
    idPersona?: number;
    idParentesco?: number | undefined;
    marcaTitular?: boolean;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idClienteIndividualNavigation?: CoClientesIndividuales | undefined;
    idParentescoNavigation?: PoParentesco | undefined;
    idPersonaNavigation?: PePersonaFisica | undefined;
}

export class PoParentesco implements IPoParentesco {
    idParentesco?: number;
    codigoParentesco?: string | undefined;
    descripcionParentesco?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    coComposicionGrupoClienteIndividual?: CoComposicionGrupoClienteIndividual[] | undefined;
    poBeneficiariosPoliza?: PoBeneficiariosPoliza[] | undefined;
    poRelacionParentescoWs?: PoRelacionParentescoWs[] | undefined;

    constructor(data?: IPoParentesco) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idParentesco = _data["idParentesco"];
            this.codigoParentesco = _data["codigoParentesco"];
            this.descripcionParentesco = _data["descripcionParentesco"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            if (Array.isArray(_data["coComposicionGrupoClienteIndividual"])) {
                this.coComposicionGrupoClienteIndividual = [] as any;
                for (let item of _data["coComposicionGrupoClienteIndividual"])
                    this.coComposicionGrupoClienteIndividual!.push(CoComposicionGrupoClienteIndividual.fromJS(item));
            }
            if (Array.isArray(_data["poBeneficiariosPoliza"])) {
                this.poBeneficiariosPoliza = [] as any;
                for (let item of _data["poBeneficiariosPoliza"])
                    this.poBeneficiariosPoliza!.push(PoBeneficiariosPoliza.fromJS(item));
            }
            if (Array.isArray(_data["poRelacionParentescoWs"])) {
                this.poRelacionParentescoWs = [] as any;
                for (let item of _data["poRelacionParentescoWs"])
                    this.poRelacionParentescoWs!.push(PoRelacionParentescoWs.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PoParentesco {
        data = typeof data === 'object' ? data : {};
        let result = new PoParentesco();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idParentesco"] = this.idParentesco;
        data["codigoParentesco"] = this.codigoParentesco;
        data["descripcionParentesco"] = this.descripcionParentesco;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        if (Array.isArray(this.coComposicionGrupoClienteIndividual)) {
            data["coComposicionGrupoClienteIndividual"] = [];
            for (let item of this.coComposicionGrupoClienteIndividual)
                data["coComposicionGrupoClienteIndividual"].push(item.toJSON());
        }
        if (Array.isArray(this.poBeneficiariosPoliza)) {
            data["poBeneficiariosPoliza"] = [];
            for (let item of this.poBeneficiariosPoliza)
                data["poBeneficiariosPoliza"].push(item.toJSON());
        }
        if (Array.isArray(this.poRelacionParentescoWs)) {
            data["poRelacionParentescoWs"] = [];
            for (let item of this.poRelacionParentescoWs)
                data["poRelacionParentescoWs"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPoParentesco {
    idParentesco?: number;
    codigoParentesco?: string | undefined;
    descripcionParentesco?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    coComposicionGrupoClienteIndividual?: CoComposicionGrupoClienteIndividual[] | undefined;
    poBeneficiariosPoliza?: PoBeneficiariosPoliza[] | undefined;
    poRelacionParentescoWs?: PoRelacionParentescoWs[] | undefined;
}

export class PoBeneficiariosPoliza implements IPoBeneficiariosPoliza {
    idBeneficiarioPoliza?: number;
    idPoliza?: number;
    idPersona?: number;
    marcaTitular?: boolean;
    idParentesco?: number | undefined;
    importe?: number | undefined;
    porcentajeBonificado?: number | undefined;
    totalFacturado?: number | undefined;
    idPersonaBeneficiarioSeguro?: number | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    fecElimReg?: Date | undefined;
    eliminadoPor?: string | undefined;
    hashVoucher?: string | undefined;
    secuencia?: number | undefined;
    pdfvoucher?: string | undefined;
    fechaAceptacionCondiciones?: Date | undefined;
    viaja?: number | undefined;
    idTipoDocumento?: number | undefined;
    importeGrilla?: number | undefined;
    importeConPromocion?: number | undefined;
    markUp?: number | undefined;
    importeConMarkUp?: number | undefined;
    interes?: number | undefined;
    importeConInteres?: number | undefined;
    porcentajeBonificadoInicial?: number | undefined;
    totalFacturadoGrilla?: number | undefined;
    idProducto?: number | undefined;
    fechaAnulacion?: Date | undefined;
    extensionFecha?: Date | undefined;
    extensionVigenciaHasta?: Date | undefined;
    extensionValorCotizado?: number | undefined;
    extensionIdpago?: number | undefined;
    extensionValorPagado?: number | undefined;
    idPoextensionAutorizacion?: number | undefined;
    idParentescoNavigation?: PoParentesco | undefined;
    idPersonaNavigation?: PePersonaFisica | undefined;
    idPolizaNavigation?: PoPolizas | undefined;
    idProductoNavigation?: PrProducto | undefined;
    lpDocumentosPago?: LpDocumentosPago[] | undefined;
    prLogPromocionesDetalle?: PrLogPromocionesDetalle[] | undefined;
    tbPessoaPoliticaExposta1?: TbPessoaPoliticaExposta1[] | undefined;

    constructor(data?: IPoBeneficiariosPoliza) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idBeneficiarioPoliza = _data["idBeneficiarioPoliza"];
            this.idPoliza = _data["idPoliza"];
            this.idPersona = _data["idPersona"];
            this.marcaTitular = _data["marcaTitular"];
            this.idParentesco = _data["idParentesco"];
            this.importe = _data["importe"];
            this.porcentajeBonificado = _data["porcentajeBonificado"];
            this.totalFacturado = _data["totalFacturado"];
            this.idPersonaBeneficiarioSeguro = _data["idPersonaBeneficiarioSeguro"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.fecElimReg = _data["fecElimReg"] ? new Date(_data["fecElimReg"].toString()) : <any>undefined;
            this.eliminadoPor = _data["eliminadoPor"];
            this.hashVoucher = _data["hashVoucher"];
            this.secuencia = _data["secuencia"];
            this.pdfvoucher = _data["pdfvoucher"];
            this.fechaAceptacionCondiciones = _data["fechaAceptacionCondiciones"] ? new Date(_data["fechaAceptacionCondiciones"].toString()) : <any>undefined;
            this.viaja = _data["viaja"];
            this.idTipoDocumento = _data["idTipoDocumento"];
            this.importeGrilla = _data["importeGrilla"];
            this.importeConPromocion = _data["importeConPromocion"];
            this.markUp = _data["markUp"];
            this.importeConMarkUp = _data["importeConMarkUp"];
            this.interes = _data["interes"];
            this.importeConInteres = _data["importeConInteres"];
            this.porcentajeBonificadoInicial = _data["porcentajeBonificadoInicial"];
            this.totalFacturadoGrilla = _data["totalFacturadoGrilla"];
            this.idProducto = _data["idProducto"];
            this.fechaAnulacion = _data["fechaAnulacion"] ? new Date(_data["fechaAnulacion"].toString()) : <any>undefined;
            this.extensionFecha = _data["extensionFecha"] ? new Date(_data["extensionFecha"].toString()) : <any>undefined;
            this.extensionVigenciaHasta = _data["extensionVigenciaHasta"] ? new Date(_data["extensionVigenciaHasta"].toString()) : <any>undefined;
            this.extensionValorCotizado = _data["extensionValorCotizado"];
            this.extensionIdpago = _data["extensionIdpago"];
            this.extensionValorPagado = _data["extensionValorPagado"];
            this.idPoextensionAutorizacion = _data["idPoextensionAutorizacion"];
            this.idParentescoNavigation = _data["idParentescoNavigation"] ? PoParentesco.fromJS(_data["idParentescoNavigation"]) : <any>undefined;
            this.idPersonaNavigation = _data["idPersonaNavigation"] ? PePersonaFisica.fromJS(_data["idPersonaNavigation"]) : <any>undefined;
            this.idPolizaNavigation = _data["idPolizaNavigation"] ? PoPolizas.fromJS(_data["idPolizaNavigation"]) : <any>undefined;
            this.idProductoNavigation = _data["idProductoNavigation"] ? PrProducto.fromJS(_data["idProductoNavigation"]) : <any>undefined;
            if (Array.isArray(_data["lpDocumentosPago"])) {
                this.lpDocumentosPago = [] as any;
                for (let item of _data["lpDocumentosPago"])
                    this.lpDocumentosPago!.push(LpDocumentosPago.fromJS(item));
            }
            if (Array.isArray(_data["prLogPromocionesDetalle"])) {
                this.prLogPromocionesDetalle = [] as any;
                for (let item of _data["prLogPromocionesDetalle"])
                    this.prLogPromocionesDetalle!.push(PrLogPromocionesDetalle.fromJS(item));
            }
            if (Array.isArray(_data["tbPessoaPoliticaExposta1"])) {
                this.tbPessoaPoliticaExposta1 = [] as any;
                for (let item of _data["tbPessoaPoliticaExposta1"])
                    this.tbPessoaPoliticaExposta1!.push(TbPessoaPoliticaExposta1.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PoBeneficiariosPoliza {
        data = typeof data === 'object' ? data : {};
        let result = new PoBeneficiariosPoliza();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idBeneficiarioPoliza"] = this.idBeneficiarioPoliza;
        data["idPoliza"] = this.idPoliza;
        data["idPersona"] = this.idPersona;
        data["marcaTitular"] = this.marcaTitular;
        data["idParentesco"] = this.idParentesco;
        data["importe"] = this.importe;
        data["porcentajeBonificado"] = this.porcentajeBonificado;
        data["totalFacturado"] = this.totalFacturado;
        data["idPersonaBeneficiarioSeguro"] = this.idPersonaBeneficiarioSeguro;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["fecElimReg"] = this.fecElimReg ? this.fecElimReg.toISOString() : <any>undefined;
        data["eliminadoPor"] = this.eliminadoPor;
        data["hashVoucher"] = this.hashVoucher;
        data["secuencia"] = this.secuencia;
        data["pdfvoucher"] = this.pdfvoucher;
        data["fechaAceptacionCondiciones"] = this.fechaAceptacionCondiciones ? this.fechaAceptacionCondiciones.toISOString() : <any>undefined;
        data["viaja"] = this.viaja;
        data["idTipoDocumento"] = this.idTipoDocumento;
        data["importeGrilla"] = this.importeGrilla;
        data["importeConPromocion"] = this.importeConPromocion;
        data["markUp"] = this.markUp;
        data["importeConMarkUp"] = this.importeConMarkUp;
        data["interes"] = this.interes;
        data["importeConInteres"] = this.importeConInteres;
        data["porcentajeBonificadoInicial"] = this.porcentajeBonificadoInicial;
        data["totalFacturadoGrilla"] = this.totalFacturadoGrilla;
        data["idProducto"] = this.idProducto;
        data["fechaAnulacion"] = this.fechaAnulacion ? this.fechaAnulacion.toISOString() : <any>undefined;
        data["extensionFecha"] = this.extensionFecha ? this.extensionFecha.toISOString() : <any>undefined;
        data["extensionVigenciaHasta"] = this.extensionVigenciaHasta ? this.extensionVigenciaHasta.toISOString() : <any>undefined;
        data["extensionValorCotizado"] = this.extensionValorCotizado;
        data["extensionIdpago"] = this.extensionIdpago;
        data["extensionValorPagado"] = this.extensionValorPagado;
        data["idPoextensionAutorizacion"] = this.idPoextensionAutorizacion;
        data["idParentescoNavigation"] = this.idParentescoNavigation ? this.idParentescoNavigation.toJSON() : <any>undefined;
        data["idPersonaNavigation"] = this.idPersonaNavigation ? this.idPersonaNavigation.toJSON() : <any>undefined;
        data["idPolizaNavigation"] = this.idPolizaNavigation ? this.idPolizaNavigation.toJSON() : <any>undefined;
        data["idProductoNavigation"] = this.idProductoNavigation ? this.idProductoNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.lpDocumentosPago)) {
            data["lpDocumentosPago"] = [];
            for (let item of this.lpDocumentosPago)
                data["lpDocumentosPago"].push(item.toJSON());
        }
        if (Array.isArray(this.prLogPromocionesDetalle)) {
            data["prLogPromocionesDetalle"] = [];
            for (let item of this.prLogPromocionesDetalle)
                data["prLogPromocionesDetalle"].push(item.toJSON());
        }
        if (Array.isArray(this.tbPessoaPoliticaExposta1)) {
            data["tbPessoaPoliticaExposta1"] = [];
            for (let item of this.tbPessoaPoliticaExposta1)
                data["tbPessoaPoliticaExposta1"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPoBeneficiariosPoliza {
    idBeneficiarioPoliza?: number;
    idPoliza?: number;
    idPersona?: number;
    marcaTitular?: boolean;
    idParentesco?: number | undefined;
    importe?: number | undefined;
    porcentajeBonificado?: number | undefined;
    totalFacturado?: number | undefined;
    idPersonaBeneficiarioSeguro?: number | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    fecElimReg?: Date | undefined;
    eliminadoPor?: string | undefined;
    hashVoucher?: string | undefined;
    secuencia?: number | undefined;
    pdfvoucher?: string | undefined;
    fechaAceptacionCondiciones?: Date | undefined;
    viaja?: number | undefined;
    idTipoDocumento?: number | undefined;
    importeGrilla?: number | undefined;
    importeConPromocion?: number | undefined;
    markUp?: number | undefined;
    importeConMarkUp?: number | undefined;
    interes?: number | undefined;
    importeConInteres?: number | undefined;
    porcentajeBonificadoInicial?: number | undefined;
    totalFacturadoGrilla?: number | undefined;
    idProducto?: number | undefined;
    fechaAnulacion?: Date | undefined;
    extensionFecha?: Date | undefined;
    extensionVigenciaHasta?: Date | undefined;
    extensionValorCotizado?: number | undefined;
    extensionIdpago?: number | undefined;
    extensionValorPagado?: number | undefined;
    idPoextensionAutorizacion?: number | undefined;
    idParentescoNavigation?: PoParentesco | undefined;
    idPersonaNavigation?: PePersonaFisica | undefined;
    idPolizaNavigation?: PoPolizas | undefined;
    idProductoNavigation?: PrProducto | undefined;
    lpDocumentosPago?: LpDocumentosPago[] | undefined;
    prLogPromocionesDetalle?: PrLogPromocionesDetalle[] | undefined;
    tbPessoaPoliticaExposta1?: TbPessoaPoliticaExposta1[] | undefined;
}

export class LpDocumentosPago implements ILpDocumentosPago {
    idDocumentoPago?: number;
    idCaso?: number;
    idTipoProveedor?: number;
    idBeneficiarioPoliza?: number | undefined;
    idSocioOmint?: number | undefined;
    idCorresponsal?: number | undefined;
    idPrestadorExterior?: number | undefined;
    cbu?: string | undefined;
    numeroDocumento?: string | undefined;
    razonSocialProveedor?: string | undefined;
    domicilioProveedor?: string | undefined;
    numeroDocumentoExterior?: string | undefined;
    fechaEmision?: Date;
    fechaRecepcion?: Date;
    idRelacionProveedorFormaPago?: number;
    domicilioDePago?: string | undefined;
    idMonedaLiquidacion?: number;
    importeLiquidacion?: number;
    idMonedaPago?: number;
    tipoCambio?: number;
    importeApagar?: number;
    observacionDocumento?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idPersonaFisica?: number | undefined;
    idPersonaJuridica?: number | undefined;
    factura?: string | undefined;
    idFormaDePago?: number | undefined;
    idTipoDocumento?: number | undefined;
    cuil?: string | undefined;
    idBeneficiarioPolizaNavigation?: PoBeneficiariosPoliza | undefined;
    idCasoNavigation?: MiCasos | undefined;
    idCorresponsalNavigation?: MiCorresponsales | undefined;
    idMonedaLiquidacionNavigation?: BsMonedas | undefined;
    idMonedaPagoNavigation?: BsMonedas | undefined;
    lpDetalleDocumentos?: LpDetalleDocumentos[] | undefined;

    constructor(data?: ILpDocumentosPago) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idDocumentoPago = _data["idDocumentoPago"];
            this.idCaso = _data["idCaso"];
            this.idTipoProveedor = _data["idTipoProveedor"];
            this.idBeneficiarioPoliza = _data["idBeneficiarioPoliza"];
            this.idSocioOmint = _data["idSocioOmint"];
            this.idCorresponsal = _data["idCorresponsal"];
            this.idPrestadorExterior = _data["idPrestadorExterior"];
            this.cbu = _data["cbu"];
            this.numeroDocumento = _data["numeroDocumento"];
            this.razonSocialProveedor = _data["razonSocialProveedor"];
            this.domicilioProveedor = _data["domicilioProveedor"];
            this.numeroDocumentoExterior = _data["numeroDocumentoExterior"];
            this.fechaEmision = _data["fechaEmision"] ? new Date(_data["fechaEmision"].toString()) : <any>undefined;
            this.fechaRecepcion = _data["fechaRecepcion"] ? new Date(_data["fechaRecepcion"].toString()) : <any>undefined;
            this.idRelacionProveedorFormaPago = _data["idRelacionProveedorFormaPago"];
            this.domicilioDePago = _data["domicilioDePago"];
            this.idMonedaLiquidacion = _data["idMonedaLiquidacion"];
            this.importeLiquidacion = _data["importeLiquidacion"];
            this.idMonedaPago = _data["idMonedaPago"];
            this.tipoCambio = _data["tipoCambio"];
            this.importeApagar = _data["importeApagar"];
            this.observacionDocumento = _data["observacionDocumento"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idPersonaFisica = _data["idPersonaFisica"];
            this.idPersonaJuridica = _data["idPersonaJuridica"];
            this.factura = _data["factura"];
            this.idFormaDePago = _data["idFormaDePago"];
            this.idTipoDocumento = _data["idTipoDocumento"];
            this.cuil = _data["cuil"];
            this.idBeneficiarioPolizaNavigation = _data["idBeneficiarioPolizaNavigation"] ? PoBeneficiariosPoliza.fromJS(_data["idBeneficiarioPolizaNavigation"]) : <any>undefined;
            this.idCasoNavigation = _data["idCasoNavigation"] ? MiCasos.fromJS(_data["idCasoNavigation"]) : <any>undefined;
            this.idCorresponsalNavigation = _data["idCorresponsalNavigation"] ? MiCorresponsales.fromJS(_data["idCorresponsalNavigation"]) : <any>undefined;
            this.idMonedaLiquidacionNavigation = _data["idMonedaLiquidacionNavigation"] ? BsMonedas.fromJS(_data["idMonedaLiquidacionNavigation"]) : <any>undefined;
            this.idMonedaPagoNavigation = _data["idMonedaPagoNavigation"] ? BsMonedas.fromJS(_data["idMonedaPagoNavigation"]) : <any>undefined;
            if (Array.isArray(_data["lpDetalleDocumentos"])) {
                this.lpDetalleDocumentos = [] as any;
                for (let item of _data["lpDetalleDocumentos"])
                    this.lpDetalleDocumentos!.push(LpDetalleDocumentos.fromJS(item));
            }
        }
    }

    static fromJS(data: any): LpDocumentosPago {
        data = typeof data === 'object' ? data : {};
        let result = new LpDocumentosPago();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idDocumentoPago"] = this.idDocumentoPago;
        data["idCaso"] = this.idCaso;
        data["idTipoProveedor"] = this.idTipoProveedor;
        data["idBeneficiarioPoliza"] = this.idBeneficiarioPoliza;
        data["idSocioOmint"] = this.idSocioOmint;
        data["idCorresponsal"] = this.idCorresponsal;
        data["idPrestadorExterior"] = this.idPrestadorExterior;
        data["cbu"] = this.cbu;
        data["numeroDocumento"] = this.numeroDocumento;
        data["razonSocialProveedor"] = this.razonSocialProveedor;
        data["domicilioProveedor"] = this.domicilioProveedor;
        data["numeroDocumentoExterior"] = this.numeroDocumentoExterior;
        data["fechaEmision"] = this.fechaEmision ? this.fechaEmision.toISOString() : <any>undefined;
        data["fechaRecepcion"] = this.fechaRecepcion ? this.fechaRecepcion.toISOString() : <any>undefined;
        data["idRelacionProveedorFormaPago"] = this.idRelacionProveedorFormaPago;
        data["domicilioDePago"] = this.domicilioDePago;
        data["idMonedaLiquidacion"] = this.idMonedaLiquidacion;
        data["importeLiquidacion"] = this.importeLiquidacion;
        data["idMonedaPago"] = this.idMonedaPago;
        data["tipoCambio"] = this.tipoCambio;
        data["importeApagar"] = this.importeApagar;
        data["observacionDocumento"] = this.observacionDocumento;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idPersonaFisica"] = this.idPersonaFisica;
        data["idPersonaJuridica"] = this.idPersonaJuridica;
        data["factura"] = this.factura;
        data["idFormaDePago"] = this.idFormaDePago;
        data["idTipoDocumento"] = this.idTipoDocumento;
        data["cuil"] = this.cuil;
        data["idBeneficiarioPolizaNavigation"] = this.idBeneficiarioPolizaNavigation ? this.idBeneficiarioPolizaNavigation.toJSON() : <any>undefined;
        data["idCasoNavigation"] = this.idCasoNavigation ? this.idCasoNavigation.toJSON() : <any>undefined;
        data["idCorresponsalNavigation"] = this.idCorresponsalNavigation ? this.idCorresponsalNavigation.toJSON() : <any>undefined;
        data["idMonedaLiquidacionNavigation"] = this.idMonedaLiquidacionNavigation ? this.idMonedaLiquidacionNavigation.toJSON() : <any>undefined;
        data["idMonedaPagoNavigation"] = this.idMonedaPagoNavigation ? this.idMonedaPagoNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.lpDetalleDocumentos)) {
            data["lpDetalleDocumentos"] = [];
            for (let item of this.lpDetalleDocumentos)
                data["lpDetalleDocumentos"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ILpDocumentosPago {
    idDocumentoPago?: number;
    idCaso?: number;
    idTipoProveedor?: number;
    idBeneficiarioPoliza?: number | undefined;
    idSocioOmint?: number | undefined;
    idCorresponsal?: number | undefined;
    idPrestadorExterior?: number | undefined;
    cbu?: string | undefined;
    numeroDocumento?: string | undefined;
    razonSocialProveedor?: string | undefined;
    domicilioProveedor?: string | undefined;
    numeroDocumentoExterior?: string | undefined;
    fechaEmision?: Date;
    fechaRecepcion?: Date;
    idRelacionProveedorFormaPago?: number;
    domicilioDePago?: string | undefined;
    idMonedaLiquidacion?: number;
    importeLiquidacion?: number;
    idMonedaPago?: number;
    tipoCambio?: number;
    importeApagar?: number;
    observacionDocumento?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idPersonaFisica?: number | undefined;
    idPersonaJuridica?: number | undefined;
    factura?: string | undefined;
    idFormaDePago?: number | undefined;
    idTipoDocumento?: number | undefined;
    cuil?: string | undefined;
    idBeneficiarioPolizaNavigation?: PoBeneficiariosPoliza | undefined;
    idCasoNavigation?: MiCasos | undefined;
    idCorresponsalNavigation?: MiCorresponsales | undefined;
    idMonedaLiquidacionNavigation?: BsMonedas | undefined;
    idMonedaPagoNavigation?: BsMonedas | undefined;
    lpDetalleDocumentos?: LpDetalleDocumentos[] | undefined;
}

export class MiCasos implements IMiCasos {
    idCaso?: number;
    nroCaso?: number;
    nroCasoExterno?: string | undefined;
    idTipoDocumento?: number | undefined;
    nroDocumento?: string | undefined;
    nroSocio?: string | undefined;
    apellido?: string | undefined;
    nombre?: string | undefined;
    edad?: number | undefined;
    fechaInicio?: Date | undefined;
    horaInicio?: string | undefined;
    fechaSalida?: Date | undefined;
    eventosProximos?: string | undefined;
    fechaRetorno?: Date | undefined;
    fechaFin?: Date | undefined;
    empresa?: string | undefined;
    idEmpresa?: number | undefined;
    telefono?: string | undefined;
    direccion?: string | undefined;
    idEstado?: number | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    observacionesContacto?: string | undefined;
    idPais?: number | undefined;
    fecNac?: Date | undefined;
    idCorresponsal?: number | undefined;
    numeroVoucher?: string | undefined;
    idBeneficiario?: number | undefined;
    ciudad?: string | undefined;
    idPoliza?: number | undefined;
    observacionesCaso?: string | undefined;
    observaciones?: string | undefined;
    estado?: string | undefined;
    documentos?: string | undefined;
    idCorresponsalDerivacion?: number | undefined;
    producto?: string | undefined;
    fechaInicioCobertura?: Date | undefined;
    fechaFinCobertura?: Date | undefined;
    idMonedaMontoMaximo?: number | undefined;
    importeMontoMaximo?: number | undefined;
    observacionesMontoMaximo?: string | undefined;
    documentoMontoMaximo?: string | undefined;
    lpDocumentosPago?: LpDocumentosPago[] | undefined;

    constructor(data?: IMiCasos) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idCaso = _data["idCaso"];
            this.nroCaso = _data["nroCaso"];
            this.nroCasoExterno = _data["nroCasoExterno"];
            this.idTipoDocumento = _data["idTipoDocumento"];
            this.nroDocumento = _data["nroDocumento"];
            this.nroSocio = _data["nroSocio"];
            this.apellido = _data["apellido"];
            this.nombre = _data["nombre"];
            this.edad = _data["edad"];
            this.fechaInicio = _data["fechaInicio"] ? new Date(_data["fechaInicio"].toString()) : <any>undefined;
            this.horaInicio = _data["horaInicio"];
            this.fechaSalida = _data["fechaSalida"] ? new Date(_data["fechaSalida"].toString()) : <any>undefined;
            this.eventosProximos = _data["eventosProximos"];
            this.fechaRetorno = _data["fechaRetorno"] ? new Date(_data["fechaRetorno"].toString()) : <any>undefined;
            this.fechaFin = _data["fechaFin"] ? new Date(_data["fechaFin"].toString()) : <any>undefined;
            this.empresa = _data["empresa"];
            this.idEmpresa = _data["idEmpresa"];
            this.telefono = _data["telefono"];
            this.direccion = _data["direccion"];
            this.idEstado = _data["idEstado"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.observacionesContacto = _data["observacionesContacto"];
            this.idPais = _data["idPais"];
            this.fecNac = _data["fecNac"] ? new Date(_data["fecNac"].toString()) : <any>undefined;
            this.idCorresponsal = _data["idCorresponsal"];
            this.numeroVoucher = _data["numeroVoucher"];
            this.idBeneficiario = _data["idBeneficiario"];
            this.ciudad = _data["ciudad"];
            this.idPoliza = _data["idPoliza"];
            this.observacionesCaso = _data["observacionesCaso"];
            this.observaciones = _data["observaciones"];
            this.estado = _data["estado"];
            this.documentos = _data["documentos"];
            this.idCorresponsalDerivacion = _data["idCorresponsalDerivacion"];
            this.producto = _data["producto"];
            this.fechaInicioCobertura = _data["fechaInicioCobertura"] ? new Date(_data["fechaInicioCobertura"].toString()) : <any>undefined;
            this.fechaFinCobertura = _data["fechaFinCobertura"] ? new Date(_data["fechaFinCobertura"].toString()) : <any>undefined;
            this.idMonedaMontoMaximo = _data["idMonedaMontoMaximo"];
            this.importeMontoMaximo = _data["importeMontoMaximo"];
            this.observacionesMontoMaximo = _data["observacionesMontoMaximo"];
            this.documentoMontoMaximo = _data["documentoMontoMaximo"];
            if (Array.isArray(_data["lpDocumentosPago"])) {
                this.lpDocumentosPago = [] as any;
                for (let item of _data["lpDocumentosPago"])
                    this.lpDocumentosPago!.push(LpDocumentosPago.fromJS(item));
            }
        }
    }

    static fromJS(data: any): MiCasos {
        data = typeof data === 'object' ? data : {};
        let result = new MiCasos();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idCaso"] = this.idCaso;
        data["nroCaso"] = this.nroCaso;
        data["nroCasoExterno"] = this.nroCasoExterno;
        data["idTipoDocumento"] = this.idTipoDocumento;
        data["nroDocumento"] = this.nroDocumento;
        data["nroSocio"] = this.nroSocio;
        data["apellido"] = this.apellido;
        data["nombre"] = this.nombre;
        data["edad"] = this.edad;
        data["fechaInicio"] = this.fechaInicio ? this.fechaInicio.toISOString() : <any>undefined;
        data["horaInicio"] = this.horaInicio;
        data["fechaSalida"] = this.fechaSalida ? this.fechaSalida.toISOString() : <any>undefined;
        data["eventosProximos"] = this.eventosProximos;
        data["fechaRetorno"] = this.fechaRetorno ? this.fechaRetorno.toISOString() : <any>undefined;
        data["fechaFin"] = this.fechaFin ? this.fechaFin.toISOString() : <any>undefined;
        data["empresa"] = this.empresa;
        data["idEmpresa"] = this.idEmpresa;
        data["telefono"] = this.telefono;
        data["direccion"] = this.direccion;
        data["idEstado"] = this.idEstado;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["observacionesContacto"] = this.observacionesContacto;
        data["idPais"] = this.idPais;
        data["fecNac"] = this.fecNac ? this.fecNac.toISOString() : <any>undefined;
        data["idCorresponsal"] = this.idCorresponsal;
        data["numeroVoucher"] = this.numeroVoucher;
        data["idBeneficiario"] = this.idBeneficiario;
        data["ciudad"] = this.ciudad;
        data["idPoliza"] = this.idPoliza;
        data["observacionesCaso"] = this.observacionesCaso;
        data["observaciones"] = this.observaciones;
        data["estado"] = this.estado;
        data["documentos"] = this.documentos;
        data["idCorresponsalDerivacion"] = this.idCorresponsalDerivacion;
        data["producto"] = this.producto;
        data["fechaInicioCobertura"] = this.fechaInicioCobertura ? this.fechaInicioCobertura.toISOString() : <any>undefined;
        data["fechaFinCobertura"] = this.fechaFinCobertura ? this.fechaFinCobertura.toISOString() : <any>undefined;
        data["idMonedaMontoMaximo"] = this.idMonedaMontoMaximo;
        data["importeMontoMaximo"] = this.importeMontoMaximo;
        data["observacionesMontoMaximo"] = this.observacionesMontoMaximo;
        data["documentoMontoMaximo"] = this.documentoMontoMaximo;
        if (Array.isArray(this.lpDocumentosPago)) {
            data["lpDocumentosPago"] = [];
            for (let item of this.lpDocumentosPago)
                data["lpDocumentosPago"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IMiCasos {
    idCaso?: number;
    nroCaso?: number;
    nroCasoExterno?: string | undefined;
    idTipoDocumento?: number | undefined;
    nroDocumento?: string | undefined;
    nroSocio?: string | undefined;
    apellido?: string | undefined;
    nombre?: string | undefined;
    edad?: number | undefined;
    fechaInicio?: Date | undefined;
    horaInicio?: string | undefined;
    fechaSalida?: Date | undefined;
    eventosProximos?: string | undefined;
    fechaRetorno?: Date | undefined;
    fechaFin?: Date | undefined;
    empresa?: string | undefined;
    idEmpresa?: number | undefined;
    telefono?: string | undefined;
    direccion?: string | undefined;
    idEstado?: number | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    observacionesContacto?: string | undefined;
    idPais?: number | undefined;
    fecNac?: Date | undefined;
    idCorresponsal?: number | undefined;
    numeroVoucher?: string | undefined;
    idBeneficiario?: number | undefined;
    ciudad?: string | undefined;
    idPoliza?: number | undefined;
    observacionesCaso?: string | undefined;
    observaciones?: string | undefined;
    estado?: string | undefined;
    documentos?: string | undefined;
    idCorresponsalDerivacion?: number | undefined;
    producto?: string | undefined;
    fechaInicioCobertura?: Date | undefined;
    fechaFinCobertura?: Date | undefined;
    idMonedaMontoMaximo?: number | undefined;
    importeMontoMaximo?: number | undefined;
    observacionesMontoMaximo?: string | undefined;
    documentoMontoMaximo?: string | undefined;
    lpDocumentosPago?: LpDocumentosPago[] | undefined;
}

export class MiCorresponsales implements IMiCorresponsales {
    idCorresponsal?: number;
    idPersonaJuridica?: number | undefined;
    opcion?: number | undefined;
    observacion?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    lpDocumentosPago?: LpDocumentosPago[] | undefined;
    miPaisesAtencionCorresponsales?: MiPaisesAtencionCorresponsales[] | undefined;

    constructor(data?: IMiCorresponsales) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idCorresponsal = _data["idCorresponsal"];
            this.idPersonaJuridica = _data["idPersonaJuridica"];
            this.opcion = _data["opcion"];
            this.observacion = _data["observacion"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            if (Array.isArray(_data["lpDocumentosPago"])) {
                this.lpDocumentosPago = [] as any;
                for (let item of _data["lpDocumentosPago"])
                    this.lpDocumentosPago!.push(LpDocumentosPago.fromJS(item));
            }
            if (Array.isArray(_data["miPaisesAtencionCorresponsales"])) {
                this.miPaisesAtencionCorresponsales = [] as any;
                for (let item of _data["miPaisesAtencionCorresponsales"])
                    this.miPaisesAtencionCorresponsales!.push(MiPaisesAtencionCorresponsales.fromJS(item));
            }
        }
    }

    static fromJS(data: any): MiCorresponsales {
        data = typeof data === 'object' ? data : {};
        let result = new MiCorresponsales();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idCorresponsal"] = this.idCorresponsal;
        data["idPersonaJuridica"] = this.idPersonaJuridica;
        data["opcion"] = this.opcion;
        data["observacion"] = this.observacion;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        if (Array.isArray(this.lpDocumentosPago)) {
            data["lpDocumentosPago"] = [];
            for (let item of this.lpDocumentosPago)
                data["lpDocumentosPago"].push(item.toJSON());
        }
        if (Array.isArray(this.miPaisesAtencionCorresponsales)) {
            data["miPaisesAtencionCorresponsales"] = [];
            for (let item of this.miPaisesAtencionCorresponsales)
                data["miPaisesAtencionCorresponsales"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IMiCorresponsales {
    idCorresponsal?: number;
    idPersonaJuridica?: number | undefined;
    opcion?: number | undefined;
    observacion?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    lpDocumentosPago?: LpDocumentosPago[] | undefined;
    miPaisesAtencionCorresponsales?: MiPaisesAtencionCorresponsales[] | undefined;
}

export class MiPaisesAtencionCorresponsales implements IMiPaisesAtencionCorresponsales {
    idPaisAtencionCorresponsal?: number;
    idCorresponsal?: number;
    idPais?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idCorresponsalNavigation?: MiCorresponsales | undefined;
    idPaisNavigation?: BsPaises | undefined;

    constructor(data?: IMiPaisesAtencionCorresponsales) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idPaisAtencionCorresponsal = _data["idPaisAtencionCorresponsal"];
            this.idCorresponsal = _data["idCorresponsal"];
            this.idPais = _data["idPais"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idCorresponsalNavigation = _data["idCorresponsalNavigation"] ? MiCorresponsales.fromJS(_data["idCorresponsalNavigation"]) : <any>undefined;
            this.idPaisNavigation = _data["idPaisNavigation"] ? BsPaises.fromJS(_data["idPaisNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): MiPaisesAtencionCorresponsales {
        data = typeof data === 'object' ? data : {};
        let result = new MiPaisesAtencionCorresponsales();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idPaisAtencionCorresponsal"] = this.idPaisAtencionCorresponsal;
        data["idCorresponsal"] = this.idCorresponsal;
        data["idPais"] = this.idPais;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idCorresponsalNavigation"] = this.idCorresponsalNavigation ? this.idCorresponsalNavigation.toJSON() : <any>undefined;
        data["idPaisNavigation"] = this.idPaisNavigation ? this.idPaisNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IMiPaisesAtencionCorresponsales {
    idPaisAtencionCorresponsal?: number;
    idCorresponsal?: number;
    idPais?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idCorresponsalNavigation?: MiCorresponsales | undefined;
    idPaisNavigation?: BsPaises | undefined;
}

export class LpDetalleDocumentos implements ILpDetalleDocumentos {
    idDetalleDocumento?: number;
    idDocumentoPago?: number;
    fechaServicio?: Date;
    idServicio?: number;
    importeServicio?: number;
    importeAutorizado?: number;
    importePagarServicio?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idDocumentoPagoNavigation?: LpDocumentosPago | undefined;

    constructor(data?: ILpDetalleDocumentos) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idDetalleDocumento = _data["idDetalleDocumento"];
            this.idDocumentoPago = _data["idDocumentoPago"];
            this.fechaServicio = _data["fechaServicio"] ? new Date(_data["fechaServicio"].toString()) : <any>undefined;
            this.idServicio = _data["idServicio"];
            this.importeServicio = _data["importeServicio"];
            this.importeAutorizado = _data["importeAutorizado"];
            this.importePagarServicio = _data["importePagarServicio"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idDocumentoPagoNavigation = _data["idDocumentoPagoNavigation"] ? LpDocumentosPago.fromJS(_data["idDocumentoPagoNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): LpDetalleDocumentos {
        data = typeof data === 'object' ? data : {};
        let result = new LpDetalleDocumentos();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idDetalleDocumento"] = this.idDetalleDocumento;
        data["idDocumentoPago"] = this.idDocumentoPago;
        data["fechaServicio"] = this.fechaServicio ? this.fechaServicio.toISOString() : <any>undefined;
        data["idServicio"] = this.idServicio;
        data["importeServicio"] = this.importeServicio;
        data["importeAutorizado"] = this.importeAutorizado;
        data["importePagarServicio"] = this.importePagarServicio;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idDocumentoPagoNavigation"] = this.idDocumentoPagoNavigation ? this.idDocumentoPagoNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface ILpDetalleDocumentos {
    idDetalleDocumento?: number;
    idDocumentoPago?: number;
    fechaServicio?: Date;
    idServicio?: number;
    importeServicio?: number;
    importeAutorizado?: number;
    importePagarServicio?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idDocumentoPagoNavigation?: LpDocumentosPago | undefined;
}

export class PrLogPromocionesDetalle implements IPrLogPromocionesDetalle {
    idLogPromocionesDetalle?: number;
    idLogPromocionesAplicadas?: number;
    idBeneficiarioPoliza?: number;
    importe?: number | undefined;
    porcentajeBonificado?: number | undefined;
    totalNeto?: number | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idBeneficiarioPolizaNavigation?: PoBeneficiariosPoliza | undefined;
    idLogPromocionesAplicadasNavigation?: PrLogPromocionesAplicadas | undefined;

    constructor(data?: IPrLogPromocionesDetalle) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idLogPromocionesDetalle = _data["idLogPromocionesDetalle"];
            this.idLogPromocionesAplicadas = _data["idLogPromocionesAplicadas"];
            this.idBeneficiarioPoliza = _data["idBeneficiarioPoliza"];
            this.importe = _data["importe"];
            this.porcentajeBonificado = _data["porcentajeBonificado"];
            this.totalNeto = _data["totalNeto"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idBeneficiarioPolizaNavigation = _data["idBeneficiarioPolizaNavigation"] ? PoBeneficiariosPoliza.fromJS(_data["idBeneficiarioPolizaNavigation"]) : <any>undefined;
            this.idLogPromocionesAplicadasNavigation = _data["idLogPromocionesAplicadasNavigation"] ? PrLogPromocionesAplicadas.fromJS(_data["idLogPromocionesAplicadasNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PrLogPromocionesDetalle {
        data = typeof data === 'object' ? data : {};
        let result = new PrLogPromocionesDetalle();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idLogPromocionesDetalle"] = this.idLogPromocionesDetalle;
        data["idLogPromocionesAplicadas"] = this.idLogPromocionesAplicadas;
        data["idBeneficiarioPoliza"] = this.idBeneficiarioPoliza;
        data["importe"] = this.importe;
        data["porcentajeBonificado"] = this.porcentajeBonificado;
        data["totalNeto"] = this.totalNeto;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idBeneficiarioPolizaNavigation"] = this.idBeneficiarioPolizaNavigation ? this.idBeneficiarioPolizaNavigation.toJSON() : <any>undefined;
        data["idLogPromocionesAplicadasNavigation"] = this.idLogPromocionesAplicadasNavigation ? this.idLogPromocionesAplicadasNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPrLogPromocionesDetalle {
    idLogPromocionesDetalle?: number;
    idLogPromocionesAplicadas?: number;
    idBeneficiarioPoliza?: number;
    importe?: number | undefined;
    porcentajeBonificado?: number | undefined;
    totalNeto?: number | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idBeneficiarioPolizaNavigation?: PoBeneficiariosPoliza | undefined;
    idLogPromocionesAplicadasNavigation?: PrLogPromocionesAplicadas | undefined;
}

export class PrLogPromocionesAplicadas implements IPrLogPromocionesAplicadas {
    idLogPromocionesAplicadas?: number;
    idPromocion?: number;
    idPoliza?: number;
    idTipoPromocion?: number;
    idDetallePromocion?: number;
    valor?: number;
    promoUtilizada?: boolean;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    descripcionDetallePromocion?: string | undefined;
    idPolizaNavigation?: PoPolizas | undefined;
    idPromocionNavigation?: PrPromociones | undefined;
    idTipoPromocionNavigation?: PrTiposPromocion | undefined;
    prLogPromocionesDetalle?: PrLogPromocionesDetalle[] | undefined;

    constructor(data?: IPrLogPromocionesAplicadas) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idLogPromocionesAplicadas = _data["idLogPromocionesAplicadas"];
            this.idPromocion = _data["idPromocion"];
            this.idPoliza = _data["idPoliza"];
            this.idTipoPromocion = _data["idTipoPromocion"];
            this.idDetallePromocion = _data["idDetallePromocion"];
            this.valor = _data["valor"];
            this.promoUtilizada = _data["promoUtilizada"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.descripcionDetallePromocion = _data["descripcionDetallePromocion"];
            this.idPolizaNavigation = _data["idPolizaNavigation"] ? PoPolizas.fromJS(_data["idPolizaNavigation"]) : <any>undefined;
            this.idPromocionNavigation = _data["idPromocionNavigation"] ? PrPromociones.fromJS(_data["idPromocionNavigation"]) : <any>undefined;
            this.idTipoPromocionNavigation = _data["idTipoPromocionNavigation"] ? PrTiposPromocion.fromJS(_data["idTipoPromocionNavigation"]) : <any>undefined;
            if (Array.isArray(_data["prLogPromocionesDetalle"])) {
                this.prLogPromocionesDetalle = [] as any;
                for (let item of _data["prLogPromocionesDetalle"])
                    this.prLogPromocionesDetalle!.push(PrLogPromocionesDetalle.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PrLogPromocionesAplicadas {
        data = typeof data === 'object' ? data : {};
        let result = new PrLogPromocionesAplicadas();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idLogPromocionesAplicadas"] = this.idLogPromocionesAplicadas;
        data["idPromocion"] = this.idPromocion;
        data["idPoliza"] = this.idPoliza;
        data["idTipoPromocion"] = this.idTipoPromocion;
        data["idDetallePromocion"] = this.idDetallePromocion;
        data["valor"] = this.valor;
        data["promoUtilizada"] = this.promoUtilizada;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["descripcionDetallePromocion"] = this.descripcionDetallePromocion;
        data["idPolizaNavigation"] = this.idPolizaNavigation ? this.idPolizaNavigation.toJSON() : <any>undefined;
        data["idPromocionNavigation"] = this.idPromocionNavigation ? this.idPromocionNavigation.toJSON() : <any>undefined;
        data["idTipoPromocionNavigation"] = this.idTipoPromocionNavigation ? this.idTipoPromocionNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.prLogPromocionesDetalle)) {
            data["prLogPromocionesDetalle"] = [];
            for (let item of this.prLogPromocionesDetalle)
                data["prLogPromocionesDetalle"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPrLogPromocionesAplicadas {
    idLogPromocionesAplicadas?: number;
    idPromocion?: number;
    idPoliza?: number;
    idTipoPromocion?: number;
    idDetallePromocion?: number;
    valor?: number;
    promoUtilizada?: boolean;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    descripcionDetallePromocion?: string | undefined;
    idPolizaNavigation?: PoPolizas | undefined;
    idPromocionNavigation?: PrPromociones | undefined;
    idTipoPromocionNavigation?: PrTiposPromocion | undefined;
    prLogPromocionesDetalle?: PrLogPromocionesDetalle[] | undefined;
}

export class PrPromociones implements IPrPromociones {
    idPromocion?: number;
    idCompania?: number;
    idTipoAplicacionPromocion?: number;
    codigoPromocion?: string | undefined;
    descripcionPromocion?: string | undefined;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    idTipoProducto?: number;
    marcaTodasAgencias?: string | undefined;
    multiplicador?: number | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    marcaTodosSellersId?: string | undefined;
    fechaLimiteInicioViaje?: Date | undefined;
    marcaTodosProductos?: string | undefined;
    idCompaniaNavigation?: BsCompanias | undefined;
    idTipoAplicacionPromocionNavigation?: PrTipoAplicacionPromocion | undefined;
    idTipoProductoNavigation?: PrTipoProducto | undefined;
    prAgenciasHabilitadasPromocion?: PrAgenciasHabilitadasPromocion[] | undefined;
    prLogPromocionesAplicadas?: PrLogPromocionesAplicadas[] | undefined;
    prProductosHabilitadosPromocion?: PrProductosHabilitadosPromocion[] | undefined;
    prPromocionComboEtario?: PrPromocionComboEtario[] | undefined;
    prPromocionCombos?: PrPromocionCombos[] | undefined;
    prPromocionCupones?: PrPromocionCupones[] | undefined;
    prPromocionDescuentoIndividual?: PrPromocionDescuentoIndividual[] | undefined;
    prPromocionGrupoFamiliar?: PrPromocionGrupoFamiliar[] | undefined;
    prPromocionPaisDestino?: PrPromocionPaisDestino[] | undefined;
    prPromocionProducto?: PrPromocionProducto[] | undefined;
    prPromocionRangosEtarios?: PrPromocionRangosEtarios[] | undefined;
    prSellerIdhabilitadosPromocion?: PrSellerIdhabilitadosPromocion[] | undefined;

    constructor(data?: IPrPromociones) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idPromocion = _data["idPromocion"];
            this.idCompania = _data["idCompania"];
            this.idTipoAplicacionPromocion = _data["idTipoAplicacionPromocion"];
            this.codigoPromocion = _data["codigoPromocion"];
            this.descripcionPromocion = _data["descripcionPromocion"];
            this.fechaInicioVigencia = _data["fechaInicioVigencia"] ? new Date(_data["fechaInicioVigencia"].toString()) : <any>undefined;
            this.fechaFinVigencia = _data["fechaFinVigencia"] ? new Date(_data["fechaFinVigencia"].toString()) : <any>undefined;
            this.idTipoProducto = _data["idTipoProducto"];
            this.marcaTodasAgencias = _data["marcaTodasAgencias"];
            this.multiplicador = _data["multiplicador"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.marcaTodosSellersId = _data["marcaTodosSellersId"];
            this.fechaLimiteInicioViaje = _data["fechaLimiteInicioViaje"] ? new Date(_data["fechaLimiteInicioViaje"].toString()) : <any>undefined;
            this.marcaTodosProductos = _data["marcaTodosProductos"];
            this.idCompaniaNavigation = _data["idCompaniaNavigation"] ? BsCompanias.fromJS(_data["idCompaniaNavigation"]) : <any>undefined;
            this.idTipoAplicacionPromocionNavigation = _data["idTipoAplicacionPromocionNavigation"] ? PrTipoAplicacionPromocion.fromJS(_data["idTipoAplicacionPromocionNavigation"]) : <any>undefined;
            this.idTipoProductoNavigation = _data["idTipoProductoNavigation"] ? PrTipoProducto.fromJS(_data["idTipoProductoNavigation"]) : <any>undefined;
            if (Array.isArray(_data["prAgenciasHabilitadasPromocion"])) {
                this.prAgenciasHabilitadasPromocion = [] as any;
                for (let item of _data["prAgenciasHabilitadasPromocion"])
                    this.prAgenciasHabilitadasPromocion!.push(PrAgenciasHabilitadasPromocion.fromJS(item));
            }
            if (Array.isArray(_data["prLogPromocionesAplicadas"])) {
                this.prLogPromocionesAplicadas = [] as any;
                for (let item of _data["prLogPromocionesAplicadas"])
                    this.prLogPromocionesAplicadas!.push(PrLogPromocionesAplicadas.fromJS(item));
            }
            if (Array.isArray(_data["prProductosHabilitadosPromocion"])) {
                this.prProductosHabilitadosPromocion = [] as any;
                for (let item of _data["prProductosHabilitadosPromocion"])
                    this.prProductosHabilitadosPromocion!.push(PrProductosHabilitadosPromocion.fromJS(item));
            }
            if (Array.isArray(_data["prPromocionComboEtario"])) {
                this.prPromocionComboEtario = [] as any;
                for (let item of _data["prPromocionComboEtario"])
                    this.prPromocionComboEtario!.push(PrPromocionComboEtario.fromJS(item));
            }
            if (Array.isArray(_data["prPromocionCombos"])) {
                this.prPromocionCombos = [] as any;
                for (let item of _data["prPromocionCombos"])
                    this.prPromocionCombos!.push(PrPromocionCombos.fromJS(item));
            }
            if (Array.isArray(_data["prPromocionCupones"])) {
                this.prPromocionCupones = [] as any;
                for (let item of _data["prPromocionCupones"])
                    this.prPromocionCupones!.push(PrPromocionCupones.fromJS(item));
            }
            if (Array.isArray(_data["prPromocionDescuentoIndividual"])) {
                this.prPromocionDescuentoIndividual = [] as any;
                for (let item of _data["prPromocionDescuentoIndividual"])
                    this.prPromocionDescuentoIndividual!.push(PrPromocionDescuentoIndividual.fromJS(item));
            }
            if (Array.isArray(_data["prPromocionGrupoFamiliar"])) {
                this.prPromocionGrupoFamiliar = [] as any;
                for (let item of _data["prPromocionGrupoFamiliar"])
                    this.prPromocionGrupoFamiliar!.push(PrPromocionGrupoFamiliar.fromJS(item));
            }
            if (Array.isArray(_data["prPromocionPaisDestino"])) {
                this.prPromocionPaisDestino = [] as any;
                for (let item of _data["prPromocionPaisDestino"])
                    this.prPromocionPaisDestino!.push(PrPromocionPaisDestino.fromJS(item));
            }
            if (Array.isArray(_data["prPromocionProducto"])) {
                this.prPromocionProducto = [] as any;
                for (let item of _data["prPromocionProducto"])
                    this.prPromocionProducto!.push(PrPromocionProducto.fromJS(item));
            }
            if (Array.isArray(_data["prPromocionRangosEtarios"])) {
                this.prPromocionRangosEtarios = [] as any;
                for (let item of _data["prPromocionRangosEtarios"])
                    this.prPromocionRangosEtarios!.push(PrPromocionRangosEtarios.fromJS(item));
            }
            if (Array.isArray(_data["prSellerIdhabilitadosPromocion"])) {
                this.prSellerIdhabilitadosPromocion = [] as any;
                for (let item of _data["prSellerIdhabilitadosPromocion"])
                    this.prSellerIdhabilitadosPromocion!.push(PrSellerIdhabilitadosPromocion.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PrPromociones {
        data = typeof data === 'object' ? data : {};
        let result = new PrPromociones();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idPromocion"] = this.idPromocion;
        data["idCompania"] = this.idCompania;
        data["idTipoAplicacionPromocion"] = this.idTipoAplicacionPromocion;
        data["codigoPromocion"] = this.codigoPromocion;
        data["descripcionPromocion"] = this.descripcionPromocion;
        data["fechaInicioVigencia"] = this.fechaInicioVigencia ? this.fechaInicioVigencia.toISOString() : <any>undefined;
        data["fechaFinVigencia"] = this.fechaFinVigencia ? this.fechaFinVigencia.toISOString() : <any>undefined;
        data["idTipoProducto"] = this.idTipoProducto;
        data["marcaTodasAgencias"] = this.marcaTodasAgencias;
        data["multiplicador"] = this.multiplicador;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["marcaTodosSellersId"] = this.marcaTodosSellersId;
        data["fechaLimiteInicioViaje"] = this.fechaLimiteInicioViaje ? this.fechaLimiteInicioViaje.toISOString() : <any>undefined;
        data["marcaTodosProductos"] = this.marcaTodosProductos;
        data["idCompaniaNavigation"] = this.idCompaniaNavigation ? this.idCompaniaNavigation.toJSON() : <any>undefined;
        data["idTipoAplicacionPromocionNavigation"] = this.idTipoAplicacionPromocionNavigation ? this.idTipoAplicacionPromocionNavigation.toJSON() : <any>undefined;
        data["idTipoProductoNavigation"] = this.idTipoProductoNavigation ? this.idTipoProductoNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.prAgenciasHabilitadasPromocion)) {
            data["prAgenciasHabilitadasPromocion"] = [];
            for (let item of this.prAgenciasHabilitadasPromocion)
                data["prAgenciasHabilitadasPromocion"].push(item.toJSON());
        }
        if (Array.isArray(this.prLogPromocionesAplicadas)) {
            data["prLogPromocionesAplicadas"] = [];
            for (let item of this.prLogPromocionesAplicadas)
                data["prLogPromocionesAplicadas"].push(item.toJSON());
        }
        if (Array.isArray(this.prProductosHabilitadosPromocion)) {
            data["prProductosHabilitadosPromocion"] = [];
            for (let item of this.prProductosHabilitadosPromocion)
                data["prProductosHabilitadosPromocion"].push(item.toJSON());
        }
        if (Array.isArray(this.prPromocionComboEtario)) {
            data["prPromocionComboEtario"] = [];
            for (let item of this.prPromocionComboEtario)
                data["prPromocionComboEtario"].push(item.toJSON());
        }
        if (Array.isArray(this.prPromocionCombos)) {
            data["prPromocionCombos"] = [];
            for (let item of this.prPromocionCombos)
                data["prPromocionCombos"].push(item.toJSON());
        }
        if (Array.isArray(this.prPromocionCupones)) {
            data["prPromocionCupones"] = [];
            for (let item of this.prPromocionCupones)
                data["prPromocionCupones"].push(item.toJSON());
        }
        if (Array.isArray(this.prPromocionDescuentoIndividual)) {
            data["prPromocionDescuentoIndividual"] = [];
            for (let item of this.prPromocionDescuentoIndividual)
                data["prPromocionDescuentoIndividual"].push(item.toJSON());
        }
        if (Array.isArray(this.prPromocionGrupoFamiliar)) {
            data["prPromocionGrupoFamiliar"] = [];
            for (let item of this.prPromocionGrupoFamiliar)
                data["prPromocionGrupoFamiliar"].push(item.toJSON());
        }
        if (Array.isArray(this.prPromocionPaisDestino)) {
            data["prPromocionPaisDestino"] = [];
            for (let item of this.prPromocionPaisDestino)
                data["prPromocionPaisDestino"].push(item.toJSON());
        }
        if (Array.isArray(this.prPromocionProducto)) {
            data["prPromocionProducto"] = [];
            for (let item of this.prPromocionProducto)
                data["prPromocionProducto"].push(item.toJSON());
        }
        if (Array.isArray(this.prPromocionRangosEtarios)) {
            data["prPromocionRangosEtarios"] = [];
            for (let item of this.prPromocionRangosEtarios)
                data["prPromocionRangosEtarios"].push(item.toJSON());
        }
        if (Array.isArray(this.prSellerIdhabilitadosPromocion)) {
            data["prSellerIdhabilitadosPromocion"] = [];
            for (let item of this.prSellerIdhabilitadosPromocion)
                data["prSellerIdhabilitadosPromocion"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPrPromociones {
    idPromocion?: number;
    idCompania?: number;
    idTipoAplicacionPromocion?: number;
    codigoPromocion?: string | undefined;
    descripcionPromocion?: string | undefined;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    idTipoProducto?: number;
    marcaTodasAgencias?: string | undefined;
    multiplicador?: number | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    marcaTodosSellersId?: string | undefined;
    fechaLimiteInicioViaje?: Date | undefined;
    marcaTodosProductos?: string | undefined;
    idCompaniaNavigation?: BsCompanias | undefined;
    idTipoAplicacionPromocionNavigation?: PrTipoAplicacionPromocion | undefined;
    idTipoProductoNavigation?: PrTipoProducto | undefined;
    prAgenciasHabilitadasPromocion?: PrAgenciasHabilitadasPromocion[] | undefined;
    prLogPromocionesAplicadas?: PrLogPromocionesAplicadas[] | undefined;
    prProductosHabilitadosPromocion?: PrProductosHabilitadosPromocion[] | undefined;
    prPromocionComboEtario?: PrPromocionComboEtario[] | undefined;
    prPromocionCombos?: PrPromocionCombos[] | undefined;
    prPromocionCupones?: PrPromocionCupones[] | undefined;
    prPromocionDescuentoIndividual?: PrPromocionDescuentoIndividual[] | undefined;
    prPromocionGrupoFamiliar?: PrPromocionGrupoFamiliar[] | undefined;
    prPromocionPaisDestino?: PrPromocionPaisDestino[] | undefined;
    prPromocionProducto?: PrPromocionProducto[] | undefined;
    prPromocionRangosEtarios?: PrPromocionRangosEtarios[] | undefined;
    prSellerIdhabilitadosPromocion?: PrSellerIdhabilitadosPromocion[] | undefined;
}

export class PrTipoAplicacionPromocion implements IPrTipoAplicacionPromocion {
    idTipoAplicacionPromocion?: number;
    codigoTipoAplicacionPromocion?: string | undefined;
    descripcionTipoAplicacionPromocion?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    prPromociones?: PrPromociones[] | undefined;

    constructor(data?: IPrTipoAplicacionPromocion) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idTipoAplicacionPromocion = _data["idTipoAplicacionPromocion"];
            this.codigoTipoAplicacionPromocion = _data["codigoTipoAplicacionPromocion"];
            this.descripcionTipoAplicacionPromocion = _data["descripcionTipoAplicacionPromocion"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            if (Array.isArray(_data["prPromociones"])) {
                this.prPromociones = [] as any;
                for (let item of _data["prPromociones"])
                    this.prPromociones!.push(PrPromociones.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PrTipoAplicacionPromocion {
        data = typeof data === 'object' ? data : {};
        let result = new PrTipoAplicacionPromocion();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idTipoAplicacionPromocion"] = this.idTipoAplicacionPromocion;
        data["codigoTipoAplicacionPromocion"] = this.codigoTipoAplicacionPromocion;
        data["descripcionTipoAplicacionPromocion"] = this.descripcionTipoAplicacionPromocion;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        if (Array.isArray(this.prPromociones)) {
            data["prPromociones"] = [];
            for (let item of this.prPromociones)
                data["prPromociones"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPrTipoAplicacionPromocion {
    idTipoAplicacionPromocion?: number;
    codigoTipoAplicacionPromocion?: string | undefined;
    descripcionTipoAplicacionPromocion?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    prPromociones?: PrPromociones[] | undefined;
}

export class PrTipoProducto implements IPrTipoProducto {
    idTipoProducto?: number;
    tipoProducto?: string | undefined;
    denominacionTipoProducto?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    coCotizacionesIndividuosLog?: CoCotizacionesIndividuosLog[] | undefined;
    prPromociones?: PrPromociones[] | undefined;

    constructor(data?: IPrTipoProducto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idTipoProducto = _data["idTipoProducto"];
            this.tipoProducto = _data["tipoProducto"];
            this.denominacionTipoProducto = _data["denominacionTipoProducto"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            if (Array.isArray(_data["coCotizacionesIndividuosLog"])) {
                this.coCotizacionesIndividuosLog = [] as any;
                for (let item of _data["coCotizacionesIndividuosLog"])
                    this.coCotizacionesIndividuosLog!.push(CoCotizacionesIndividuosLog.fromJS(item));
            }
            if (Array.isArray(_data["prPromociones"])) {
                this.prPromociones = [] as any;
                for (let item of _data["prPromociones"])
                    this.prPromociones!.push(PrPromociones.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PrTipoProducto {
        data = typeof data === 'object' ? data : {};
        let result = new PrTipoProducto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idTipoProducto"] = this.idTipoProducto;
        data["tipoProducto"] = this.tipoProducto;
        data["denominacionTipoProducto"] = this.denominacionTipoProducto;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        if (Array.isArray(this.coCotizacionesIndividuosLog)) {
            data["coCotizacionesIndividuosLog"] = [];
            for (let item of this.coCotizacionesIndividuosLog)
                data["coCotizacionesIndividuosLog"].push(item.toJSON());
        }
        if (Array.isArray(this.prPromociones)) {
            data["prPromociones"] = [];
            for (let item of this.prPromociones)
                data["prPromociones"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPrTipoProducto {
    idTipoProducto?: number;
    tipoProducto?: string | undefined;
    denominacionTipoProducto?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    coCotizacionesIndividuosLog?: CoCotizacionesIndividuosLog[] | undefined;
    prPromociones?: PrPromociones[] | undefined;
}

export class PrAgenciasHabilitadasPromocion implements IPrAgenciasHabilitadasPromocion {
    idAgenciaHabilitadaPromocion?: number;
    idAgencia?: number;
    idPromocion?: number;
    fechaVigenciaDesde?: Date;
    fechaVigenciaHasta?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idAgenciaNavigation?: CoAgencias | undefined;
    idPromocionNavigation?: PrPromociones | undefined;

    constructor(data?: IPrAgenciasHabilitadasPromocion) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idAgenciaHabilitadaPromocion = _data["idAgenciaHabilitadaPromocion"];
            this.idAgencia = _data["idAgencia"];
            this.idPromocion = _data["idPromocion"];
            this.fechaVigenciaDesde = _data["fechaVigenciaDesde"] ? new Date(_data["fechaVigenciaDesde"].toString()) : <any>undefined;
            this.fechaVigenciaHasta = _data["fechaVigenciaHasta"] ? new Date(_data["fechaVigenciaHasta"].toString()) : <any>undefined;
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idAgenciaNavigation = _data["idAgenciaNavigation"] ? CoAgencias.fromJS(_data["idAgenciaNavigation"]) : <any>undefined;
            this.idPromocionNavigation = _data["idPromocionNavigation"] ? PrPromociones.fromJS(_data["idPromocionNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PrAgenciasHabilitadasPromocion {
        data = typeof data === 'object' ? data : {};
        let result = new PrAgenciasHabilitadasPromocion();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idAgenciaHabilitadaPromocion"] = this.idAgenciaHabilitadaPromocion;
        data["idAgencia"] = this.idAgencia;
        data["idPromocion"] = this.idPromocion;
        data["fechaVigenciaDesde"] = this.fechaVigenciaDesde ? this.fechaVigenciaDesde.toISOString() : <any>undefined;
        data["fechaVigenciaHasta"] = this.fechaVigenciaHasta ? this.fechaVigenciaHasta.toISOString() : <any>undefined;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idAgenciaNavigation"] = this.idAgenciaNavigation ? this.idAgenciaNavigation.toJSON() : <any>undefined;
        data["idPromocionNavigation"] = this.idPromocionNavigation ? this.idPromocionNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPrAgenciasHabilitadasPromocion {
    idAgenciaHabilitadaPromocion?: number;
    idAgencia?: number;
    idPromocion?: number;
    fechaVigenciaDesde?: Date;
    fechaVigenciaHasta?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idAgenciaNavigation?: CoAgencias | undefined;
    idPromocionNavigation?: PrPromociones | undefined;
}

export class PrProductosHabilitadosPromocion implements IPrProductosHabilitadosPromocion {
    idProductoHabilitadoPromocion?: number;
    idProducto?: number;
    idPromocion?: number;
    fechaVigenciaDesde?: Date;
    fechaVigenciaHasta?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idProductoNavigation?: PrProducto | undefined;
    idPromocionNavigation?: PrPromociones | undefined;

    constructor(data?: IPrProductosHabilitadosPromocion) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idProductoHabilitadoPromocion = _data["idProductoHabilitadoPromocion"];
            this.idProducto = _data["idProducto"];
            this.idPromocion = _data["idPromocion"];
            this.fechaVigenciaDesde = _data["fechaVigenciaDesde"] ? new Date(_data["fechaVigenciaDesde"].toString()) : <any>undefined;
            this.fechaVigenciaHasta = _data["fechaVigenciaHasta"] ? new Date(_data["fechaVigenciaHasta"].toString()) : <any>undefined;
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idProductoNavigation = _data["idProductoNavigation"] ? PrProducto.fromJS(_data["idProductoNavigation"]) : <any>undefined;
            this.idPromocionNavigation = _data["idPromocionNavigation"] ? PrPromociones.fromJS(_data["idPromocionNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PrProductosHabilitadosPromocion {
        data = typeof data === 'object' ? data : {};
        let result = new PrProductosHabilitadosPromocion();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idProductoHabilitadoPromocion"] = this.idProductoHabilitadoPromocion;
        data["idProducto"] = this.idProducto;
        data["idPromocion"] = this.idPromocion;
        data["fechaVigenciaDesde"] = this.fechaVigenciaDesde ? this.fechaVigenciaDesde.toISOString() : <any>undefined;
        data["fechaVigenciaHasta"] = this.fechaVigenciaHasta ? this.fechaVigenciaHasta.toISOString() : <any>undefined;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idProductoNavigation"] = this.idProductoNavigation ? this.idProductoNavigation.toJSON() : <any>undefined;
        data["idPromocionNavigation"] = this.idPromocionNavigation ? this.idPromocionNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPrProductosHabilitadosPromocion {
    idProductoHabilitadoPromocion?: number;
    idProducto?: number;
    idPromocion?: number;
    fechaVigenciaDesde?: Date;
    fechaVigenciaHasta?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idProductoNavigation?: PrProducto | undefined;
    idPromocionNavigation?: PrPromociones | undefined;
}

export class PrPromocionComboEtario implements IPrPromocionComboEtario {
    idComboEtarioPromocion?: number;
    idTipoPromocion?: number;
    idPromocion?: number | undefined;
    paxPagan?: number;
    paxBonificados?: number;
    edadDesdePagan?: number;
    edadHastaPagan?: number | undefined;
    edadDesdeBonificados?: number;
    edadHastaBonificados?: number | undefined;
    bonificacion?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idPromocionNavigation?: PrPromociones | undefined;
    idTipoPromocionNavigation?: PrTiposPromocion | undefined;

    constructor(data?: IPrPromocionComboEtario) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idComboEtarioPromocion = _data["idComboEtarioPromocion"];
            this.idTipoPromocion = _data["idTipoPromocion"];
            this.idPromocion = _data["idPromocion"];
            this.paxPagan = _data["paxPagan"];
            this.paxBonificados = _data["paxBonificados"];
            this.edadDesdePagan = _data["edadDesdePagan"];
            this.edadHastaPagan = _data["edadHastaPagan"];
            this.edadDesdeBonificados = _data["edadDesdeBonificados"];
            this.edadHastaBonificados = _data["edadHastaBonificados"];
            this.bonificacion = _data["bonificacion"];
            this.fechaInicioVigencia = _data["fechaInicioVigencia"] ? new Date(_data["fechaInicioVigencia"].toString()) : <any>undefined;
            this.fechaFinVigencia = _data["fechaFinVigencia"] ? new Date(_data["fechaFinVigencia"].toString()) : <any>undefined;
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idPromocionNavigation = _data["idPromocionNavigation"] ? PrPromociones.fromJS(_data["idPromocionNavigation"]) : <any>undefined;
            this.idTipoPromocionNavigation = _data["idTipoPromocionNavigation"] ? PrTiposPromocion.fromJS(_data["idTipoPromocionNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PrPromocionComboEtario {
        data = typeof data === 'object' ? data : {};
        let result = new PrPromocionComboEtario();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idComboEtarioPromocion"] = this.idComboEtarioPromocion;
        data["idTipoPromocion"] = this.idTipoPromocion;
        data["idPromocion"] = this.idPromocion;
        data["paxPagan"] = this.paxPagan;
        data["paxBonificados"] = this.paxBonificados;
        data["edadDesdePagan"] = this.edadDesdePagan;
        data["edadHastaPagan"] = this.edadHastaPagan;
        data["edadDesdeBonificados"] = this.edadDesdeBonificados;
        data["edadHastaBonificados"] = this.edadHastaBonificados;
        data["bonificacion"] = this.bonificacion;
        data["fechaInicioVigencia"] = this.fechaInicioVigencia ? this.fechaInicioVigencia.toISOString() : <any>undefined;
        data["fechaFinVigencia"] = this.fechaFinVigencia ? this.fechaFinVigencia.toISOString() : <any>undefined;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idPromocionNavigation"] = this.idPromocionNavigation ? this.idPromocionNavigation.toJSON() : <any>undefined;
        data["idTipoPromocionNavigation"] = this.idTipoPromocionNavigation ? this.idTipoPromocionNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPrPromocionComboEtario {
    idComboEtarioPromocion?: number;
    idTipoPromocion?: number;
    idPromocion?: number | undefined;
    paxPagan?: number;
    paxBonificados?: number;
    edadDesdePagan?: number;
    edadHastaPagan?: number | undefined;
    edadDesdeBonificados?: number;
    edadHastaBonificados?: number | undefined;
    bonificacion?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idPromocionNavigation?: PrPromociones | undefined;
    idTipoPromocionNavigation?: PrTiposPromocion | undefined;
}

export class PrTiposPromocion implements IPrTiposPromocion {
    idTipoPromocion?: number;
    idCompania?: number;
    codigoTipoPromocion?: string | undefined;
    descripcionTipoPromocion?: string | undefined;
    sp?: string | undefined;
    tablaDetalle?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    descripcionBase?: string | undefined;
    idCompaniaNavigation?: BsCompanias | undefined;
    coCotizacionesIndividuosLog?: CoCotizacionesIndividuosLog[] | undefined;
    prLogPromocionesAplicadas?: PrLogPromocionesAplicadas[] | undefined;
    prPromocionComboEtario?: PrPromocionComboEtario[] | undefined;
    prPromocionCombos?: PrPromocionCombos[] | undefined;
    prPromocionCupones?: PrPromocionCupones[] | undefined;
    prPromocionDescuentoIndividual?: PrPromocionDescuentoIndividual[] | undefined;
    prPromocionGrupoFamiliar?: PrPromocionGrupoFamiliar[] | undefined;
    prPromocionPaisDestino?: PrPromocionPaisDestino[] | undefined;
    prPromocionProducto?: PrPromocionProducto[] | undefined;
    prPromocionRangosEtarios?: PrPromocionRangosEtarios[] | undefined;

    constructor(data?: IPrTiposPromocion) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idTipoPromocion = _data["idTipoPromocion"];
            this.idCompania = _data["idCompania"];
            this.codigoTipoPromocion = _data["codigoTipoPromocion"];
            this.descripcionTipoPromocion = _data["descripcionTipoPromocion"];
            this.sp = _data["sp"];
            this.tablaDetalle = _data["tablaDetalle"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.descripcionBase = _data["descripcionBase"];
            this.idCompaniaNavigation = _data["idCompaniaNavigation"] ? BsCompanias.fromJS(_data["idCompaniaNavigation"]) : <any>undefined;
            if (Array.isArray(_data["coCotizacionesIndividuosLog"])) {
                this.coCotizacionesIndividuosLog = [] as any;
                for (let item of _data["coCotizacionesIndividuosLog"])
                    this.coCotizacionesIndividuosLog!.push(CoCotizacionesIndividuosLog.fromJS(item));
            }
            if (Array.isArray(_data["prLogPromocionesAplicadas"])) {
                this.prLogPromocionesAplicadas = [] as any;
                for (let item of _data["prLogPromocionesAplicadas"])
                    this.prLogPromocionesAplicadas!.push(PrLogPromocionesAplicadas.fromJS(item));
            }
            if (Array.isArray(_data["prPromocionComboEtario"])) {
                this.prPromocionComboEtario = [] as any;
                for (let item of _data["prPromocionComboEtario"])
                    this.prPromocionComboEtario!.push(PrPromocionComboEtario.fromJS(item));
            }
            if (Array.isArray(_data["prPromocionCombos"])) {
                this.prPromocionCombos = [] as any;
                for (let item of _data["prPromocionCombos"])
                    this.prPromocionCombos!.push(PrPromocionCombos.fromJS(item));
            }
            if (Array.isArray(_data["prPromocionCupones"])) {
                this.prPromocionCupones = [] as any;
                for (let item of _data["prPromocionCupones"])
                    this.prPromocionCupones!.push(PrPromocionCupones.fromJS(item));
            }
            if (Array.isArray(_data["prPromocionDescuentoIndividual"])) {
                this.prPromocionDescuentoIndividual = [] as any;
                for (let item of _data["prPromocionDescuentoIndividual"])
                    this.prPromocionDescuentoIndividual!.push(PrPromocionDescuentoIndividual.fromJS(item));
            }
            if (Array.isArray(_data["prPromocionGrupoFamiliar"])) {
                this.prPromocionGrupoFamiliar = [] as any;
                for (let item of _data["prPromocionGrupoFamiliar"])
                    this.prPromocionGrupoFamiliar!.push(PrPromocionGrupoFamiliar.fromJS(item));
            }
            if (Array.isArray(_data["prPromocionPaisDestino"])) {
                this.prPromocionPaisDestino = [] as any;
                for (let item of _data["prPromocionPaisDestino"])
                    this.prPromocionPaisDestino!.push(PrPromocionPaisDestino.fromJS(item));
            }
            if (Array.isArray(_data["prPromocionProducto"])) {
                this.prPromocionProducto = [] as any;
                for (let item of _data["prPromocionProducto"])
                    this.prPromocionProducto!.push(PrPromocionProducto.fromJS(item));
            }
            if (Array.isArray(_data["prPromocionRangosEtarios"])) {
                this.prPromocionRangosEtarios = [] as any;
                for (let item of _data["prPromocionRangosEtarios"])
                    this.prPromocionRangosEtarios!.push(PrPromocionRangosEtarios.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PrTiposPromocion {
        data = typeof data === 'object' ? data : {};
        let result = new PrTiposPromocion();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idTipoPromocion"] = this.idTipoPromocion;
        data["idCompania"] = this.idCompania;
        data["codigoTipoPromocion"] = this.codigoTipoPromocion;
        data["descripcionTipoPromocion"] = this.descripcionTipoPromocion;
        data["sp"] = this.sp;
        data["tablaDetalle"] = this.tablaDetalle;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["descripcionBase"] = this.descripcionBase;
        data["idCompaniaNavigation"] = this.idCompaniaNavigation ? this.idCompaniaNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.coCotizacionesIndividuosLog)) {
            data["coCotizacionesIndividuosLog"] = [];
            for (let item of this.coCotizacionesIndividuosLog)
                data["coCotizacionesIndividuosLog"].push(item.toJSON());
        }
        if (Array.isArray(this.prLogPromocionesAplicadas)) {
            data["prLogPromocionesAplicadas"] = [];
            for (let item of this.prLogPromocionesAplicadas)
                data["prLogPromocionesAplicadas"].push(item.toJSON());
        }
        if (Array.isArray(this.prPromocionComboEtario)) {
            data["prPromocionComboEtario"] = [];
            for (let item of this.prPromocionComboEtario)
                data["prPromocionComboEtario"].push(item.toJSON());
        }
        if (Array.isArray(this.prPromocionCombos)) {
            data["prPromocionCombos"] = [];
            for (let item of this.prPromocionCombos)
                data["prPromocionCombos"].push(item.toJSON());
        }
        if (Array.isArray(this.prPromocionCupones)) {
            data["prPromocionCupones"] = [];
            for (let item of this.prPromocionCupones)
                data["prPromocionCupones"].push(item.toJSON());
        }
        if (Array.isArray(this.prPromocionDescuentoIndividual)) {
            data["prPromocionDescuentoIndividual"] = [];
            for (let item of this.prPromocionDescuentoIndividual)
                data["prPromocionDescuentoIndividual"].push(item.toJSON());
        }
        if (Array.isArray(this.prPromocionGrupoFamiliar)) {
            data["prPromocionGrupoFamiliar"] = [];
            for (let item of this.prPromocionGrupoFamiliar)
                data["prPromocionGrupoFamiliar"].push(item.toJSON());
        }
        if (Array.isArray(this.prPromocionPaisDestino)) {
            data["prPromocionPaisDestino"] = [];
            for (let item of this.prPromocionPaisDestino)
                data["prPromocionPaisDestino"].push(item.toJSON());
        }
        if (Array.isArray(this.prPromocionProducto)) {
            data["prPromocionProducto"] = [];
            for (let item of this.prPromocionProducto)
                data["prPromocionProducto"].push(item.toJSON());
        }
        if (Array.isArray(this.prPromocionRangosEtarios)) {
            data["prPromocionRangosEtarios"] = [];
            for (let item of this.prPromocionRangosEtarios)
                data["prPromocionRangosEtarios"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPrTiposPromocion {
    idTipoPromocion?: number;
    idCompania?: number;
    codigoTipoPromocion?: string | undefined;
    descripcionTipoPromocion?: string | undefined;
    sp?: string | undefined;
    tablaDetalle?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    descripcionBase?: string | undefined;
    idCompaniaNavigation?: BsCompanias | undefined;
    coCotizacionesIndividuosLog?: CoCotizacionesIndividuosLog[] | undefined;
    prLogPromocionesAplicadas?: PrLogPromocionesAplicadas[] | undefined;
    prPromocionComboEtario?: PrPromocionComboEtario[] | undefined;
    prPromocionCombos?: PrPromocionCombos[] | undefined;
    prPromocionCupones?: PrPromocionCupones[] | undefined;
    prPromocionDescuentoIndividual?: PrPromocionDescuentoIndividual[] | undefined;
    prPromocionGrupoFamiliar?: PrPromocionGrupoFamiliar[] | undefined;
    prPromocionPaisDestino?: PrPromocionPaisDestino[] | undefined;
    prPromocionProducto?: PrPromocionProducto[] | undefined;
    prPromocionRangosEtarios?: PrPromocionRangosEtarios[] | undefined;
}

export class PrPromocionCombos implements IPrPromocionCombos {
    idComboPromocion?: number;
    idTipoPromocion?: number;
    idPromocion?: number;
    paxViajan?: number;
    paxPagan?: number;
    marcaBonifMenorValor?: string | undefined;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: string | undefined;
    idPromocionNavigation?: PrPromociones | undefined;
    idTipoPromocionNavigation?: PrTiposPromocion | undefined;

    constructor(data?: IPrPromocionCombos) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idComboPromocion = _data["idComboPromocion"];
            this.idTipoPromocion = _data["idTipoPromocion"];
            this.idPromocion = _data["idPromocion"];
            this.paxViajan = _data["paxViajan"];
            this.paxPagan = _data["paxPagan"];
            this.marcaBonifMenorValor = _data["marcaBonifMenorValor"];
            this.fechaInicioVigencia = _data["fechaInicioVigencia"] ? new Date(_data["fechaInicioVigencia"].toString()) : <any>undefined;
            this.fechaFinVigencia = _data["fechaFinVigencia"] ? new Date(_data["fechaFinVigencia"].toString()) : <any>undefined;
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"];
            this.idPromocionNavigation = _data["idPromocionNavigation"] ? PrPromociones.fromJS(_data["idPromocionNavigation"]) : <any>undefined;
            this.idTipoPromocionNavigation = _data["idTipoPromocionNavigation"] ? PrTiposPromocion.fromJS(_data["idTipoPromocionNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PrPromocionCombos {
        data = typeof data === 'object' ? data : {};
        let result = new PrPromocionCombos();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idComboPromocion"] = this.idComboPromocion;
        data["idTipoPromocion"] = this.idTipoPromocion;
        data["idPromocion"] = this.idPromocion;
        data["paxViajan"] = this.paxViajan;
        data["paxPagan"] = this.paxPagan;
        data["marcaBonifMenorValor"] = this.marcaBonifMenorValor;
        data["fechaInicioVigencia"] = this.fechaInicioVigencia ? this.fechaInicioVigencia.toISOString() : <any>undefined;
        data["fechaFinVigencia"] = this.fechaFinVigencia ? this.fechaFinVigencia.toISOString() : <any>undefined;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg;
        data["idPromocionNavigation"] = this.idPromocionNavigation ? this.idPromocionNavigation.toJSON() : <any>undefined;
        data["idTipoPromocionNavigation"] = this.idTipoPromocionNavigation ? this.idTipoPromocionNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPrPromocionCombos {
    idComboPromocion?: number;
    idTipoPromocion?: number;
    idPromocion?: number;
    paxViajan?: number;
    paxPagan?: number;
    marcaBonifMenorValor?: string | undefined;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: string | undefined;
    idPromocionNavigation?: PrPromociones | undefined;
    idTipoPromocionNavigation?: PrTiposPromocion | undefined;
}

export class PrPromocionDescuentoIndividual implements IPrPromocionDescuentoIndividual {
    idDescuentoIndividualPromocion?: number;
    idTipoPromocion?: number;
    idPromocion?: number;
    cantidadBonificados?: number;
    bonificacion?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idPromocionNavigation?: PrPromociones | undefined;
    idTipoPromocionNavigation?: PrTiposPromocion | undefined;

    constructor(data?: IPrPromocionDescuentoIndividual) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idDescuentoIndividualPromocion = _data["idDescuentoIndividualPromocion"];
            this.idTipoPromocion = _data["idTipoPromocion"];
            this.idPromocion = _data["idPromocion"];
            this.cantidadBonificados = _data["cantidadBonificados"];
            this.bonificacion = _data["bonificacion"];
            this.fechaInicioVigencia = _data["fechaInicioVigencia"] ? new Date(_data["fechaInicioVigencia"].toString()) : <any>undefined;
            this.fechaFinVigencia = _data["fechaFinVigencia"] ? new Date(_data["fechaFinVigencia"].toString()) : <any>undefined;
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idPromocionNavigation = _data["idPromocionNavigation"] ? PrPromociones.fromJS(_data["idPromocionNavigation"]) : <any>undefined;
            this.idTipoPromocionNavigation = _data["idTipoPromocionNavigation"] ? PrTiposPromocion.fromJS(_data["idTipoPromocionNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PrPromocionDescuentoIndividual {
        data = typeof data === 'object' ? data : {};
        let result = new PrPromocionDescuentoIndividual();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idDescuentoIndividualPromocion"] = this.idDescuentoIndividualPromocion;
        data["idTipoPromocion"] = this.idTipoPromocion;
        data["idPromocion"] = this.idPromocion;
        data["cantidadBonificados"] = this.cantidadBonificados;
        data["bonificacion"] = this.bonificacion;
        data["fechaInicioVigencia"] = this.fechaInicioVigencia ? this.fechaInicioVigencia.toISOString() : <any>undefined;
        data["fechaFinVigencia"] = this.fechaFinVigencia ? this.fechaFinVigencia.toISOString() : <any>undefined;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idPromocionNavigation"] = this.idPromocionNavigation ? this.idPromocionNavigation.toJSON() : <any>undefined;
        data["idTipoPromocionNavigation"] = this.idTipoPromocionNavigation ? this.idTipoPromocionNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPrPromocionDescuentoIndividual {
    idDescuentoIndividualPromocion?: number;
    idTipoPromocion?: number;
    idPromocion?: number;
    cantidadBonificados?: number;
    bonificacion?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idPromocionNavigation?: PrPromociones | undefined;
    idTipoPromocionNavigation?: PrTiposPromocion | undefined;
}

export class PrPromocionGrupoFamiliar implements IPrPromocionGrupoFamiliar {
    idPromocionGrupoFamiliar?: number;
    idTipoPromocion?: number;
    idPromocion?: number;
    paxGrupo?: number;
    paxPromo?: number;
    idRangoEtareo?: number;
    bonificacion?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idPromocionNavigation?: PrPromociones | undefined;
    idRangoEtareoNavigation?: PrRangosEdadesPrecios | undefined;
    idTipoPromocionNavigation?: PrTiposPromocion | undefined;

    constructor(data?: IPrPromocionGrupoFamiliar) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idPromocionGrupoFamiliar = _data["idPromocionGrupoFamiliar"];
            this.idTipoPromocion = _data["idTipoPromocion"];
            this.idPromocion = _data["idPromocion"];
            this.paxGrupo = _data["paxGrupo"];
            this.paxPromo = _data["paxPromo"];
            this.idRangoEtareo = _data["idRangoEtareo"];
            this.bonificacion = _data["bonificacion"];
            this.fechaInicioVigencia = _data["fechaInicioVigencia"] ? new Date(_data["fechaInicioVigencia"].toString()) : <any>undefined;
            this.fechaFinVigencia = _data["fechaFinVigencia"] ? new Date(_data["fechaFinVigencia"].toString()) : <any>undefined;
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idPromocionNavigation = _data["idPromocionNavigation"] ? PrPromociones.fromJS(_data["idPromocionNavigation"]) : <any>undefined;
            this.idRangoEtareoNavigation = _data["idRangoEtareoNavigation"] ? PrRangosEdadesPrecios.fromJS(_data["idRangoEtareoNavigation"]) : <any>undefined;
            this.idTipoPromocionNavigation = _data["idTipoPromocionNavigation"] ? PrTiposPromocion.fromJS(_data["idTipoPromocionNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PrPromocionGrupoFamiliar {
        data = typeof data === 'object' ? data : {};
        let result = new PrPromocionGrupoFamiliar();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idPromocionGrupoFamiliar"] = this.idPromocionGrupoFamiliar;
        data["idTipoPromocion"] = this.idTipoPromocion;
        data["idPromocion"] = this.idPromocion;
        data["paxGrupo"] = this.paxGrupo;
        data["paxPromo"] = this.paxPromo;
        data["idRangoEtareo"] = this.idRangoEtareo;
        data["bonificacion"] = this.bonificacion;
        data["fechaInicioVigencia"] = this.fechaInicioVigencia ? this.fechaInicioVigencia.toISOString() : <any>undefined;
        data["fechaFinVigencia"] = this.fechaFinVigencia ? this.fechaFinVigencia.toISOString() : <any>undefined;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idPromocionNavigation"] = this.idPromocionNavigation ? this.idPromocionNavigation.toJSON() : <any>undefined;
        data["idRangoEtareoNavigation"] = this.idRangoEtareoNavigation ? this.idRangoEtareoNavigation.toJSON() : <any>undefined;
        data["idTipoPromocionNavigation"] = this.idTipoPromocionNavigation ? this.idTipoPromocionNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPrPromocionGrupoFamiliar {
    idPromocionGrupoFamiliar?: number;
    idTipoPromocion?: number;
    idPromocion?: number;
    paxGrupo?: number;
    paxPromo?: number;
    idRangoEtareo?: number;
    bonificacion?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idPromocionNavigation?: PrPromociones | undefined;
    idRangoEtareoNavigation?: PrRangosEdadesPrecios | undefined;
    idTipoPromocionNavigation?: PrTiposPromocion | undefined;
}

export class PrRangosEdadesPrecios implements IPrRangosEdadesPrecios {
    idRangoEtareo?: number;
    idCompania?: number | undefined;
    edadDesde?: number | undefined;
    edadHasta?: number | undefined;
    inicioVigencia?: Date | undefined;
    finVigencia?: Date | undefined;
    idGrupoRangosEdadesPrecios?: number | undefined;
    prPromocionGrupoFamiliar?: PrPromocionGrupoFamiliar[] | undefined;
    prRelacionMultiproducto?: PrRelacionMultiproducto[] | undefined;

    constructor(data?: IPrRangosEdadesPrecios) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idRangoEtareo = _data["idRangoEtareo"];
            this.idCompania = _data["idCompania"];
            this.edadDesde = _data["edadDesde"];
            this.edadHasta = _data["edadHasta"];
            this.inicioVigencia = _data["inicioVigencia"] ? new Date(_data["inicioVigencia"].toString()) : <any>undefined;
            this.finVigencia = _data["finVigencia"] ? new Date(_data["finVigencia"].toString()) : <any>undefined;
            this.idGrupoRangosEdadesPrecios = _data["idGrupoRangosEdadesPrecios"];
            if (Array.isArray(_data["prPromocionGrupoFamiliar"])) {
                this.prPromocionGrupoFamiliar = [] as any;
                for (let item of _data["prPromocionGrupoFamiliar"])
                    this.prPromocionGrupoFamiliar!.push(PrPromocionGrupoFamiliar.fromJS(item));
            }
            if (Array.isArray(_data["prRelacionMultiproducto"])) {
                this.prRelacionMultiproducto = [] as any;
                for (let item of _data["prRelacionMultiproducto"])
                    this.prRelacionMultiproducto!.push(PrRelacionMultiproducto.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PrRangosEdadesPrecios {
        data = typeof data === 'object' ? data : {};
        let result = new PrRangosEdadesPrecios();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idRangoEtareo"] = this.idRangoEtareo;
        data["idCompania"] = this.idCompania;
        data["edadDesde"] = this.edadDesde;
        data["edadHasta"] = this.edadHasta;
        data["inicioVigencia"] = this.inicioVigencia ? this.inicioVigencia.toISOString() : <any>undefined;
        data["finVigencia"] = this.finVigencia ? this.finVigencia.toISOString() : <any>undefined;
        data["idGrupoRangosEdadesPrecios"] = this.idGrupoRangosEdadesPrecios;
        if (Array.isArray(this.prPromocionGrupoFamiliar)) {
            data["prPromocionGrupoFamiliar"] = [];
            for (let item of this.prPromocionGrupoFamiliar)
                data["prPromocionGrupoFamiliar"].push(item.toJSON());
        }
        if (Array.isArray(this.prRelacionMultiproducto)) {
            data["prRelacionMultiproducto"] = [];
            for (let item of this.prRelacionMultiproducto)
                data["prRelacionMultiproducto"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPrRangosEdadesPrecios {
    idRangoEtareo?: number;
    idCompania?: number | undefined;
    edadDesde?: number | undefined;
    edadHasta?: number | undefined;
    inicioVigencia?: Date | undefined;
    finVigencia?: Date | undefined;
    idGrupoRangosEdadesPrecios?: number | undefined;
    prPromocionGrupoFamiliar?: PrPromocionGrupoFamiliar[] | undefined;
    prRelacionMultiproducto?: PrRelacionMultiproducto[] | undefined;
}

export class PrRelacionMultiproducto implements IPrRelacionMultiproducto {
    idRelacionMultiproducto?: number;
    idProductoPadre?: number;
    idProductoHijo?: number;
    idRangoEtareo?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    edadDesde?: number | undefined;
    edadHasta?: number | undefined;
    idProductoHijoNavigation?: PrProducto | undefined;
    idProductoPadreNavigation?: PrProducto | undefined;
    idRangoEtareoNavigation?: PrRangosEdadesPrecios | undefined;

    constructor(data?: IPrRelacionMultiproducto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idRelacionMultiproducto = _data["idRelacionMultiproducto"];
            this.idProductoPadre = _data["idProductoPadre"];
            this.idProductoHijo = _data["idProductoHijo"];
            this.idRangoEtareo = _data["idRangoEtareo"];
            this.fechaInicioVigencia = _data["fechaInicioVigencia"] ? new Date(_data["fechaInicioVigencia"].toString()) : <any>undefined;
            this.fechaFinVigencia = _data["fechaFinVigencia"] ? new Date(_data["fechaFinVigencia"].toString()) : <any>undefined;
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.edadDesde = _data["edadDesde"];
            this.edadHasta = _data["edadHasta"];
            this.idProductoHijoNavigation = _data["idProductoHijoNavigation"] ? PrProducto.fromJS(_data["idProductoHijoNavigation"]) : <any>undefined;
            this.idProductoPadreNavigation = _data["idProductoPadreNavigation"] ? PrProducto.fromJS(_data["idProductoPadreNavigation"]) : <any>undefined;
            this.idRangoEtareoNavigation = _data["idRangoEtareoNavigation"] ? PrRangosEdadesPrecios.fromJS(_data["idRangoEtareoNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PrRelacionMultiproducto {
        data = typeof data === 'object' ? data : {};
        let result = new PrRelacionMultiproducto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idRelacionMultiproducto"] = this.idRelacionMultiproducto;
        data["idProductoPadre"] = this.idProductoPadre;
        data["idProductoHijo"] = this.idProductoHijo;
        data["idRangoEtareo"] = this.idRangoEtareo;
        data["fechaInicioVigencia"] = this.fechaInicioVigencia ? this.fechaInicioVigencia.toISOString() : <any>undefined;
        data["fechaFinVigencia"] = this.fechaFinVigencia ? this.fechaFinVigencia.toISOString() : <any>undefined;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["edadDesde"] = this.edadDesde;
        data["edadHasta"] = this.edadHasta;
        data["idProductoHijoNavigation"] = this.idProductoHijoNavigation ? this.idProductoHijoNavigation.toJSON() : <any>undefined;
        data["idProductoPadreNavigation"] = this.idProductoPadreNavigation ? this.idProductoPadreNavigation.toJSON() : <any>undefined;
        data["idRangoEtareoNavigation"] = this.idRangoEtareoNavigation ? this.idRangoEtareoNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPrRelacionMultiproducto {
    idRelacionMultiproducto?: number;
    idProductoPadre?: number;
    idProductoHijo?: number;
    idRangoEtareo?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    edadDesde?: number | undefined;
    edadHasta?: number | undefined;
    idProductoHijoNavigation?: PrProducto | undefined;
    idProductoPadreNavigation?: PrProducto | undefined;
    idRangoEtareoNavigation?: PrRangosEdadesPrecios | undefined;
}

export class PrPromocionPaisDestino implements IPrPromocionPaisDestino {
    idPaisDestinoPromocion?: number;
    idTipoPromocion?: number;
    idPromocion?: number;
    idPais?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    bonificacion?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idPaisNavigation?: BsPaises | undefined;
    idPromocionNavigation?: PrPromociones | undefined;
    idTipoPromocionNavigation?: PrTiposPromocion | undefined;

    constructor(data?: IPrPromocionPaisDestino) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idPaisDestinoPromocion = _data["idPaisDestinoPromocion"];
            this.idTipoPromocion = _data["idTipoPromocion"];
            this.idPromocion = _data["idPromocion"];
            this.idPais = _data["idPais"];
            this.fechaInicioVigencia = _data["fechaInicioVigencia"] ? new Date(_data["fechaInicioVigencia"].toString()) : <any>undefined;
            this.fechaFinVigencia = _data["fechaFinVigencia"] ? new Date(_data["fechaFinVigencia"].toString()) : <any>undefined;
            this.bonificacion = _data["bonificacion"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idPaisNavigation = _data["idPaisNavigation"] ? BsPaises.fromJS(_data["idPaisNavigation"]) : <any>undefined;
            this.idPromocionNavigation = _data["idPromocionNavigation"] ? PrPromociones.fromJS(_data["idPromocionNavigation"]) : <any>undefined;
            this.idTipoPromocionNavigation = _data["idTipoPromocionNavigation"] ? PrTiposPromocion.fromJS(_data["idTipoPromocionNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PrPromocionPaisDestino {
        data = typeof data === 'object' ? data : {};
        let result = new PrPromocionPaisDestino();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idPaisDestinoPromocion"] = this.idPaisDestinoPromocion;
        data["idTipoPromocion"] = this.idTipoPromocion;
        data["idPromocion"] = this.idPromocion;
        data["idPais"] = this.idPais;
        data["fechaInicioVigencia"] = this.fechaInicioVigencia ? this.fechaInicioVigencia.toISOString() : <any>undefined;
        data["fechaFinVigencia"] = this.fechaFinVigencia ? this.fechaFinVigencia.toISOString() : <any>undefined;
        data["bonificacion"] = this.bonificacion;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idPaisNavigation"] = this.idPaisNavigation ? this.idPaisNavigation.toJSON() : <any>undefined;
        data["idPromocionNavigation"] = this.idPromocionNavigation ? this.idPromocionNavigation.toJSON() : <any>undefined;
        data["idTipoPromocionNavigation"] = this.idTipoPromocionNavigation ? this.idTipoPromocionNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPrPromocionPaisDestino {
    idPaisDestinoPromocion?: number;
    idTipoPromocion?: number;
    idPromocion?: number;
    idPais?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    bonificacion?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idPaisNavigation?: BsPaises | undefined;
    idPromocionNavigation?: PrPromociones | undefined;
    idTipoPromocionNavigation?: PrTiposPromocion | undefined;
}

export class PrPromocionProducto implements IPrPromocionProducto {
    idProductoPromocion?: number;
    idTipoPromocion?: number;
    idPromocion?: number | undefined;
    idProducto?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    diasViajeDesde?: number | undefined;
    diasViajeHasta?: number | undefined;
    bonificacion?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idProductoNavigation?: PrProducto | undefined;
    idPromocionNavigation?: PrPromociones | undefined;
    idTipoPromocionNavigation?: PrTiposPromocion | undefined;

    constructor(data?: IPrPromocionProducto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idProductoPromocion = _data["idProductoPromocion"];
            this.idTipoPromocion = _data["idTipoPromocion"];
            this.idPromocion = _data["idPromocion"];
            this.idProducto = _data["idProducto"];
            this.fechaInicioVigencia = _data["fechaInicioVigencia"] ? new Date(_data["fechaInicioVigencia"].toString()) : <any>undefined;
            this.fechaFinVigencia = _data["fechaFinVigencia"] ? new Date(_data["fechaFinVigencia"].toString()) : <any>undefined;
            this.diasViajeDesde = _data["diasViajeDesde"];
            this.diasViajeHasta = _data["diasViajeHasta"];
            this.bonificacion = _data["bonificacion"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idProductoNavigation = _data["idProductoNavigation"] ? PrProducto.fromJS(_data["idProductoNavigation"]) : <any>undefined;
            this.idPromocionNavigation = _data["idPromocionNavigation"] ? PrPromociones.fromJS(_data["idPromocionNavigation"]) : <any>undefined;
            this.idTipoPromocionNavigation = _data["idTipoPromocionNavigation"] ? PrTiposPromocion.fromJS(_data["idTipoPromocionNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PrPromocionProducto {
        data = typeof data === 'object' ? data : {};
        let result = new PrPromocionProducto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idProductoPromocion"] = this.idProductoPromocion;
        data["idTipoPromocion"] = this.idTipoPromocion;
        data["idPromocion"] = this.idPromocion;
        data["idProducto"] = this.idProducto;
        data["fechaInicioVigencia"] = this.fechaInicioVigencia ? this.fechaInicioVigencia.toISOString() : <any>undefined;
        data["fechaFinVigencia"] = this.fechaFinVigencia ? this.fechaFinVigencia.toISOString() : <any>undefined;
        data["diasViajeDesde"] = this.diasViajeDesde;
        data["diasViajeHasta"] = this.diasViajeHasta;
        data["bonificacion"] = this.bonificacion;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idProductoNavigation"] = this.idProductoNavigation ? this.idProductoNavigation.toJSON() : <any>undefined;
        data["idPromocionNavigation"] = this.idPromocionNavigation ? this.idPromocionNavigation.toJSON() : <any>undefined;
        data["idTipoPromocionNavigation"] = this.idTipoPromocionNavigation ? this.idTipoPromocionNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPrPromocionProducto {
    idProductoPromocion?: number;
    idTipoPromocion?: number;
    idPromocion?: number | undefined;
    idProducto?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    diasViajeDesde?: number | undefined;
    diasViajeHasta?: number | undefined;
    bonificacion?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idProductoNavigation?: PrProducto | undefined;
    idPromocionNavigation?: PrPromociones | undefined;
    idTipoPromocionNavigation?: PrTiposPromocion | undefined;
}

export class PrPromocionRangosEtarios implements IPrPromocionRangosEtarios {
    idRangosEtariosPromocion?: number;
    idTipoPromocion?: number;
    idPromocion?: number;
    edadDesde?: number;
    edadHasta?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    bonificacion?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idPromocionNavigation?: PrPromociones | undefined;
    idTipoPromocionNavigation?: PrTiposPromocion | undefined;

    constructor(data?: IPrPromocionRangosEtarios) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idRangosEtariosPromocion = _data["idRangosEtariosPromocion"];
            this.idTipoPromocion = _data["idTipoPromocion"];
            this.idPromocion = _data["idPromocion"];
            this.edadDesde = _data["edadDesde"];
            this.edadHasta = _data["edadHasta"];
            this.fechaInicioVigencia = _data["fechaInicioVigencia"] ? new Date(_data["fechaInicioVigencia"].toString()) : <any>undefined;
            this.fechaFinVigencia = _data["fechaFinVigencia"] ? new Date(_data["fechaFinVigencia"].toString()) : <any>undefined;
            this.bonificacion = _data["bonificacion"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idPromocionNavigation = _data["idPromocionNavigation"] ? PrPromociones.fromJS(_data["idPromocionNavigation"]) : <any>undefined;
            this.idTipoPromocionNavigation = _data["idTipoPromocionNavigation"] ? PrTiposPromocion.fromJS(_data["idTipoPromocionNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PrPromocionRangosEtarios {
        data = typeof data === 'object' ? data : {};
        let result = new PrPromocionRangosEtarios();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idRangosEtariosPromocion"] = this.idRangosEtariosPromocion;
        data["idTipoPromocion"] = this.idTipoPromocion;
        data["idPromocion"] = this.idPromocion;
        data["edadDesde"] = this.edadDesde;
        data["edadHasta"] = this.edadHasta;
        data["fechaInicioVigencia"] = this.fechaInicioVigencia ? this.fechaInicioVigencia.toISOString() : <any>undefined;
        data["fechaFinVigencia"] = this.fechaFinVigencia ? this.fechaFinVigencia.toISOString() : <any>undefined;
        data["bonificacion"] = this.bonificacion;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idPromocionNavigation"] = this.idPromocionNavigation ? this.idPromocionNavigation.toJSON() : <any>undefined;
        data["idTipoPromocionNavigation"] = this.idTipoPromocionNavigation ? this.idTipoPromocionNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPrPromocionRangosEtarios {
    idRangosEtariosPromocion?: number;
    idTipoPromocion?: number;
    idPromocion?: number;
    edadDesde?: number;
    edadHasta?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    bonificacion?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idPromocionNavigation?: PrPromociones | undefined;
    idTipoPromocionNavigation?: PrTiposPromocion | undefined;
}

export class PrSellerIdhabilitadosPromocion implements IPrSellerIdhabilitadosPromocion {
    idSellerIdhabilitadoPromocion?: number;
    idSellerIdcanalesVentas?: number;
    idPromocion?: number;
    fechaVigenciaDesde?: Date;
    fechaVigenciaHasta?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idPromocionNavigation?: PrPromociones | undefined;
    idSellerIdcanalesVentasNavigation?: CoSellerIdcanalesVentas | undefined;

    constructor(data?: IPrSellerIdhabilitadosPromocion) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idSellerIdhabilitadoPromocion = _data["idSellerIdhabilitadoPromocion"];
            this.idSellerIdcanalesVentas = _data["idSellerIdcanalesVentas"];
            this.idPromocion = _data["idPromocion"];
            this.fechaVigenciaDesde = _data["fechaVigenciaDesde"] ? new Date(_data["fechaVigenciaDesde"].toString()) : <any>undefined;
            this.fechaVigenciaHasta = _data["fechaVigenciaHasta"] ? new Date(_data["fechaVigenciaHasta"].toString()) : <any>undefined;
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idPromocionNavigation = _data["idPromocionNavigation"] ? PrPromociones.fromJS(_data["idPromocionNavigation"]) : <any>undefined;
            this.idSellerIdcanalesVentasNavigation = _data["idSellerIdcanalesVentasNavigation"] ? CoSellerIdcanalesVentas.fromJS(_data["idSellerIdcanalesVentasNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PrSellerIdhabilitadosPromocion {
        data = typeof data === 'object' ? data : {};
        let result = new PrSellerIdhabilitadosPromocion();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idSellerIdhabilitadoPromocion"] = this.idSellerIdhabilitadoPromocion;
        data["idSellerIdcanalesVentas"] = this.idSellerIdcanalesVentas;
        data["idPromocion"] = this.idPromocion;
        data["fechaVigenciaDesde"] = this.fechaVigenciaDesde ? this.fechaVigenciaDesde.toISOString() : <any>undefined;
        data["fechaVigenciaHasta"] = this.fechaVigenciaHasta ? this.fechaVigenciaHasta.toISOString() : <any>undefined;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idPromocionNavigation"] = this.idPromocionNavigation ? this.idPromocionNavigation.toJSON() : <any>undefined;
        data["idSellerIdcanalesVentasNavigation"] = this.idSellerIdcanalesVentasNavigation ? this.idSellerIdcanalesVentasNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPrSellerIdhabilitadosPromocion {
    idSellerIdhabilitadoPromocion?: number;
    idSellerIdcanalesVentas?: number;
    idPromocion?: number;
    fechaVigenciaDesde?: Date;
    fechaVigenciaHasta?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idPromocionNavigation?: PrPromociones | undefined;
    idSellerIdcanalesVentasNavigation?: CoSellerIdcanalesVentas | undefined;
}

export class TbPessoaPoliticaExposta1 implements ITbPessoaPoliticaExposta1 {
    idPpe?: number;
    idBeneficiarioPoliza?: number;
    dvPpe?: string | undefined;
    idParentescoPpe?: number | undefined;
    dsUsuaIncl?: string | undefined;
    dhInclusao?: Date;
    dsUsuaAlte?: string | undefined;
    dhAlteracao?: Date;
    idBeneficiarioPolizaNavigation?: PoBeneficiariosPoliza | undefined;
    idParentescoPpeNavigation?: TbParentescoPpe1 | undefined;

    constructor(data?: ITbPessoaPoliticaExposta1) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idPpe = _data["idPpe"];
            this.idBeneficiarioPoliza = _data["idBeneficiarioPoliza"];
            this.dvPpe = _data["dvPpe"];
            this.idParentescoPpe = _data["idParentescoPpe"];
            this.dsUsuaIncl = _data["dsUsuaIncl"];
            this.dhInclusao = _data["dhInclusao"] ? new Date(_data["dhInclusao"].toString()) : <any>undefined;
            this.dsUsuaAlte = _data["dsUsuaAlte"];
            this.dhAlteracao = _data["dhAlteracao"] ? new Date(_data["dhAlteracao"].toString()) : <any>undefined;
            this.idBeneficiarioPolizaNavigation = _data["idBeneficiarioPolizaNavigation"] ? PoBeneficiariosPoliza.fromJS(_data["idBeneficiarioPolizaNavigation"]) : <any>undefined;
            this.idParentescoPpeNavigation = _data["idParentescoPpeNavigation"] ? TbParentescoPpe1.fromJS(_data["idParentescoPpeNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): TbPessoaPoliticaExposta1 {
        data = typeof data === 'object' ? data : {};
        let result = new TbPessoaPoliticaExposta1();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idPpe"] = this.idPpe;
        data["idBeneficiarioPoliza"] = this.idBeneficiarioPoliza;
        data["dvPpe"] = this.dvPpe;
        data["idParentescoPpe"] = this.idParentescoPpe;
        data["dsUsuaIncl"] = this.dsUsuaIncl;
        data["dhInclusao"] = this.dhInclusao ? this.dhInclusao.toISOString() : <any>undefined;
        data["dsUsuaAlte"] = this.dsUsuaAlte;
        data["dhAlteracao"] = this.dhAlteracao ? this.dhAlteracao.toISOString() : <any>undefined;
        data["idBeneficiarioPolizaNavigation"] = this.idBeneficiarioPolizaNavigation ? this.idBeneficiarioPolizaNavigation.toJSON() : <any>undefined;
        data["idParentescoPpeNavigation"] = this.idParentescoPpeNavigation ? this.idParentescoPpeNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface ITbPessoaPoliticaExposta1 {
    idPpe?: number;
    idBeneficiarioPoliza?: number;
    dvPpe?: string | undefined;
    idParentescoPpe?: number | undefined;
    dsUsuaIncl?: string | undefined;
    dhInclusao?: Date;
    dsUsuaAlte?: string | undefined;
    dhAlteracao?: Date;
    idBeneficiarioPolizaNavigation?: PoBeneficiariosPoliza | undefined;
    idParentescoPpeNavigation?: TbParentescoPpe1 | undefined;
}

export class TbParentescoPpe1 implements ITbParentescoPpe1 {
    idParentescoPpe?: number;
    nmParentescoPpe?: string | undefined;
    dsUsuaIncl?: string | undefined;
    dhInclusao?: Date;
    dsUsuaAlte?: string | undefined;
    dhAlteracao?: Date;
    tbPessoaPoliticaExposta1?: TbPessoaPoliticaExposta1[] | undefined;

    constructor(data?: ITbParentescoPpe1) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idParentescoPpe = _data["idParentescoPpe"];
            this.nmParentescoPpe = _data["nmParentescoPpe"];
            this.dsUsuaIncl = _data["dsUsuaIncl"];
            this.dhInclusao = _data["dhInclusao"] ? new Date(_data["dhInclusao"].toString()) : <any>undefined;
            this.dsUsuaAlte = _data["dsUsuaAlte"];
            this.dhAlteracao = _data["dhAlteracao"] ? new Date(_data["dhAlteracao"].toString()) : <any>undefined;
            if (Array.isArray(_data["tbPessoaPoliticaExposta1"])) {
                this.tbPessoaPoliticaExposta1 = [] as any;
                for (let item of _data["tbPessoaPoliticaExposta1"])
                    this.tbPessoaPoliticaExposta1!.push(TbPessoaPoliticaExposta1.fromJS(item));
            }
        }
    }

    static fromJS(data: any): TbParentescoPpe1 {
        data = typeof data === 'object' ? data : {};
        let result = new TbParentescoPpe1();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idParentescoPpe"] = this.idParentescoPpe;
        data["nmParentescoPpe"] = this.nmParentescoPpe;
        data["dsUsuaIncl"] = this.dsUsuaIncl;
        data["dhInclusao"] = this.dhInclusao ? this.dhInclusao.toISOString() : <any>undefined;
        data["dsUsuaAlte"] = this.dsUsuaAlte;
        data["dhAlteracao"] = this.dhAlteracao ? this.dhAlteracao.toISOString() : <any>undefined;
        if (Array.isArray(this.tbPessoaPoliticaExposta1)) {
            data["tbPessoaPoliticaExposta1"] = [];
            for (let item of this.tbPessoaPoliticaExposta1)
                data["tbPessoaPoliticaExposta1"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ITbParentescoPpe1 {
    idParentescoPpe?: number;
    nmParentescoPpe?: string | undefined;
    dsUsuaIncl?: string | undefined;
    dhInclusao?: Date;
    dsUsuaAlte?: string | undefined;
    dhAlteracao?: Date;
    tbPessoaPoliticaExposta1?: TbPessoaPoliticaExposta1[] | undefined;
}

export class PoRelacionParentescoWs implements IPoRelacionParentescoWs {
    idParentescoWs?: number;
    idParentesco?: number;
    codigoParentescoWs?: number;
    idParentescoNavigation?: PoParentesco | undefined;

    constructor(data?: IPoRelacionParentescoWs) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idParentescoWs = _data["idParentescoWs"];
            this.idParentesco = _data["idParentesco"];
            this.codigoParentescoWs = _data["codigoParentescoWs"];
            this.idParentescoNavigation = _data["idParentescoNavigation"] ? PoParentesco.fromJS(_data["idParentescoNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PoRelacionParentescoWs {
        data = typeof data === 'object' ? data : {};
        let result = new PoRelacionParentescoWs();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idParentescoWs"] = this.idParentescoWs;
        data["idParentesco"] = this.idParentesco;
        data["codigoParentescoWs"] = this.codigoParentescoWs;
        data["idParentescoNavigation"] = this.idParentescoNavigation ? this.idParentescoNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPoRelacionParentescoWs {
    idParentescoWs?: number;
    idParentesco?: number;
    codigoParentescoWs?: number;
    idParentescoNavigation?: PoParentesco | undefined;
}

export class CoEmpresas implements ICoEmpresas {
    idEmpresa?: number;
    idPersonaJuridica?: number;
    fechaBaja?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    userId?: number | undefined;
    idSupervisor?: number | undefined;
    idCompania?: number | undefined;
    idGrupoAfinidad?: number | undefined;
    idPersonaJuridicaNavigation?: PePersonaJuridica | undefined;
    coClientes?: CoClientes[] | undefined;

    constructor(data?: ICoEmpresas) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idEmpresa = _data["idEmpresa"];
            this.idPersonaJuridica = _data["idPersonaJuridica"];
            this.fechaBaja = _data["fechaBaja"] ? new Date(_data["fechaBaja"].toString()) : <any>undefined;
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.userId = _data["userId"];
            this.idSupervisor = _data["idSupervisor"];
            this.idCompania = _data["idCompania"];
            this.idGrupoAfinidad = _data["idGrupoAfinidad"];
            this.idPersonaJuridicaNavigation = _data["idPersonaJuridicaNavigation"] ? PePersonaJuridica.fromJS(_data["idPersonaJuridicaNavigation"]) : <any>undefined;
            if (Array.isArray(_data["coClientes"])) {
                this.coClientes = [] as any;
                for (let item of _data["coClientes"])
                    this.coClientes!.push(CoClientes.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CoEmpresas {
        data = typeof data === 'object' ? data : {};
        let result = new CoEmpresas();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idEmpresa"] = this.idEmpresa;
        data["idPersonaJuridica"] = this.idPersonaJuridica;
        data["fechaBaja"] = this.fechaBaja ? this.fechaBaja.toISOString() : <any>undefined;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["userId"] = this.userId;
        data["idSupervisor"] = this.idSupervisor;
        data["idCompania"] = this.idCompania;
        data["idGrupoAfinidad"] = this.idGrupoAfinidad;
        data["idPersonaJuridicaNavigation"] = this.idPersonaJuridicaNavigation ? this.idPersonaJuridicaNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.coClientes)) {
            data["coClientes"] = [];
            for (let item of this.coClientes)
                data["coClientes"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICoEmpresas {
    idEmpresa?: number;
    idPersonaJuridica?: number;
    fechaBaja?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    userId?: number | undefined;
    idSupervisor?: number | undefined;
    idCompania?: number | undefined;
    idGrupoAfinidad?: number | undefined;
    idPersonaJuridicaNavigation?: PePersonaJuridica | undefined;
    coClientes?: CoClientes[] | undefined;
}

export class CoNominasEmpresas implements ICoNominasEmpresas {
    idNomina?: number;
    idCliente?: number;
    vigenciaDesde?: Date;
    vigenciaHasta?: Date | undefined;
    idPersona?: number;
    idProducto?: number;
    idClienteNavigation?: CoClientes | undefined;
    idPersonaNavigation?: PePersonaFisica | undefined;
    idProductoNavigation?: PrProducto | undefined;

    constructor(data?: ICoNominasEmpresas) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idNomina = _data["idNomina"];
            this.idCliente = _data["idCliente"];
            this.vigenciaDesde = _data["vigenciaDesde"] ? new Date(_data["vigenciaDesde"].toString()) : <any>undefined;
            this.vigenciaHasta = _data["vigenciaHasta"] ? new Date(_data["vigenciaHasta"].toString()) : <any>undefined;
            this.idPersona = _data["idPersona"];
            this.idProducto = _data["idProducto"];
            this.idClienteNavigation = _data["idClienteNavigation"] ? CoClientes.fromJS(_data["idClienteNavigation"]) : <any>undefined;
            this.idPersonaNavigation = _data["idPersonaNavigation"] ? PePersonaFisica.fromJS(_data["idPersonaNavigation"]) : <any>undefined;
            this.idProductoNavigation = _data["idProductoNavigation"] ? PrProducto.fromJS(_data["idProductoNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): CoNominasEmpresas {
        data = typeof data === 'object' ? data : {};
        let result = new CoNominasEmpresas();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idNomina"] = this.idNomina;
        data["idCliente"] = this.idCliente;
        data["vigenciaDesde"] = this.vigenciaDesde ? this.vigenciaDesde.toISOString() : <any>undefined;
        data["vigenciaHasta"] = this.vigenciaHasta ? this.vigenciaHasta.toISOString() : <any>undefined;
        data["idPersona"] = this.idPersona;
        data["idProducto"] = this.idProducto;
        data["idClienteNavigation"] = this.idClienteNavigation ? this.idClienteNavigation.toJSON() : <any>undefined;
        data["idPersonaNavigation"] = this.idPersonaNavigation ? this.idPersonaNavigation.toJSON() : <any>undefined;
        data["idProductoNavigation"] = this.idProductoNavigation ? this.idProductoNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface ICoNominasEmpresas {
    idNomina?: number;
    idCliente?: number;
    vigenciaDesde?: Date;
    vigenciaHasta?: Date | undefined;
    idPersona?: number;
    idProducto?: number;
    idClienteNavigation?: CoClientes | undefined;
    idPersonaNavigation?: PePersonaFisica | undefined;
    idProductoNavigation?: PrProducto | undefined;
}

export class CoEjecutivos implements ICoEjecutivos {
    idEjecutivo?: number;
    idPersonaFisica?: number;
    numeroLegajo?: string | undefined;
    fechaBaja?: Date | undefined;
    idCompania?: number;
    userId?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idCompaniaNavigation?: BsCompanias | undefined;
    idPersonaFisicaNavigation?: PePersonaFisica | undefined;
    coAgenciasEjecutivo?: CoAgenciasEjecutivo[] | undefined;

    constructor(data?: ICoEjecutivos) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idEjecutivo = _data["idEjecutivo"];
            this.idPersonaFisica = _data["idPersonaFisica"];
            this.numeroLegajo = _data["numeroLegajo"];
            this.fechaBaja = _data["fechaBaja"] ? new Date(_data["fechaBaja"].toString()) : <any>undefined;
            this.idCompania = _data["idCompania"];
            this.userId = _data["userId"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idCompaniaNavigation = _data["idCompaniaNavigation"] ? BsCompanias.fromJS(_data["idCompaniaNavigation"]) : <any>undefined;
            this.idPersonaFisicaNavigation = _data["idPersonaFisicaNavigation"] ? PePersonaFisica.fromJS(_data["idPersonaFisicaNavigation"]) : <any>undefined;
            if (Array.isArray(_data["coAgenciasEjecutivo"])) {
                this.coAgenciasEjecutivo = [] as any;
                for (let item of _data["coAgenciasEjecutivo"])
                    this.coAgenciasEjecutivo!.push(CoAgenciasEjecutivo.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CoEjecutivos {
        data = typeof data === 'object' ? data : {};
        let result = new CoEjecutivos();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idEjecutivo"] = this.idEjecutivo;
        data["idPersonaFisica"] = this.idPersonaFisica;
        data["numeroLegajo"] = this.numeroLegajo;
        data["fechaBaja"] = this.fechaBaja ? this.fechaBaja.toISOString() : <any>undefined;
        data["idCompania"] = this.idCompania;
        data["userId"] = this.userId;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idCompaniaNavigation"] = this.idCompaniaNavigation ? this.idCompaniaNavigation.toJSON() : <any>undefined;
        data["idPersonaFisicaNavigation"] = this.idPersonaFisicaNavigation ? this.idPersonaFisicaNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.coAgenciasEjecutivo)) {
            data["coAgenciasEjecutivo"] = [];
            for (let item of this.coAgenciasEjecutivo)
                data["coAgenciasEjecutivo"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICoEjecutivos {
    idEjecutivo?: number;
    idPersonaFisica?: number;
    numeroLegajo?: string | undefined;
    fechaBaja?: Date | undefined;
    idCompania?: number;
    userId?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idCompaniaNavigation?: BsCompanias | undefined;
    idPersonaFisicaNavigation?: PePersonaFisica | undefined;
    coAgenciasEjecutivo?: CoAgenciasEjecutivo[] | undefined;
}

export class CoAgenciasEjecutivo implements ICoAgenciasEjecutivo {
    idAgenciaEjecutivo?: number;
    idEjecutivo?: number;
    idAgencia?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idAgenciaNavigation?: CoAgencias | undefined;
    idEjecutivoNavigation?: CoEjecutivos | undefined;

    constructor(data?: ICoAgenciasEjecutivo) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idAgenciaEjecutivo = _data["idAgenciaEjecutivo"];
            this.idEjecutivo = _data["idEjecutivo"];
            this.idAgencia = _data["idAgencia"];
            this.fechaInicioVigencia = _data["fechaInicioVigencia"] ? new Date(_data["fechaInicioVigencia"].toString()) : <any>undefined;
            this.fechaFinVigencia = _data["fechaFinVigencia"] ? new Date(_data["fechaFinVigencia"].toString()) : <any>undefined;
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idAgenciaNavigation = _data["idAgenciaNavigation"] ? CoAgencias.fromJS(_data["idAgenciaNavigation"]) : <any>undefined;
            this.idEjecutivoNavigation = _data["idEjecutivoNavigation"] ? CoEjecutivos.fromJS(_data["idEjecutivoNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): CoAgenciasEjecutivo {
        data = typeof data === 'object' ? data : {};
        let result = new CoAgenciasEjecutivo();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idAgenciaEjecutivo"] = this.idAgenciaEjecutivo;
        data["idEjecutivo"] = this.idEjecutivo;
        data["idAgencia"] = this.idAgencia;
        data["fechaInicioVigencia"] = this.fechaInicioVigencia ? this.fechaInicioVigencia.toISOString() : <any>undefined;
        data["fechaFinVigencia"] = this.fechaFinVigencia ? this.fechaFinVigencia.toISOString() : <any>undefined;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idAgenciaNavigation"] = this.idAgenciaNavigation ? this.idAgenciaNavigation.toJSON() : <any>undefined;
        data["idEjecutivoNavigation"] = this.idEjecutivoNavigation ? this.idEjecutivoNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface ICoAgenciasEjecutivo {
    idAgenciaEjecutivo?: number;
    idEjecutivo?: number;
    idAgencia?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idAgenciaNavigation?: CoAgencias | undefined;
    idEjecutivoNavigation?: CoEjecutivos | undefined;
}

export class PeAlteracaoPessoaFisica implements IPeAlteracaoPessoaFisica {
    idAlteracao?: number;
    idPessoa?: number | undefined;
    idAgencia?: number | undefined;
    dataCadastro?: Date | undefined;
    idAgenciaNavigation?: CoAgencias | undefined;
    idPessoaNavigation?: PePersonaFisica | undefined;

    constructor(data?: IPeAlteracaoPessoaFisica) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idAlteracao = _data["idAlteracao"];
            this.idPessoa = _data["idPessoa"];
            this.idAgencia = _data["idAgencia"];
            this.dataCadastro = _data["dataCadastro"] ? new Date(_data["dataCadastro"].toString()) : <any>undefined;
            this.idAgenciaNavigation = _data["idAgenciaNavigation"] ? CoAgencias.fromJS(_data["idAgenciaNavigation"]) : <any>undefined;
            this.idPessoaNavigation = _data["idPessoaNavigation"] ? PePersonaFisica.fromJS(_data["idPessoaNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PeAlteracaoPessoaFisica {
        data = typeof data === 'object' ? data : {};
        let result = new PeAlteracaoPessoaFisica();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idAlteracao"] = this.idAlteracao;
        data["idPessoa"] = this.idPessoa;
        data["idAgencia"] = this.idAgencia;
        data["dataCadastro"] = this.dataCadastro ? this.dataCadastro.toISOString() : <any>undefined;
        data["idAgenciaNavigation"] = this.idAgenciaNavigation ? this.idAgenciaNavigation.toJSON() : <any>undefined;
        data["idPessoaNavigation"] = this.idPessoaNavigation ? this.idPessoaNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPeAlteracaoPessoaFisica {
    idAlteracao?: number;
    idPessoa?: number | undefined;
    idAgencia?: number | undefined;
    dataCadastro?: Date | undefined;
    idAgenciaNavigation?: CoAgencias | undefined;
    idPessoaNavigation?: PePersonaFisica | undefined;
}

export class PeCanalesPersona implements IPeCanalesPersona {
    idCanalesPersona?: number;
    idPersona?: number;
    idTipoCanal?: number;
    detalleCanal?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    detalleCanal2?: string | undefined;
    idPersonaNavigation?: PePersonaFisica | undefined;
    idTipoCanalNavigation?: PeTiposCanal | undefined;

    constructor(data?: IPeCanalesPersona) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idCanalesPersona = _data["idCanalesPersona"];
            this.idPersona = _data["idPersona"];
            this.idTipoCanal = _data["idTipoCanal"];
            this.detalleCanal = _data["detalleCanal"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.detalleCanal2 = _data["detalleCanal2"];
            this.idPersonaNavigation = _data["idPersonaNavigation"] ? PePersonaFisica.fromJS(_data["idPersonaNavigation"]) : <any>undefined;
            this.idTipoCanalNavigation = _data["idTipoCanalNavigation"] ? PeTiposCanal.fromJS(_data["idTipoCanalNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PeCanalesPersona {
        data = typeof data === 'object' ? data : {};
        let result = new PeCanalesPersona();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idCanalesPersona"] = this.idCanalesPersona;
        data["idPersona"] = this.idPersona;
        data["idTipoCanal"] = this.idTipoCanal;
        data["detalleCanal"] = this.detalleCanal;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["detalleCanal2"] = this.detalleCanal2;
        data["idPersonaNavigation"] = this.idPersonaNavigation ? this.idPersonaNavigation.toJSON() : <any>undefined;
        data["idTipoCanalNavigation"] = this.idTipoCanalNavigation ? this.idTipoCanalNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPeCanalesPersona {
    idCanalesPersona?: number;
    idPersona?: number;
    idTipoCanal?: number;
    detalleCanal?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    detalleCanal2?: string | undefined;
    idPersonaNavigation?: PePersonaFisica | undefined;
    idTipoCanalNavigation?: PeTiposCanal | undefined;
}

export class PeTiposCanal implements IPeTiposCanal {
    idTipoCanal?: number;
    codigoTipoCanal?: string | undefined;
    descripcionTipoCanal?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    peCanalesPersona?: PeCanalesPersona[] | undefined;
    peCanalesPersonaJuridica?: PeCanalesPersonaJuridica[] | undefined;

    constructor(data?: IPeTiposCanal) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idTipoCanal = _data["idTipoCanal"];
            this.codigoTipoCanal = _data["codigoTipoCanal"];
            this.descripcionTipoCanal = _data["descripcionTipoCanal"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            if (Array.isArray(_data["peCanalesPersona"])) {
                this.peCanalesPersona = [] as any;
                for (let item of _data["peCanalesPersona"])
                    this.peCanalesPersona!.push(PeCanalesPersona.fromJS(item));
            }
            if (Array.isArray(_data["peCanalesPersonaJuridica"])) {
                this.peCanalesPersonaJuridica = [] as any;
                for (let item of _data["peCanalesPersonaJuridica"])
                    this.peCanalesPersonaJuridica!.push(PeCanalesPersonaJuridica.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PeTiposCanal {
        data = typeof data === 'object' ? data : {};
        let result = new PeTiposCanal();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idTipoCanal"] = this.idTipoCanal;
        data["codigoTipoCanal"] = this.codigoTipoCanal;
        data["descripcionTipoCanal"] = this.descripcionTipoCanal;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        if (Array.isArray(this.peCanalesPersona)) {
            data["peCanalesPersona"] = [];
            for (let item of this.peCanalesPersona)
                data["peCanalesPersona"].push(item.toJSON());
        }
        if (Array.isArray(this.peCanalesPersonaJuridica)) {
            data["peCanalesPersonaJuridica"] = [];
            for (let item of this.peCanalesPersonaJuridica)
                data["peCanalesPersonaJuridica"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPeTiposCanal {
    idTipoCanal?: number;
    codigoTipoCanal?: string | undefined;
    descripcionTipoCanal?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    peCanalesPersona?: PeCanalesPersona[] | undefined;
    peCanalesPersonaJuridica?: PeCanalesPersonaJuridica[] | undefined;
}

export class PeCanalesPersonaJuridica implements IPeCanalesPersonaJuridica {
    idCanalesPersonaJuridica?: number;
    idPersonaJuridica?: number;
    idTipoCanal?: number;
    detalleCanal?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idPersonaJuridicaNavigation?: PePersonaJuridica | undefined;
    idTipoCanalNavigation?: PeTiposCanal | undefined;

    constructor(data?: IPeCanalesPersonaJuridica) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idCanalesPersonaJuridica = _data["idCanalesPersonaJuridica"];
            this.idPersonaJuridica = _data["idPersonaJuridica"];
            this.idTipoCanal = _data["idTipoCanal"];
            this.detalleCanal = _data["detalleCanal"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idPersonaJuridicaNavigation = _data["idPersonaJuridicaNavigation"] ? PePersonaJuridica.fromJS(_data["idPersonaJuridicaNavigation"]) : <any>undefined;
            this.idTipoCanalNavigation = _data["idTipoCanalNavigation"] ? PeTiposCanal.fromJS(_data["idTipoCanalNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PeCanalesPersonaJuridica {
        data = typeof data === 'object' ? data : {};
        let result = new PeCanalesPersonaJuridica();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idCanalesPersonaJuridica"] = this.idCanalesPersonaJuridica;
        data["idPersonaJuridica"] = this.idPersonaJuridica;
        data["idTipoCanal"] = this.idTipoCanal;
        data["detalleCanal"] = this.detalleCanal;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idPersonaJuridicaNavigation"] = this.idPersonaJuridicaNavigation ? this.idPersonaJuridicaNavigation.toJSON() : <any>undefined;
        data["idTipoCanalNavigation"] = this.idTipoCanalNavigation ? this.idTipoCanalNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPeCanalesPersonaJuridica {
    idCanalesPersonaJuridica?: number;
    idPersonaJuridica?: number;
    idTipoCanal?: number;
    detalleCanal?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idPersonaJuridicaNavigation?: PePersonaJuridica | undefined;
    idTipoCanalNavigation?: PeTiposCanal | undefined;
}

export class PeDocumentosPersonaFisica implements IPeDocumentosPersonaFisica {
    idDocumentoPersonaFisica?: number;
    idPersona?: number;
    idTipoDocumento?: number;
    numero?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idPersonaNavigation?: PePersonaFisica | undefined;
    idTipoDocumentoNavigation?: PeTiposDocumentos | undefined;

    constructor(data?: IPeDocumentosPersonaFisica) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idDocumentoPersonaFisica = _data["idDocumentoPersonaFisica"];
            this.idPersona = _data["idPersona"];
            this.idTipoDocumento = _data["idTipoDocumento"];
            this.numero = _data["numero"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idPersonaNavigation = _data["idPersonaNavigation"] ? PePersonaFisica.fromJS(_data["idPersonaNavigation"]) : <any>undefined;
            this.idTipoDocumentoNavigation = _data["idTipoDocumentoNavigation"] ? PeTiposDocumentos.fromJS(_data["idTipoDocumentoNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PeDocumentosPersonaFisica {
        data = typeof data === 'object' ? data : {};
        let result = new PeDocumentosPersonaFisica();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idDocumentoPersonaFisica"] = this.idDocumentoPersonaFisica;
        data["idPersona"] = this.idPersona;
        data["idTipoDocumento"] = this.idTipoDocumento;
        data["numero"] = this.numero;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idPersonaNavigation"] = this.idPersonaNavigation ? this.idPersonaNavigation.toJSON() : <any>undefined;
        data["idTipoDocumentoNavigation"] = this.idTipoDocumentoNavigation ? this.idTipoDocumentoNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPeDocumentosPersonaFisica {
    idDocumentoPersonaFisica?: number;
    idPersona?: number;
    idTipoDocumento?: number;
    numero?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idPersonaNavigation?: PePersonaFisica | undefined;
    idTipoDocumentoNavigation?: PeTiposDocumentos | undefined;
}

export class PeTiposDocumentos implements IPeTiposDocumentos {
    idTipoDocumento?: number;
    codigoTipoDocumento?: string | undefined;
    descripcionTipoDocumento?: string | undefined;
    aplicaPersona?: string | undefined;
    aplicaEmision?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    peDocumentosPersonaFisica?: PeDocumentosPersonaFisica[] | undefined;
    peDocumentosPersonaJuridica?: PeDocumentosPersonaJuridica[] | undefined;

    constructor(data?: IPeTiposDocumentos) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idTipoDocumento = _data["idTipoDocumento"];
            this.codigoTipoDocumento = _data["codigoTipoDocumento"];
            this.descripcionTipoDocumento = _data["descripcionTipoDocumento"];
            this.aplicaPersona = _data["aplicaPersona"];
            this.aplicaEmision = _data["aplicaEmision"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            if (Array.isArray(_data["peDocumentosPersonaFisica"])) {
                this.peDocumentosPersonaFisica = [] as any;
                for (let item of _data["peDocumentosPersonaFisica"])
                    this.peDocumentosPersonaFisica!.push(PeDocumentosPersonaFisica.fromJS(item));
            }
            if (Array.isArray(_data["peDocumentosPersonaJuridica"])) {
                this.peDocumentosPersonaJuridica = [] as any;
                for (let item of _data["peDocumentosPersonaJuridica"])
                    this.peDocumentosPersonaJuridica!.push(PeDocumentosPersonaJuridica.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PeTiposDocumentos {
        data = typeof data === 'object' ? data : {};
        let result = new PeTiposDocumentos();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idTipoDocumento"] = this.idTipoDocumento;
        data["codigoTipoDocumento"] = this.codigoTipoDocumento;
        data["descripcionTipoDocumento"] = this.descripcionTipoDocumento;
        data["aplicaPersona"] = this.aplicaPersona;
        data["aplicaEmision"] = this.aplicaEmision;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        if (Array.isArray(this.peDocumentosPersonaFisica)) {
            data["peDocumentosPersonaFisica"] = [];
            for (let item of this.peDocumentosPersonaFisica)
                data["peDocumentosPersonaFisica"].push(item.toJSON());
        }
        if (Array.isArray(this.peDocumentosPersonaJuridica)) {
            data["peDocumentosPersonaJuridica"] = [];
            for (let item of this.peDocumentosPersonaJuridica)
                data["peDocumentosPersonaJuridica"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPeTiposDocumentos {
    idTipoDocumento?: number;
    codigoTipoDocumento?: string | undefined;
    descripcionTipoDocumento?: string | undefined;
    aplicaPersona?: string | undefined;
    aplicaEmision?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    peDocumentosPersonaFisica?: PeDocumentosPersonaFisica[] | undefined;
    peDocumentosPersonaJuridica?: PeDocumentosPersonaJuridica[] | undefined;
}

export class PeDocumentosPersonaJuridica implements IPeDocumentosPersonaJuridica {
    idDocumentoPersonaJuridica?: number;
    idPersona?: number;
    idTipoDocumento?: number;
    numero?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idTipoDocumentoNavigation?: PeTiposDocumentos | undefined;

    constructor(data?: IPeDocumentosPersonaJuridica) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idDocumentoPersonaJuridica = _data["idDocumentoPersonaJuridica"];
            this.idPersona = _data["idPersona"];
            this.idTipoDocumento = _data["idTipoDocumento"];
            this.numero = _data["numero"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idTipoDocumentoNavigation = _data["idTipoDocumentoNavigation"] ? PeTiposDocumentos.fromJS(_data["idTipoDocumentoNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PeDocumentosPersonaJuridica {
        data = typeof data === 'object' ? data : {};
        let result = new PeDocumentosPersonaJuridica();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idDocumentoPersonaJuridica"] = this.idDocumentoPersonaJuridica;
        data["idPersona"] = this.idPersona;
        data["idTipoDocumento"] = this.idTipoDocumento;
        data["numero"] = this.numero;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idTipoDocumentoNavigation"] = this.idTipoDocumentoNavigation ? this.idTipoDocumentoNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPeDocumentosPersonaJuridica {
    idDocumentoPersonaJuridica?: number;
    idPersona?: number;
    idTipoDocumento?: number;
    numero?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idTipoDocumentoNavigation?: PeTiposDocumentos | undefined;
}

export class MiCorresponsalesBup implements IMiCorresponsalesBup {
    idCorresponsal?: number;
    codigo?: string | undefined;
    descrip?: string | undefined;
    idEmpresa?: number;
    idPais?: number;
    diferenciaHoraria?: number;
    telefono?: string | undefined;
    email?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idPersonaJuridica?: number | undefined;
    idEmpresaNavigation?: MiEmpresasBup | undefined;
    idPaisNavigation?: BsPaises | undefined;

    constructor(data?: IMiCorresponsalesBup) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idCorresponsal = _data["idCorresponsal"];
            this.codigo = _data["codigo"];
            this.descrip = _data["descrip"];
            this.idEmpresa = _data["idEmpresa"];
            this.idPais = _data["idPais"];
            this.diferenciaHoraria = _data["diferenciaHoraria"];
            this.telefono = _data["telefono"];
            this.email = _data["email"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idPersonaJuridica = _data["idPersonaJuridica"];
            this.idEmpresaNavigation = _data["idEmpresaNavigation"] ? MiEmpresasBup.fromJS(_data["idEmpresaNavigation"]) : <any>undefined;
            this.idPaisNavigation = _data["idPaisNavigation"] ? BsPaises.fromJS(_data["idPaisNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): MiCorresponsalesBup {
        data = typeof data === 'object' ? data : {};
        let result = new MiCorresponsalesBup();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idCorresponsal"] = this.idCorresponsal;
        data["codigo"] = this.codigo;
        data["descrip"] = this.descrip;
        data["idEmpresa"] = this.idEmpresa;
        data["idPais"] = this.idPais;
        data["diferenciaHoraria"] = this.diferenciaHoraria;
        data["telefono"] = this.telefono;
        data["email"] = this.email;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idPersonaJuridica"] = this.idPersonaJuridica;
        data["idEmpresaNavigation"] = this.idEmpresaNavigation ? this.idEmpresaNavigation.toJSON() : <any>undefined;
        data["idPaisNavigation"] = this.idPaisNavigation ? this.idPaisNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IMiCorresponsalesBup {
    idCorresponsal?: number;
    codigo?: string | undefined;
    descrip?: string | undefined;
    idEmpresa?: number;
    idPais?: number;
    diferenciaHoraria?: number;
    telefono?: string | undefined;
    email?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idPersonaJuridica?: number | undefined;
    idEmpresaNavigation?: MiEmpresasBup | undefined;
    idPaisNavigation?: BsPaises | undefined;
}

export class MiEmpresasBup implements IMiEmpresasBup {
    idEmpresa?: number;
    codigo?: string | undefined;
    descrip?: string | undefined;
    contacto?: string | undefined;
    telefono?: string | undefined;
    cuit?: string | undefined;
    orden?: number;
    miCorresponsalesBup?: MiCorresponsalesBup[] | undefined;

    constructor(data?: IMiEmpresasBup) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idEmpresa = _data["idEmpresa"];
            this.codigo = _data["codigo"];
            this.descrip = _data["descrip"];
            this.contacto = _data["contacto"];
            this.telefono = _data["telefono"];
            this.cuit = _data["cuit"];
            this.orden = _data["orden"];
            if (Array.isArray(_data["miCorresponsalesBup"])) {
                this.miCorresponsalesBup = [] as any;
                for (let item of _data["miCorresponsalesBup"])
                    this.miCorresponsalesBup!.push(MiCorresponsalesBup.fromJS(item));
            }
        }
    }

    static fromJS(data: any): MiEmpresasBup {
        data = typeof data === 'object' ? data : {};
        let result = new MiEmpresasBup();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idEmpresa"] = this.idEmpresa;
        data["codigo"] = this.codigo;
        data["descrip"] = this.descrip;
        data["contacto"] = this.contacto;
        data["telefono"] = this.telefono;
        data["cuit"] = this.cuit;
        data["orden"] = this.orden;
        if (Array.isArray(this.miCorresponsalesBup)) {
            data["miCorresponsalesBup"] = [];
            for (let item of this.miCorresponsalesBup)
                data["miCorresponsalesBup"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IMiEmpresasBup {
    idEmpresa?: number;
    codigo?: string | undefined;
    descrip?: string | undefined;
    contacto?: string | undefined;
    telefono?: string | undefined;
    cuit?: string | undefined;
    orden?: number;
    miCorresponsalesBup?: MiCorresponsalesBup[] | undefined;
}

export class WcfDestinyShowCase implements IWcfDestinyShowCase {
    destinyShowCaseId?: number;
    countryId?: number;
    productId?: number;
    validFrom?: Date | undefined;
    validUntil?: Date | undefined;
    createdByUserId?: string | undefined;
    createdOnDate?: Date | undefined;
    lastModifiedByUserId?: string | undefined;
    lastModifiedOnDate?: Date | undefined;
    country?: BsPaises | undefined;
    product?: PrProducto | undefined;

    constructor(data?: IWcfDestinyShowCase) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.destinyShowCaseId = _data["destinyShowCaseId"];
            this.countryId = _data["countryId"];
            this.productId = _data["productId"];
            this.validFrom = _data["validFrom"] ? new Date(_data["validFrom"].toString()) : <any>undefined;
            this.validUntil = _data["validUntil"] ? new Date(_data["validUntil"].toString()) : <any>undefined;
            this.createdByUserId = _data["createdByUserId"];
            this.createdOnDate = _data["createdOnDate"] ? new Date(_data["createdOnDate"].toString()) : <any>undefined;
            this.lastModifiedByUserId = _data["lastModifiedByUserId"];
            this.lastModifiedOnDate = _data["lastModifiedOnDate"] ? new Date(_data["lastModifiedOnDate"].toString()) : <any>undefined;
            this.country = _data["country"] ? BsPaises.fromJS(_data["country"]) : <any>undefined;
            this.product = _data["product"] ? PrProducto.fromJS(_data["product"]) : <any>undefined;
        }
    }

    static fromJS(data: any): WcfDestinyShowCase {
        data = typeof data === 'object' ? data : {};
        let result = new WcfDestinyShowCase();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["destinyShowCaseId"] = this.destinyShowCaseId;
        data["countryId"] = this.countryId;
        data["productId"] = this.productId;
        data["validFrom"] = this.validFrom ? this.validFrom.toISOString() : <any>undefined;
        data["validUntil"] = this.validUntil ? this.validUntil.toISOString() : <any>undefined;
        data["createdByUserId"] = this.createdByUserId;
        data["createdOnDate"] = this.createdOnDate ? this.createdOnDate.toISOString() : <any>undefined;
        data["lastModifiedByUserId"] = this.lastModifiedByUserId;
        data["lastModifiedOnDate"] = this.lastModifiedOnDate ? this.lastModifiedOnDate.toISOString() : <any>undefined;
        data["country"] = this.country ? this.country.toJSON() : <any>undefined;
        data["product"] = this.product ? this.product.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IWcfDestinyShowCase {
    destinyShowCaseId?: number;
    countryId?: number;
    productId?: number;
    validFrom?: Date | undefined;
    validUntil?: Date | undefined;
    createdByUserId?: string | undefined;
    createdOnDate?: Date | undefined;
    lastModifiedByUserId?: string | undefined;
    lastModifiedOnDate?: Date | undefined;
    country?: BsPaises | undefined;
    product?: PrProducto | undefined;
}

export class PrTipoViaje implements IPrTipoViaje {
    idTipoViaje?: number;
    codigoTipoViaje?: string | undefined;
    descripcionTipoViaje?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    coCotizacionesIndividuosLog?: CoCotizacionesIndividuosLog[] | undefined;
    prProducto?: PrProducto[] | undefined;

    constructor(data?: IPrTipoViaje) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idTipoViaje = _data["idTipoViaje"];
            this.codigoTipoViaje = _data["codigoTipoViaje"];
            this.descripcionTipoViaje = _data["descripcionTipoViaje"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            if (Array.isArray(_data["coCotizacionesIndividuosLog"])) {
                this.coCotizacionesIndividuosLog = [] as any;
                for (let item of _data["coCotizacionesIndividuosLog"])
                    this.coCotizacionesIndividuosLog!.push(CoCotizacionesIndividuosLog.fromJS(item));
            }
            if (Array.isArray(_data["prProducto"])) {
                this.prProducto = [] as any;
                for (let item of _data["prProducto"])
                    this.prProducto!.push(PrProducto.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PrTipoViaje {
        data = typeof data === 'object' ? data : {};
        let result = new PrTipoViaje();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idTipoViaje"] = this.idTipoViaje;
        data["codigoTipoViaje"] = this.codigoTipoViaje;
        data["descripcionTipoViaje"] = this.descripcionTipoViaje;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        if (Array.isArray(this.coCotizacionesIndividuosLog)) {
            data["coCotizacionesIndividuosLog"] = [];
            for (let item of this.coCotizacionesIndividuosLog)
                data["coCotizacionesIndividuosLog"].push(item.toJSON());
        }
        if (Array.isArray(this.prProducto)) {
            data["prProducto"] = [];
            for (let item of this.prProducto)
                data["prProducto"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPrTipoViaje {
    idTipoViaje?: number;
    codigoTipoViaje?: string | undefined;
    descripcionTipoViaje?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    coCotizacionesIndividuosLog?: CoCotizacionesIndividuosLog[] | undefined;
    prProducto?: PrProducto[] | undefined;
}

export class PrPaquetesProductos implements IPrPaquetesProductos {
    idPaquetesProductos?: number;
    idProducto?: number;
    cantidadDias?: number;
    idMoneda?: number;
    importe?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idMonedaNavigation?: BsMonedas | undefined;
    idProductoNavigation?: PrProducto | undefined;

    constructor(data?: IPrPaquetesProductos) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idPaquetesProductos = _data["idPaquetesProductos"];
            this.idProducto = _data["idProducto"];
            this.cantidadDias = _data["cantidadDias"];
            this.idMoneda = _data["idMoneda"];
            this.importe = _data["importe"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idMonedaNavigation = _data["idMonedaNavigation"] ? BsMonedas.fromJS(_data["idMonedaNavigation"]) : <any>undefined;
            this.idProductoNavigation = _data["idProductoNavigation"] ? PrProducto.fromJS(_data["idProductoNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PrPaquetesProductos {
        data = typeof data === 'object' ? data : {};
        let result = new PrPaquetesProductos();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idPaquetesProductos"] = this.idPaquetesProductos;
        data["idProducto"] = this.idProducto;
        data["cantidadDias"] = this.cantidadDias;
        data["idMoneda"] = this.idMoneda;
        data["importe"] = this.importe;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idMonedaNavigation"] = this.idMonedaNavigation ? this.idMonedaNavigation.toJSON() : <any>undefined;
        data["idProductoNavigation"] = this.idProductoNavigation ? this.idProductoNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPrPaquetesProductos {
    idPaquetesProductos?: number;
    idProducto?: number;
    cantidadDias?: number;
    idMoneda?: number;
    importe?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idMonedaNavigation?: BsMonedas | undefined;
    idProductoNavigation?: PrProducto | undefined;
}

export class PrTipoCobertura implements IPrTipoCobertura {
    idTipoCobertura?: number;
    tipoCobertura?: string | undefined;
    descripcionCobertura?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    prProducto?: PrProducto[] | undefined;

    constructor(data?: IPrTipoCobertura) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idTipoCobertura = _data["idTipoCobertura"];
            this.tipoCobertura = _data["tipoCobertura"];
            this.descripcionCobertura = _data["descripcionCobertura"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            if (Array.isArray(_data["prProducto"])) {
                this.prProducto = [] as any;
                for (let item of _data["prProducto"])
                    this.prProducto!.push(PrProducto.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PrTipoCobertura {
        data = typeof data === 'object' ? data : {};
        let result = new PrTipoCobertura();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idTipoCobertura"] = this.idTipoCobertura;
        data["tipoCobertura"] = this.tipoCobertura;
        data["descripcionCobertura"] = this.descripcionCobertura;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        if (Array.isArray(this.prProducto)) {
            data["prProducto"] = [];
            for (let item of this.prProducto)
                data["prProducto"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPrTipoCobertura {
    idTipoCobertura?: number;
    tipoCobertura?: string | undefined;
    descripcionCobertura?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    prProducto?: PrProducto[] | undefined;
}

export class PrProductoServicios implements IPrProductoServicios {
    idProductoServicio?: number;
    idProducto?: number;
    idServicio?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    idUnidadmedida?: number | undefined;
    idMoneda?: number | undefined;
    tope?: number | undefined;
    idProductoServicioCompartido?: number | undefined;
    detalle?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    importeSugerido?: number | undefined;
    fecBaja?: Date | undefined;
    detalleIngles?: string | undefined;
    caracteristicaPrincipal?: number | undefined;
    idProductoNavigation?: PrProducto | undefined;
    idServicioNavigation?: PrServicios | undefined;
    idUnidadmedidaNavigation?: PrUnidadesMedida | undefined;

    constructor(data?: IPrProductoServicios) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idProductoServicio = _data["idProductoServicio"];
            this.idProducto = _data["idProducto"];
            this.idServicio = _data["idServicio"];
            this.fechaInicioVigencia = _data["fechaInicioVigencia"] ? new Date(_data["fechaInicioVigencia"].toString()) : <any>undefined;
            this.fechaFinVigencia = _data["fechaFinVigencia"] ? new Date(_data["fechaFinVigencia"].toString()) : <any>undefined;
            this.idUnidadmedida = _data["idUnidadmedida"];
            this.idMoneda = _data["idMoneda"];
            this.tope = _data["tope"];
            this.idProductoServicioCompartido = _data["idProductoServicioCompartido"];
            this.detalle = _data["detalle"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.importeSugerido = _data["importeSugerido"];
            this.fecBaja = _data["fecBaja"] ? new Date(_data["fecBaja"].toString()) : <any>undefined;
            this.detalleIngles = _data["detalleIngles"];
            this.caracteristicaPrincipal = _data["caracteristicaPrincipal"];
            this.idProductoNavigation = _data["idProductoNavigation"] ? PrProducto.fromJS(_data["idProductoNavigation"]) : <any>undefined;
            this.idServicioNavigation = _data["idServicioNavigation"] ? PrServicios.fromJS(_data["idServicioNavigation"]) : <any>undefined;
            this.idUnidadmedidaNavigation = _data["idUnidadmedidaNavigation"] ? PrUnidadesMedida.fromJS(_data["idUnidadmedidaNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PrProductoServicios {
        data = typeof data === 'object' ? data : {};
        let result = new PrProductoServicios();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idProductoServicio"] = this.idProductoServicio;
        data["idProducto"] = this.idProducto;
        data["idServicio"] = this.idServicio;
        data["fechaInicioVigencia"] = this.fechaInicioVigencia ? this.fechaInicioVigencia.toISOString() : <any>undefined;
        data["fechaFinVigencia"] = this.fechaFinVigencia ? this.fechaFinVigencia.toISOString() : <any>undefined;
        data["idUnidadmedida"] = this.idUnidadmedida;
        data["idMoneda"] = this.idMoneda;
        data["tope"] = this.tope;
        data["idProductoServicioCompartido"] = this.idProductoServicioCompartido;
        data["detalle"] = this.detalle;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["importeSugerido"] = this.importeSugerido;
        data["fecBaja"] = this.fecBaja ? this.fecBaja.toISOString() : <any>undefined;
        data["detalleIngles"] = this.detalleIngles;
        data["caracteristicaPrincipal"] = this.caracteristicaPrincipal;
        data["idProductoNavigation"] = this.idProductoNavigation ? this.idProductoNavigation.toJSON() : <any>undefined;
        data["idServicioNavigation"] = this.idServicioNavigation ? this.idServicioNavigation.toJSON() : <any>undefined;
        data["idUnidadmedidaNavigation"] = this.idUnidadmedidaNavigation ? this.idUnidadmedidaNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPrProductoServicios {
    idProductoServicio?: number;
    idProducto?: number;
    idServicio?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    idUnidadmedida?: number | undefined;
    idMoneda?: number | undefined;
    tope?: number | undefined;
    idProductoServicioCompartido?: number | undefined;
    detalle?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    importeSugerido?: number | undefined;
    fecBaja?: Date | undefined;
    detalleIngles?: string | undefined;
    caracteristicaPrincipal?: number | undefined;
    idProductoNavigation?: PrProducto | undefined;
    idServicioNavigation?: PrServicios | undefined;
    idUnidadmedidaNavigation?: PrUnidadesMedida | undefined;
}

export class PrServicios implements IPrServicios {
    idServicio?: number;
    descripcionServicio?: string | undefined;
    tipoServicio?: string | undefined;
    marcaAtencion?: string | undefined;
    nroOrden?: number | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    cargaPreviaCobertura?: string | undefined;
    idZonaImpresionIngles?: number | undefined;
    idProveedorServicio?: number | undefined;
    fechaBaja?: Date | undefined;
    idCompania?: number | undefined;
    descripcionServicioIngles?: string | undefined;
    idGrupoServicio?: number | undefined;
    idZonaImpresion?: number | undefined;
    idTipoInicioCobertura?: number | undefined;
    nroOrdenPdf?: number | undefined;
    prProductoServicios?: PrProductoServicios[] | undefined;

    constructor(data?: IPrServicios) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idServicio = _data["idServicio"];
            this.descripcionServicio = _data["descripcionServicio"];
            this.tipoServicio = _data["tipoServicio"];
            this.marcaAtencion = _data["marcaAtencion"];
            this.nroOrden = _data["nroOrden"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.cargaPreviaCobertura = _data["cargaPreviaCobertura"];
            this.idZonaImpresionIngles = _data["idZonaImpresionIngles"];
            this.idProveedorServicio = _data["idProveedorServicio"];
            this.fechaBaja = _data["fechaBaja"] ? new Date(_data["fechaBaja"].toString()) : <any>undefined;
            this.idCompania = _data["idCompania"];
            this.descripcionServicioIngles = _data["descripcionServicioIngles"];
            this.idGrupoServicio = _data["idGrupoServicio"];
            this.idZonaImpresion = _data["idZonaImpresion"];
            this.idTipoInicioCobertura = _data["idTipoInicioCobertura"];
            this.nroOrdenPdf = _data["nroOrdenPdf"];
            if (Array.isArray(_data["prProductoServicios"])) {
                this.prProductoServicios = [] as any;
                for (let item of _data["prProductoServicios"])
                    this.prProductoServicios!.push(PrProductoServicios.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PrServicios {
        data = typeof data === 'object' ? data : {};
        let result = new PrServicios();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idServicio"] = this.idServicio;
        data["descripcionServicio"] = this.descripcionServicio;
        data["tipoServicio"] = this.tipoServicio;
        data["marcaAtencion"] = this.marcaAtencion;
        data["nroOrden"] = this.nroOrden;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["cargaPreviaCobertura"] = this.cargaPreviaCobertura;
        data["idZonaImpresionIngles"] = this.idZonaImpresionIngles;
        data["idProveedorServicio"] = this.idProveedorServicio;
        data["fechaBaja"] = this.fechaBaja ? this.fechaBaja.toISOString() : <any>undefined;
        data["idCompania"] = this.idCompania;
        data["descripcionServicioIngles"] = this.descripcionServicioIngles;
        data["idGrupoServicio"] = this.idGrupoServicio;
        data["idZonaImpresion"] = this.idZonaImpresion;
        data["idTipoInicioCobertura"] = this.idTipoInicioCobertura;
        data["nroOrdenPdf"] = this.nroOrdenPdf;
        if (Array.isArray(this.prProductoServicios)) {
            data["prProductoServicios"] = [];
            for (let item of this.prProductoServicios)
                data["prProductoServicios"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPrServicios {
    idServicio?: number;
    descripcionServicio?: string | undefined;
    tipoServicio?: string | undefined;
    marcaAtencion?: string | undefined;
    nroOrden?: number | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    cargaPreviaCobertura?: string | undefined;
    idZonaImpresionIngles?: number | undefined;
    idProveedorServicio?: number | undefined;
    fechaBaja?: Date | undefined;
    idCompania?: number | undefined;
    descripcionServicioIngles?: string | undefined;
    idGrupoServicio?: number | undefined;
    idZonaImpresion?: number | undefined;
    idTipoInicioCobertura?: number | undefined;
    nroOrdenPdf?: number | undefined;
    prProductoServicios?: PrProductoServicios[] | undefined;
}

export class PrUnidadesMedida implements IPrUnidadesMedida {
    idUnidadMedida?: number;
    codigoUnidad?: string | undefined;
    descripcionUnidad?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    descripcionUnidadIngles?: string | undefined;
    prProductoServicios?: PrProductoServicios[] | undefined;

    constructor(data?: IPrUnidadesMedida) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idUnidadMedida = _data["idUnidadMedida"];
            this.codigoUnidad = _data["codigoUnidad"];
            this.descripcionUnidad = _data["descripcionUnidad"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.descripcionUnidadIngles = _data["descripcionUnidadIngles"];
            if (Array.isArray(_data["prProductoServicios"])) {
                this.prProductoServicios = [] as any;
                for (let item of _data["prProductoServicios"])
                    this.prProductoServicios!.push(PrProductoServicios.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PrUnidadesMedida {
        data = typeof data === 'object' ? data : {};
        let result = new PrUnidadesMedida();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idUnidadMedida"] = this.idUnidadMedida;
        data["codigoUnidad"] = this.codigoUnidad;
        data["descripcionUnidad"] = this.descripcionUnidad;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["descripcionUnidadIngles"] = this.descripcionUnidadIngles;
        if (Array.isArray(this.prProductoServicios)) {
            data["prProductoServicios"] = [];
            for (let item of this.prProductoServicios)
                data["prProductoServicios"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPrUnidadesMedida {
    idUnidadMedida?: number;
    codigoUnidad?: string | undefined;
    descripcionUnidad?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    descripcionUnidadIngles?: string | undefined;
    prProductoServicios?: PrProductoServicios[] | undefined;
}

export class PrVigenciaProducto implements IPrVigenciaProducto {
    idVigenciaProducto?: number;
    idProducto?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idProductoNavigation?: PrProducto | undefined;

    constructor(data?: IPrVigenciaProducto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idVigenciaProducto = _data["idVigenciaProducto"];
            this.idProducto = _data["idProducto"];
            this.fechaInicioVigencia = _data["fechaInicioVigencia"] ? new Date(_data["fechaInicioVigencia"].toString()) : <any>undefined;
            this.fechaFinVigencia = _data["fechaFinVigencia"] ? new Date(_data["fechaFinVigencia"].toString()) : <any>undefined;
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idProductoNavigation = _data["idProductoNavigation"] ? PrProducto.fromJS(_data["idProductoNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PrVigenciaProducto {
        data = typeof data === 'object' ? data : {};
        let result = new PrVigenciaProducto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idVigenciaProducto"] = this.idVigenciaProducto;
        data["idProducto"] = this.idProducto;
        data["fechaInicioVigencia"] = this.fechaInicioVigencia ? this.fechaInicioVigencia.toISOString() : <any>undefined;
        data["fechaFinVigencia"] = this.fechaFinVigencia ? this.fechaFinVigencia.toISOString() : <any>undefined;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idProductoNavigation"] = this.idProductoNavigation ? this.idProductoNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPrVigenciaProducto {
    idVigenciaProducto?: number;
    idProducto?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idProductoNavigation?: PrProducto | undefined;
}

export class TbProduto implements ITbProduto {
    idProduto?: number;
    idProducto?: number | undefined;
    idQuestionario?: number | undefined;
    idPergunta?: number | undefined;
    idResposta?: number | undefined;
    cdTpPapel?: number | undefined;
    idPessoaCorretor?: number | undefined;
    cdCorretor?: number | undefined;
    cdSusep?: string | undefined;
    dvPadrao?: string | undefined;
    idCanalVenda?: number | undefined;
    idProductoNavigation?: PrProducto | undefined;

    constructor(data?: ITbProduto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idProduto = _data["idProduto"];
            this.idProducto = _data["idProducto"];
            this.idQuestionario = _data["idQuestionario"];
            this.idPergunta = _data["idPergunta"];
            this.idResposta = _data["idResposta"];
            this.cdTpPapel = _data["cdTpPapel"];
            this.idPessoaCorretor = _data["idPessoaCorretor"];
            this.cdCorretor = _data["cdCorretor"];
            this.cdSusep = _data["cdSusep"];
            this.dvPadrao = _data["dvPadrao"];
            this.idCanalVenda = _data["idCanalVenda"];
            this.idProductoNavigation = _data["idProductoNavigation"] ? PrProducto.fromJS(_data["idProductoNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): TbProduto {
        data = typeof data === 'object' ? data : {};
        let result = new TbProduto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idProduto"] = this.idProduto;
        data["idProducto"] = this.idProducto;
        data["idQuestionario"] = this.idQuestionario;
        data["idPergunta"] = this.idPergunta;
        data["idResposta"] = this.idResposta;
        data["cdTpPapel"] = this.cdTpPapel;
        data["idPessoaCorretor"] = this.idPessoaCorretor;
        data["cdCorretor"] = this.cdCorretor;
        data["cdSusep"] = this.cdSusep;
        data["dvPadrao"] = this.dvPadrao;
        data["idCanalVenda"] = this.idCanalVenda;
        data["idProductoNavigation"] = this.idProductoNavigation ? this.idProductoNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface ITbProduto {
    idProduto?: number;
    idProducto?: number | undefined;
    idQuestionario?: number | undefined;
    idPergunta?: number | undefined;
    idResposta?: number | undefined;
    cdTpPapel?: number | undefined;
    idPessoaCorretor?: number | undefined;
    cdCorretor?: number | undefined;
    cdSusep?: string | undefined;
    dvPadrao?: string | undefined;
    idCanalVenda?: number | undefined;
    idProductoNavigation?: PrProducto | undefined;
}

export class WcfProductAdditionalCoverage implements IWcfProductAdditionalCoverage {
    productAdditionalId?: number;
    productId?: number;
    additionalCoverageId?: number;
    validFrom?: Date;
    validTo?: Date | undefined;
    createBy?: string | undefined;
    dateCreated?: Date;
    modifiedBy?: string | undefined;
    dateModified?: Date | undefined;
    additionalCoverage?: WcfAdditionalCoverage | undefined;
    product?: PrProducto | undefined;

    constructor(data?: IWcfProductAdditionalCoverage) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.productAdditionalId = _data["productAdditionalId"];
            this.productId = _data["productId"];
            this.additionalCoverageId = _data["additionalCoverageId"];
            this.validFrom = _data["validFrom"] ? new Date(_data["validFrom"].toString()) : <any>undefined;
            this.validTo = _data["validTo"] ? new Date(_data["validTo"].toString()) : <any>undefined;
            this.createBy = _data["createBy"];
            this.dateCreated = _data["dateCreated"] ? new Date(_data["dateCreated"].toString()) : <any>undefined;
            this.modifiedBy = _data["modifiedBy"];
            this.dateModified = _data["dateModified"] ? new Date(_data["dateModified"].toString()) : <any>undefined;
            this.additionalCoverage = _data["additionalCoverage"] ? WcfAdditionalCoverage.fromJS(_data["additionalCoverage"]) : <any>undefined;
            this.product = _data["product"] ? PrProducto.fromJS(_data["product"]) : <any>undefined;
        }
    }

    static fromJS(data: any): WcfProductAdditionalCoverage {
        data = typeof data === 'object' ? data : {};
        let result = new WcfProductAdditionalCoverage();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["productAdditionalId"] = this.productAdditionalId;
        data["productId"] = this.productId;
        data["additionalCoverageId"] = this.additionalCoverageId;
        data["validFrom"] = this.validFrom ? this.validFrom.toISOString() : <any>undefined;
        data["validTo"] = this.validTo ? this.validTo.toISOString() : <any>undefined;
        data["createBy"] = this.createBy;
        data["dateCreated"] = this.dateCreated ? this.dateCreated.toISOString() : <any>undefined;
        data["modifiedBy"] = this.modifiedBy;
        data["dateModified"] = this.dateModified ? this.dateModified.toISOString() : <any>undefined;
        data["additionalCoverage"] = this.additionalCoverage ? this.additionalCoverage.toJSON() : <any>undefined;
        data["product"] = this.product ? this.product.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IWcfProductAdditionalCoverage {
    productAdditionalId?: number;
    productId?: number;
    additionalCoverageId?: number;
    validFrom?: Date;
    validTo?: Date | undefined;
    createBy?: string | undefined;
    dateCreated?: Date;
    modifiedBy?: string | undefined;
    dateModified?: Date | undefined;
    additionalCoverage?: WcfAdditionalCoverage | undefined;
    product?: PrProducto | undefined;
}

export class WcfAdditionalCoverage implements IWcfAdditionalCoverage {
    idAdicional?: number;
    codigo?: string | undefined;
    adicional?: string | undefined;
    descripcion?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    adicionalIngles?: string | undefined;
    wcfPoVoucherAdditionalCoverage?: WcfPoVoucherAdditionalCoverage[] | undefined;
    wcfProductAdditionalCoverage?: WcfProductAdditionalCoverage[] | undefined;
    wcfProductAdditionalCoveragePrice?: WcfProductAdditionalCoveragePrice[] | undefined;

    constructor(data?: IWcfAdditionalCoverage) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idAdicional = _data["idAdicional"];
            this.codigo = _data["codigo"];
            this.adicional = _data["adicional"];
            this.descripcion = _data["descripcion"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.adicionalIngles = _data["adicionalIngles"];
            if (Array.isArray(_data["wcfPoVoucherAdditionalCoverage"])) {
                this.wcfPoVoucherAdditionalCoverage = [] as any;
                for (let item of _data["wcfPoVoucherAdditionalCoverage"])
                    this.wcfPoVoucherAdditionalCoverage!.push(WcfPoVoucherAdditionalCoverage.fromJS(item));
            }
            if (Array.isArray(_data["wcfProductAdditionalCoverage"])) {
                this.wcfProductAdditionalCoverage = [] as any;
                for (let item of _data["wcfProductAdditionalCoverage"])
                    this.wcfProductAdditionalCoverage!.push(WcfProductAdditionalCoverage.fromJS(item));
            }
            if (Array.isArray(_data["wcfProductAdditionalCoveragePrice"])) {
                this.wcfProductAdditionalCoveragePrice = [] as any;
                for (let item of _data["wcfProductAdditionalCoveragePrice"])
                    this.wcfProductAdditionalCoveragePrice!.push(WcfProductAdditionalCoveragePrice.fromJS(item));
            }
        }
    }

    static fromJS(data: any): WcfAdditionalCoverage {
        data = typeof data === 'object' ? data : {};
        let result = new WcfAdditionalCoverage();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idAdicional"] = this.idAdicional;
        data["codigo"] = this.codigo;
        data["adicional"] = this.adicional;
        data["descripcion"] = this.descripcion;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["adicionalIngles"] = this.adicionalIngles;
        if (Array.isArray(this.wcfPoVoucherAdditionalCoverage)) {
            data["wcfPoVoucherAdditionalCoverage"] = [];
            for (let item of this.wcfPoVoucherAdditionalCoverage)
                data["wcfPoVoucherAdditionalCoverage"].push(item.toJSON());
        }
        if (Array.isArray(this.wcfProductAdditionalCoverage)) {
            data["wcfProductAdditionalCoverage"] = [];
            for (let item of this.wcfProductAdditionalCoverage)
                data["wcfProductAdditionalCoverage"].push(item.toJSON());
        }
        if (Array.isArray(this.wcfProductAdditionalCoveragePrice)) {
            data["wcfProductAdditionalCoveragePrice"] = [];
            for (let item of this.wcfProductAdditionalCoveragePrice)
                data["wcfProductAdditionalCoveragePrice"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IWcfAdditionalCoverage {
    idAdicional?: number;
    codigo?: string | undefined;
    adicional?: string | undefined;
    descripcion?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    adicionalIngles?: string | undefined;
    wcfPoVoucherAdditionalCoverage?: WcfPoVoucherAdditionalCoverage[] | undefined;
    wcfProductAdditionalCoverage?: WcfProductAdditionalCoverage[] | undefined;
    wcfProductAdditionalCoveragePrice?: WcfProductAdditionalCoveragePrice[] | undefined;
}

export class WcfPoVoucherAdditionalCoverage implements IWcfPoVoucherAdditionalCoverage {
    voucherAdditionalCoverageId?: number;
    voucherId?: number;
    additionalCoverageId?: number;
    amount?: number | undefined;
    companyAmount?: number | undefined;
    productId?: number | undefined;
    additionalCoverage?: WcfAdditionalCoverage | undefined;

    constructor(data?: IWcfPoVoucherAdditionalCoverage) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.voucherAdditionalCoverageId = _data["voucherAdditionalCoverageId"];
            this.voucherId = _data["voucherId"];
            this.additionalCoverageId = _data["additionalCoverageId"];
            this.amount = _data["amount"];
            this.companyAmount = _data["companyAmount"];
            this.productId = _data["productId"];
            this.additionalCoverage = _data["additionalCoverage"] ? WcfAdditionalCoverage.fromJS(_data["additionalCoverage"]) : <any>undefined;
        }
    }

    static fromJS(data: any): WcfPoVoucherAdditionalCoverage {
        data = typeof data === 'object' ? data : {};
        let result = new WcfPoVoucherAdditionalCoverage();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["voucherAdditionalCoverageId"] = this.voucherAdditionalCoverageId;
        data["voucherId"] = this.voucherId;
        data["additionalCoverageId"] = this.additionalCoverageId;
        data["amount"] = this.amount;
        data["companyAmount"] = this.companyAmount;
        data["productId"] = this.productId;
        data["additionalCoverage"] = this.additionalCoverage ? this.additionalCoverage.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IWcfPoVoucherAdditionalCoverage {
    voucherAdditionalCoverageId?: number;
    voucherId?: number;
    additionalCoverageId?: number;
    amount?: number | undefined;
    companyAmount?: number | undefined;
    productId?: number | undefined;
    additionalCoverage?: WcfAdditionalCoverage | undefined;
}

export class WcfProductAdditionalCoveragePrice implements IWcfProductAdditionalCoveragePrice {
    productAdditionalCoveragePriceId?: number;
    productId?: number;
    additionalCoverageId?: number;
    daysOfCoverage?: number;
    amount?: number;
    validFrom?: Date;
    validTo?: Date | undefined;
    createBy?: string | undefined;
    dateCreated?: Date;
    modifiedBy?: string | undefined;
    dateModified?: Date | undefined;
    additionalCoverage?: WcfAdditionalCoverage | undefined;
    product?: PrProducto | undefined;

    constructor(data?: IWcfProductAdditionalCoveragePrice) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.productAdditionalCoveragePriceId = _data["productAdditionalCoveragePriceId"];
            this.productId = _data["productId"];
            this.additionalCoverageId = _data["additionalCoverageId"];
            this.daysOfCoverage = _data["daysOfCoverage"];
            this.amount = _data["amount"];
            this.validFrom = _data["validFrom"] ? new Date(_data["validFrom"].toString()) : <any>undefined;
            this.validTo = _data["validTo"] ? new Date(_data["validTo"].toString()) : <any>undefined;
            this.createBy = _data["createBy"];
            this.dateCreated = _data["dateCreated"] ? new Date(_data["dateCreated"].toString()) : <any>undefined;
            this.modifiedBy = _data["modifiedBy"];
            this.dateModified = _data["dateModified"] ? new Date(_data["dateModified"].toString()) : <any>undefined;
            this.additionalCoverage = _data["additionalCoverage"] ? WcfAdditionalCoverage.fromJS(_data["additionalCoverage"]) : <any>undefined;
            this.product = _data["product"] ? PrProducto.fromJS(_data["product"]) : <any>undefined;
        }
    }

    static fromJS(data: any): WcfProductAdditionalCoveragePrice {
        data = typeof data === 'object' ? data : {};
        let result = new WcfProductAdditionalCoveragePrice();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["productAdditionalCoveragePriceId"] = this.productAdditionalCoveragePriceId;
        data["productId"] = this.productId;
        data["additionalCoverageId"] = this.additionalCoverageId;
        data["daysOfCoverage"] = this.daysOfCoverage;
        data["amount"] = this.amount;
        data["validFrom"] = this.validFrom ? this.validFrom.toISOString() : <any>undefined;
        data["validTo"] = this.validTo ? this.validTo.toISOString() : <any>undefined;
        data["createBy"] = this.createBy;
        data["dateCreated"] = this.dateCreated ? this.dateCreated.toISOString() : <any>undefined;
        data["modifiedBy"] = this.modifiedBy;
        data["dateModified"] = this.dateModified ? this.dateModified.toISOString() : <any>undefined;
        data["additionalCoverage"] = this.additionalCoverage ? this.additionalCoverage.toJSON() : <any>undefined;
        data["product"] = this.product ? this.product.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IWcfProductAdditionalCoveragePrice {
    productAdditionalCoveragePriceId?: number;
    productId?: number;
    additionalCoverageId?: number;
    daysOfCoverage?: number;
    amount?: number;
    validFrom?: Date;
    validTo?: Date | undefined;
    createBy?: string | undefined;
    dateCreated?: Date;
    modifiedBy?: string | undefined;
    dateModified?: Date | undefined;
    additionalCoverage?: WcfAdditionalCoverage | undefined;
    product?: PrProducto | undefined;
}

export class WcfProductShowCase implements IWcfProductShowCase {
    productShowCaseId?: number;
    productId?: number;
    relatedProductId?: number;
    validFrom?: Date | undefined;
    validUntil?: Date | undefined;
    createdByUserId?: string | undefined;
    createdOnDate?: Date | undefined;
    lastModifiedByUserId?: string | undefined;
    lastModifiedOnDate?: Date | undefined;
    product?: PrProducto | undefined;
    relatedProduct?: PrProducto | undefined;

    constructor(data?: IWcfProductShowCase) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.productShowCaseId = _data["productShowCaseId"];
            this.productId = _data["productId"];
            this.relatedProductId = _data["relatedProductId"];
            this.validFrom = _data["validFrom"] ? new Date(_data["validFrom"].toString()) : <any>undefined;
            this.validUntil = _data["validUntil"] ? new Date(_data["validUntil"].toString()) : <any>undefined;
            this.createdByUserId = _data["createdByUserId"];
            this.createdOnDate = _data["createdOnDate"] ? new Date(_data["createdOnDate"].toString()) : <any>undefined;
            this.lastModifiedByUserId = _data["lastModifiedByUserId"];
            this.lastModifiedOnDate = _data["lastModifiedOnDate"] ? new Date(_data["lastModifiedOnDate"].toString()) : <any>undefined;
            this.product = _data["product"] ? PrProducto.fromJS(_data["product"]) : <any>undefined;
            this.relatedProduct = _data["relatedProduct"] ? PrProducto.fromJS(_data["relatedProduct"]) : <any>undefined;
        }
    }

    static fromJS(data: any): WcfProductShowCase {
        data = typeof data === 'object' ? data : {};
        let result = new WcfProductShowCase();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["productShowCaseId"] = this.productShowCaseId;
        data["productId"] = this.productId;
        data["relatedProductId"] = this.relatedProductId;
        data["validFrom"] = this.validFrom ? this.validFrom.toISOString() : <any>undefined;
        data["validUntil"] = this.validUntil ? this.validUntil.toISOString() : <any>undefined;
        data["createdByUserId"] = this.createdByUserId;
        data["createdOnDate"] = this.createdOnDate ? this.createdOnDate.toISOString() : <any>undefined;
        data["lastModifiedByUserId"] = this.lastModifiedByUserId;
        data["lastModifiedOnDate"] = this.lastModifiedOnDate ? this.lastModifiedOnDate.toISOString() : <any>undefined;
        data["product"] = this.product ? this.product.toJSON() : <any>undefined;
        data["relatedProduct"] = this.relatedProduct ? this.relatedProduct.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IWcfProductShowCase {
    productShowCaseId?: number;
    productId?: number;
    relatedProductId?: number;
    validFrom?: Date | undefined;
    validUntil?: Date | undefined;
    createdByUserId?: string | undefined;
    createdOnDate?: Date | undefined;
    lastModifiedByUserId?: string | undefined;
    lastModifiedOnDate?: Date | undefined;
    product?: PrProducto | undefined;
    relatedProduct?: PrProducto | undefined;
}

export class WcfSpecialAudiencesShowCase implements IWcfSpecialAudiencesShowCase {
    specialAudiencesShowCaseId?: number;
    specialAudiencesId?: number;
    productId?: number;
    validFrom?: Date | undefined;
    validUntil?: Date | undefined;
    createdByUserId?: string | undefined;
    createdOnDate?: Date | undefined;
    lastModifiedByUserId?: string | undefined;
    lastModifiedOnDate?: Date | undefined;
    product?: PrProducto | undefined;
    specialAudiences?: WcfSpecialAudiences | undefined;

    constructor(data?: IWcfSpecialAudiencesShowCase) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.specialAudiencesShowCaseId = _data["specialAudiencesShowCaseId"];
            this.specialAudiencesId = _data["specialAudiencesId"];
            this.productId = _data["productId"];
            this.validFrom = _data["validFrom"] ? new Date(_data["validFrom"].toString()) : <any>undefined;
            this.validUntil = _data["validUntil"] ? new Date(_data["validUntil"].toString()) : <any>undefined;
            this.createdByUserId = _data["createdByUserId"];
            this.createdOnDate = _data["createdOnDate"] ? new Date(_data["createdOnDate"].toString()) : <any>undefined;
            this.lastModifiedByUserId = _data["lastModifiedByUserId"];
            this.lastModifiedOnDate = _data["lastModifiedOnDate"] ? new Date(_data["lastModifiedOnDate"].toString()) : <any>undefined;
            this.product = _data["product"] ? PrProducto.fromJS(_data["product"]) : <any>undefined;
            this.specialAudiences = _data["specialAudiences"] ? WcfSpecialAudiences.fromJS(_data["specialAudiences"]) : <any>undefined;
        }
    }

    static fromJS(data: any): WcfSpecialAudiencesShowCase {
        data = typeof data === 'object' ? data : {};
        let result = new WcfSpecialAudiencesShowCase();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["specialAudiencesShowCaseId"] = this.specialAudiencesShowCaseId;
        data["specialAudiencesId"] = this.specialAudiencesId;
        data["productId"] = this.productId;
        data["validFrom"] = this.validFrom ? this.validFrom.toISOString() : <any>undefined;
        data["validUntil"] = this.validUntil ? this.validUntil.toISOString() : <any>undefined;
        data["createdByUserId"] = this.createdByUserId;
        data["createdOnDate"] = this.createdOnDate ? this.createdOnDate.toISOString() : <any>undefined;
        data["lastModifiedByUserId"] = this.lastModifiedByUserId;
        data["lastModifiedOnDate"] = this.lastModifiedOnDate ? this.lastModifiedOnDate.toISOString() : <any>undefined;
        data["product"] = this.product ? this.product.toJSON() : <any>undefined;
        data["specialAudiences"] = this.specialAudiences ? this.specialAudiences.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IWcfSpecialAudiencesShowCase {
    specialAudiencesShowCaseId?: number;
    specialAudiencesId?: number;
    productId?: number;
    validFrom?: Date | undefined;
    validUntil?: Date | undefined;
    createdByUserId?: string | undefined;
    createdOnDate?: Date | undefined;
    lastModifiedByUserId?: string | undefined;
    lastModifiedOnDate?: Date | undefined;
    product?: PrProducto | undefined;
    specialAudiences?: WcfSpecialAudiences | undefined;
}

export class WcfSpecialAudiences implements IWcfSpecialAudiences {
    specialAudiencesId?: number;
    specialAudienceCode?: string | undefined;
    specialAudienceName?: string | undefined;
    landingPage?: string | undefined;
    wcfSpecialAudiencesShowCase?: WcfSpecialAudiencesShowCase[] | undefined;

    constructor(data?: IWcfSpecialAudiences) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.specialAudiencesId = _data["specialAudiencesId"];
            this.specialAudienceCode = _data["specialAudienceCode"];
            this.specialAudienceName = _data["specialAudienceName"];
            this.landingPage = _data["landingPage"];
            if (Array.isArray(_data["wcfSpecialAudiencesShowCase"])) {
                this.wcfSpecialAudiencesShowCase = [] as any;
                for (let item of _data["wcfSpecialAudiencesShowCase"])
                    this.wcfSpecialAudiencesShowCase!.push(WcfSpecialAudiencesShowCase.fromJS(item));
            }
        }
    }

    static fromJS(data: any): WcfSpecialAudiences {
        data = typeof data === 'object' ? data : {};
        let result = new WcfSpecialAudiences();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["specialAudiencesId"] = this.specialAudiencesId;
        data["specialAudienceCode"] = this.specialAudienceCode;
        data["specialAudienceName"] = this.specialAudienceName;
        data["landingPage"] = this.landingPage;
        if (Array.isArray(this.wcfSpecialAudiencesShowCase)) {
            data["wcfSpecialAudiencesShowCase"] = [];
            for (let item of this.wcfSpecialAudiencesShowCase)
                data["wcfSpecialAudiencesShowCase"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IWcfSpecialAudiences {
    specialAudiencesId?: number;
    specialAudienceCode?: string | undefined;
    specialAudienceName?: string | undefined;
    landingPage?: string | undefined;
    wcfSpecialAudiencesShowCase?: WcfSpecialAudiencesShowCase[] | undefined;
}

export class WcfTopicShowCase implements IWcfTopicShowCase {
    topicShowCaseId?: number;
    topicId?: number;
    productId?: number;
    validFrom?: Date | undefined;
    validUntil?: Date | undefined;
    createdByUserId?: string | undefined;
    createdOnDate?: Date | undefined;
    lastModifiedByUserId?: string | undefined;
    lastModifiedOnDate?: Date | undefined;
    product?: PrProducto | undefined;
    topic?: WcfTopic | undefined;

    constructor(data?: IWcfTopicShowCase) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.topicShowCaseId = _data["topicShowCaseId"];
            this.topicId = _data["topicId"];
            this.productId = _data["productId"];
            this.validFrom = _data["validFrom"] ? new Date(_data["validFrom"].toString()) : <any>undefined;
            this.validUntil = _data["validUntil"] ? new Date(_data["validUntil"].toString()) : <any>undefined;
            this.createdByUserId = _data["createdByUserId"];
            this.createdOnDate = _data["createdOnDate"] ? new Date(_data["createdOnDate"].toString()) : <any>undefined;
            this.lastModifiedByUserId = _data["lastModifiedByUserId"];
            this.lastModifiedOnDate = _data["lastModifiedOnDate"] ? new Date(_data["lastModifiedOnDate"].toString()) : <any>undefined;
            this.product = _data["product"] ? PrProducto.fromJS(_data["product"]) : <any>undefined;
            this.topic = _data["topic"] ? WcfTopic.fromJS(_data["topic"]) : <any>undefined;
        }
    }

    static fromJS(data: any): WcfTopicShowCase {
        data = typeof data === 'object' ? data : {};
        let result = new WcfTopicShowCase();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["topicShowCaseId"] = this.topicShowCaseId;
        data["topicId"] = this.topicId;
        data["productId"] = this.productId;
        data["validFrom"] = this.validFrom ? this.validFrom.toISOString() : <any>undefined;
        data["validUntil"] = this.validUntil ? this.validUntil.toISOString() : <any>undefined;
        data["createdByUserId"] = this.createdByUserId;
        data["createdOnDate"] = this.createdOnDate ? this.createdOnDate.toISOString() : <any>undefined;
        data["lastModifiedByUserId"] = this.lastModifiedByUserId;
        data["lastModifiedOnDate"] = this.lastModifiedOnDate ? this.lastModifiedOnDate.toISOString() : <any>undefined;
        data["product"] = this.product ? this.product.toJSON() : <any>undefined;
        data["topic"] = this.topic ? this.topic.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IWcfTopicShowCase {
    topicShowCaseId?: number;
    topicId?: number;
    productId?: number;
    validFrom?: Date | undefined;
    validUntil?: Date | undefined;
    createdByUserId?: string | undefined;
    createdOnDate?: Date | undefined;
    lastModifiedByUserId?: string | undefined;
    lastModifiedOnDate?: Date | undefined;
    product?: PrProducto | undefined;
    topic?: WcfTopic | undefined;
}

export class WcfTopic implements IWcfTopic {
    topicId?: number;
    topicCode?: string | undefined;
    description?: string | undefined;
    createdByUserId?: string | undefined;
    createdOnDate?: Date | undefined;
    lastModifiedByUserId?: string | undefined;
    lastModifiedOnDate?: Date | undefined;
    deletedOnDate?: Date | undefined;
    wcfTopicShowCase?: WcfTopicShowCase[] | undefined;

    constructor(data?: IWcfTopic) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.topicId = _data["topicId"];
            this.topicCode = _data["topicCode"];
            this.description = _data["description"];
            this.createdByUserId = _data["createdByUserId"];
            this.createdOnDate = _data["createdOnDate"] ? new Date(_data["createdOnDate"].toString()) : <any>undefined;
            this.lastModifiedByUserId = _data["lastModifiedByUserId"];
            this.lastModifiedOnDate = _data["lastModifiedOnDate"] ? new Date(_data["lastModifiedOnDate"].toString()) : <any>undefined;
            this.deletedOnDate = _data["deletedOnDate"] ? new Date(_data["deletedOnDate"].toString()) : <any>undefined;
            if (Array.isArray(_data["wcfTopicShowCase"])) {
                this.wcfTopicShowCase = [] as any;
                for (let item of _data["wcfTopicShowCase"])
                    this.wcfTopicShowCase!.push(WcfTopicShowCase.fromJS(item));
            }
        }
    }

    static fromJS(data: any): WcfTopic {
        data = typeof data === 'object' ? data : {};
        let result = new WcfTopic();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["topicId"] = this.topicId;
        data["topicCode"] = this.topicCode;
        data["description"] = this.description;
        data["createdByUserId"] = this.createdByUserId;
        data["createdOnDate"] = this.createdOnDate ? this.createdOnDate.toISOString() : <any>undefined;
        data["lastModifiedByUserId"] = this.lastModifiedByUserId;
        data["lastModifiedOnDate"] = this.lastModifiedOnDate ? this.lastModifiedOnDate.toISOString() : <any>undefined;
        data["deletedOnDate"] = this.deletedOnDate ? this.deletedOnDate.toISOString() : <any>undefined;
        if (Array.isArray(this.wcfTopicShowCase)) {
            data["wcfTopicShowCase"] = [];
            for (let item of this.wcfTopicShowCase)
                data["wcfTopicShowCase"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IWcfTopic {
    topicId?: number;
    topicCode?: string | undefined;
    description?: string | undefined;
    createdByUserId?: string | undefined;
    createdOnDate?: Date | undefined;
    lastModifiedByUserId?: string | undefined;
    lastModifiedOnDate?: Date | undefined;
    deletedOnDate?: Date | undefined;
    wcfTopicShowCase?: WcfTopicShowCase[] | undefined;
}

export class PoHistoricoVoucher implements IPoHistoricoVoucher {
    idHistoricoVoucher?: number;
    idVoucher?: number;
    fechaDesde?: Date;
    fechaHasta?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date;
    idVoucherNavigation?: PoPolizas | undefined;

    constructor(data?: IPoHistoricoVoucher) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idHistoricoVoucher = _data["idHistoricoVoucher"];
            this.idVoucher = _data["idVoucher"];
            this.fechaDesde = _data["fechaDesde"] ? new Date(_data["fechaDesde"].toString()) : <any>undefined;
            this.fechaHasta = _data["fechaHasta"] ? new Date(_data["fechaHasta"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idVoucherNavigation = _data["idVoucherNavigation"] ? PoPolizas.fromJS(_data["idVoucherNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PoHistoricoVoucher {
        data = typeof data === 'object' ? data : {};
        let result = new PoHistoricoVoucher();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHistoricoVoucher"] = this.idHistoricoVoucher;
        data["idVoucher"] = this.idVoucher;
        data["fechaDesde"] = this.fechaDesde ? this.fechaDesde.toISOString() : <any>undefined;
        data["fechaHasta"] = this.fechaHasta ? this.fechaHasta.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idVoucherNavigation"] = this.idVoucherNavigation ? this.idVoucherNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPoHistoricoVoucher {
    idHistoricoVoucher?: number;
    idVoucher?: number;
    fechaDesde?: Date;
    fechaHasta?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date;
    idVoucherNavigation?: PoPolizas | undefined;
}

export class CoAgenciasBudget implements ICoAgenciasBudget {
    idAgenciabudget?: number;
    idAgencia?: number;
    fechaDesde?: Date;
    fechaHasta?: Date;
    monto?: number;
    idAgenciaNavigation?: CoAgencias | undefined;

    constructor(data?: ICoAgenciasBudget) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idAgenciabudget = _data["idAgenciabudget"];
            this.idAgencia = _data["idAgencia"];
            this.fechaDesde = _data["fechaDesde"] ? new Date(_data["fechaDesde"].toString()) : <any>undefined;
            this.fechaHasta = _data["fechaHasta"] ? new Date(_data["fechaHasta"].toString()) : <any>undefined;
            this.monto = _data["monto"];
            this.idAgenciaNavigation = _data["idAgenciaNavigation"] ? CoAgencias.fromJS(_data["idAgenciaNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): CoAgenciasBudget {
        data = typeof data === 'object' ? data : {};
        let result = new CoAgenciasBudget();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idAgenciabudget"] = this.idAgenciabudget;
        data["idAgencia"] = this.idAgencia;
        data["fechaDesde"] = this.fechaDesde ? this.fechaDesde.toISOString() : <any>undefined;
        data["fechaHasta"] = this.fechaHasta ? this.fechaHasta.toISOString() : <any>undefined;
        data["monto"] = this.monto;
        data["idAgenciaNavigation"] = this.idAgenciaNavigation ? this.idAgenciaNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface ICoAgenciasBudget {
    idAgenciabudget?: number;
    idAgencia?: number;
    fechaDesde?: Date;
    fechaHasta?: Date;
    monto?: number;
    idAgenciaNavigation?: CoAgencias | undefined;
}

export class CoAgenciasEjecutivoResponsable implements ICoAgenciasEjecutivoResponsable {
    idAgenciaEjecutivo?: number;
    idAgencia?: number | undefined;
    nombre?: string | undefined;
    email?: string | undefined;
    telefono?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date | undefined;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idAgenciaNavigation?: CoAgencias | undefined;

    constructor(data?: ICoAgenciasEjecutivoResponsable) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idAgenciaEjecutivo = _data["idAgenciaEjecutivo"];
            this.idAgencia = _data["idAgencia"];
            this.nombre = _data["nombre"];
            this.email = _data["email"];
            this.telefono = _data["telefono"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idAgenciaNavigation = _data["idAgenciaNavigation"] ? CoAgencias.fromJS(_data["idAgenciaNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): CoAgenciasEjecutivoResponsable {
        data = typeof data === 'object' ? data : {};
        let result = new CoAgenciasEjecutivoResponsable();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idAgenciaEjecutivo"] = this.idAgenciaEjecutivo;
        data["idAgencia"] = this.idAgencia;
        data["nombre"] = this.nombre;
        data["email"] = this.email;
        data["telefono"] = this.telefono;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idAgenciaNavigation"] = this.idAgenciaNavigation ? this.idAgenciaNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface ICoAgenciasEjecutivoResponsable {
    idAgenciaEjecutivo?: number;
    idAgencia?: number | undefined;
    nombre?: string | undefined;
    email?: string | undefined;
    telefono?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date | undefined;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idAgenciaNavigation?: CoAgencias | undefined;
}

export class CoAgenciasRepresentante implements ICoAgenciasRepresentante {
    idAgenciaRepresentante?: number;
    idRepresentante?: number;
    idAgencia?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idAgenciaNavigation?: CoAgencias | undefined;
    idRepresentanteNavigation?: CoRepresentantes | undefined;

    constructor(data?: ICoAgenciasRepresentante) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idAgenciaRepresentante = _data["idAgenciaRepresentante"];
            this.idRepresentante = _data["idRepresentante"];
            this.idAgencia = _data["idAgencia"];
            this.fechaInicioVigencia = _data["fechaInicioVigencia"] ? new Date(_data["fechaInicioVigencia"].toString()) : <any>undefined;
            this.fechaFinVigencia = _data["fechaFinVigencia"] ? new Date(_data["fechaFinVigencia"].toString()) : <any>undefined;
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idAgenciaNavigation = _data["idAgenciaNavigation"] ? CoAgencias.fromJS(_data["idAgenciaNavigation"]) : <any>undefined;
            this.idRepresentanteNavigation = _data["idRepresentanteNavigation"] ? CoRepresentantes.fromJS(_data["idRepresentanteNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): CoAgenciasRepresentante {
        data = typeof data === 'object' ? data : {};
        let result = new CoAgenciasRepresentante();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idAgenciaRepresentante"] = this.idAgenciaRepresentante;
        data["idRepresentante"] = this.idRepresentante;
        data["idAgencia"] = this.idAgencia;
        data["fechaInicioVigencia"] = this.fechaInicioVigencia ? this.fechaInicioVigencia.toISOString() : <any>undefined;
        data["fechaFinVigencia"] = this.fechaFinVigencia ? this.fechaFinVigencia.toISOString() : <any>undefined;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idAgenciaNavigation"] = this.idAgenciaNavigation ? this.idAgenciaNavigation.toJSON() : <any>undefined;
        data["idRepresentanteNavigation"] = this.idRepresentanteNavigation ? this.idRepresentanteNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface ICoAgenciasRepresentante {
    idAgenciaRepresentante?: number;
    idRepresentante?: number;
    idAgencia?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idAgenciaNavigation?: CoAgencias | undefined;
    idRepresentanteNavigation?: CoRepresentantes | undefined;
}

export class CoRepresentantes implements ICoRepresentantes {
    idRepresentante?: number;
    idPersonaJuridica?: number;
    contacto?: string | undefined;
    fechaRevision?: Date;
    fechaBaja?: Date | undefined;
    idCompania?: number;
    userId?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idCompaniaNavigation?: BsCompanias | undefined;
    idPersonaJuridicaNavigation?: PePersonaJuridica | undefined;
    coAgenciasRepresentante?: CoAgenciasRepresentante[] | undefined;
    coComisionesRepresentante?: CoComisionesRepresentante[] | undefined;

    constructor(data?: ICoRepresentantes) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idRepresentante = _data["idRepresentante"];
            this.idPersonaJuridica = _data["idPersonaJuridica"];
            this.contacto = _data["contacto"];
            this.fechaRevision = _data["fechaRevision"] ? new Date(_data["fechaRevision"].toString()) : <any>undefined;
            this.fechaBaja = _data["fechaBaja"] ? new Date(_data["fechaBaja"].toString()) : <any>undefined;
            this.idCompania = _data["idCompania"];
            this.userId = _data["userId"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idCompaniaNavigation = _data["idCompaniaNavigation"] ? BsCompanias.fromJS(_data["idCompaniaNavigation"]) : <any>undefined;
            this.idPersonaJuridicaNavigation = _data["idPersonaJuridicaNavigation"] ? PePersonaJuridica.fromJS(_data["idPersonaJuridicaNavigation"]) : <any>undefined;
            if (Array.isArray(_data["coAgenciasRepresentante"])) {
                this.coAgenciasRepresentante = [] as any;
                for (let item of _data["coAgenciasRepresentante"])
                    this.coAgenciasRepresentante!.push(CoAgenciasRepresentante.fromJS(item));
            }
            if (Array.isArray(_data["coComisionesRepresentante"])) {
                this.coComisionesRepresentante = [] as any;
                for (let item of _data["coComisionesRepresentante"])
                    this.coComisionesRepresentante!.push(CoComisionesRepresentante.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CoRepresentantes {
        data = typeof data === 'object' ? data : {};
        let result = new CoRepresentantes();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idRepresentante"] = this.idRepresentante;
        data["idPersonaJuridica"] = this.idPersonaJuridica;
        data["contacto"] = this.contacto;
        data["fechaRevision"] = this.fechaRevision ? this.fechaRevision.toISOString() : <any>undefined;
        data["fechaBaja"] = this.fechaBaja ? this.fechaBaja.toISOString() : <any>undefined;
        data["idCompania"] = this.idCompania;
        data["userId"] = this.userId;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idCompaniaNavigation"] = this.idCompaniaNavigation ? this.idCompaniaNavigation.toJSON() : <any>undefined;
        data["idPersonaJuridicaNavigation"] = this.idPersonaJuridicaNavigation ? this.idPersonaJuridicaNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.coAgenciasRepresentante)) {
            data["coAgenciasRepresentante"] = [];
            for (let item of this.coAgenciasRepresentante)
                data["coAgenciasRepresentante"].push(item.toJSON());
        }
        if (Array.isArray(this.coComisionesRepresentante)) {
            data["coComisionesRepresentante"] = [];
            for (let item of this.coComisionesRepresentante)
                data["coComisionesRepresentante"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICoRepresentantes {
    idRepresentante?: number;
    idPersonaJuridica?: number;
    contacto?: string | undefined;
    fechaRevision?: Date;
    fechaBaja?: Date | undefined;
    idCompania?: number;
    userId?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idCompaniaNavigation?: BsCompanias | undefined;
    idPersonaJuridicaNavigation?: PePersonaJuridica | undefined;
    coAgenciasRepresentante?: CoAgenciasRepresentante[] | undefined;
    coComisionesRepresentante?: CoComisionesRepresentante[] | undefined;
}

export class CoComisionesRepresentante implements ICoComisionesRepresentante {
    idComisionRepresentante?: number;
    idRepresentante?: number;
    comision?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idRepresentanteNavigation?: CoRepresentantes | undefined;

    constructor(data?: ICoComisionesRepresentante) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idComisionRepresentante = _data["idComisionRepresentante"];
            this.idRepresentante = _data["idRepresentante"];
            this.comision = _data["comision"];
            this.fechaInicioVigencia = _data["fechaInicioVigencia"] ? new Date(_data["fechaInicioVigencia"].toString()) : <any>undefined;
            this.fechaFinVigencia = _data["fechaFinVigencia"] ? new Date(_data["fechaFinVigencia"].toString()) : <any>undefined;
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idRepresentanteNavigation = _data["idRepresentanteNavigation"] ? CoRepresentantes.fromJS(_data["idRepresentanteNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): CoComisionesRepresentante {
        data = typeof data === 'object' ? data : {};
        let result = new CoComisionesRepresentante();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idComisionRepresentante"] = this.idComisionRepresentante;
        data["idRepresentante"] = this.idRepresentante;
        data["comision"] = this.comision;
        data["fechaInicioVigencia"] = this.fechaInicioVigencia ? this.fechaInicioVigencia.toISOString() : <any>undefined;
        data["fechaFinVigencia"] = this.fechaFinVigencia ? this.fechaFinVigencia.toISOString() : <any>undefined;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idRepresentanteNavigation"] = this.idRepresentanteNavigation ? this.idRepresentanteNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface ICoComisionesRepresentante {
    idComisionRepresentante?: number;
    idRepresentante?: number;
    comision?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idRepresentanteNavigation?: CoRepresentantes | undefined;
}

export class CoComisionesAgencias implements ICoComisionesAgencias {
    idComisionAgencia?: number;
    idAgencia?: number;
    fechaComision?: Date;
    comision?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    fechaBaja?: Date | undefined;
    idPeriodicidadComision?: number | undefined;
    meta?: number | undefined;
    idUnidadMeta?: number | undefined;
    idTipoComision?: number | undefined;
    idAgenciaNavigation?: CoAgencias | undefined;

    constructor(data?: ICoComisionesAgencias) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idComisionAgencia = _data["idComisionAgencia"];
            this.idAgencia = _data["idAgencia"];
            this.fechaComision = _data["fechaComision"] ? new Date(_data["fechaComision"].toString()) : <any>undefined;
            this.comision = _data["comision"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.fechaBaja = _data["fechaBaja"] ? new Date(_data["fechaBaja"].toString()) : <any>undefined;
            this.idPeriodicidadComision = _data["idPeriodicidadComision"];
            this.meta = _data["meta"];
            this.idUnidadMeta = _data["idUnidadMeta"];
            this.idTipoComision = _data["idTipoComision"];
            this.idAgenciaNavigation = _data["idAgenciaNavigation"] ? CoAgencias.fromJS(_data["idAgenciaNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): CoComisionesAgencias {
        data = typeof data === 'object' ? data : {};
        let result = new CoComisionesAgencias();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idComisionAgencia"] = this.idComisionAgencia;
        data["idAgencia"] = this.idAgencia;
        data["fechaComision"] = this.fechaComision ? this.fechaComision.toISOString() : <any>undefined;
        data["comision"] = this.comision;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["fechaBaja"] = this.fechaBaja ? this.fechaBaja.toISOString() : <any>undefined;
        data["idPeriodicidadComision"] = this.idPeriodicidadComision;
        data["meta"] = this.meta;
        data["idUnidadMeta"] = this.idUnidadMeta;
        data["idTipoComision"] = this.idTipoComision;
        data["idAgenciaNavigation"] = this.idAgenciaNavigation ? this.idAgenciaNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface ICoComisionesAgencias {
    idComisionAgencia?: number;
    idAgencia?: number;
    fechaComision?: Date;
    comision?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    fechaBaja?: Date | undefined;
    idPeriodicidadComision?: number | undefined;
    meta?: number | undefined;
    idUnidadMeta?: number | undefined;
    idTipoComision?: number | undefined;
    idAgenciaNavigation?: CoAgencias | undefined;
}

export class PeAutorizacaoAlteracao implements IPeAutorizacaoAlteracao {
    idAutorizacao?: number;
    idAgencia?: number | undefined;
    quantidade?: number | undefined;
    criadoPor?: string | undefined;
    modificadoPor?: string | undefined;
    dataCadastro?: Date | undefined;
    dataModificacao?: Date | undefined;
    idAgenciaNavigation?: CoAgencias | undefined;

    constructor(data?: IPeAutorizacaoAlteracao) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idAutorizacao = _data["idAutorizacao"];
            this.idAgencia = _data["idAgencia"];
            this.quantidade = _data["quantidade"];
            this.criadoPor = _data["criadoPor"];
            this.modificadoPor = _data["modificadoPor"];
            this.dataCadastro = _data["dataCadastro"] ? new Date(_data["dataCadastro"].toString()) : <any>undefined;
            this.dataModificacao = _data["dataModificacao"] ? new Date(_data["dataModificacao"].toString()) : <any>undefined;
            this.idAgenciaNavigation = _data["idAgenciaNavigation"] ? CoAgencias.fromJS(_data["idAgenciaNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PeAutorizacaoAlteracao {
        data = typeof data === 'object' ? data : {};
        let result = new PeAutorizacaoAlteracao();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idAutorizacao"] = this.idAutorizacao;
        data["idAgencia"] = this.idAgencia;
        data["quantidade"] = this.quantidade;
        data["criadoPor"] = this.criadoPor;
        data["modificadoPor"] = this.modificadoPor;
        data["dataCadastro"] = this.dataCadastro ? this.dataCadastro.toISOString() : <any>undefined;
        data["dataModificacao"] = this.dataModificacao ? this.dataModificacao.toISOString() : <any>undefined;
        data["idAgenciaNavigation"] = this.idAgenciaNavigation ? this.idAgenciaNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPeAutorizacaoAlteracao {
    idAutorizacao?: number;
    idAgencia?: number | undefined;
    quantidade?: number | undefined;
    criadoPor?: string | undefined;
    modificadoPor?: string | undefined;
    dataCadastro?: Date | undefined;
    dataModificacao?: Date | undefined;
    idAgenciaNavigation?: CoAgencias | undefined;
}

export class PrAgenciasPromocion implements IPrAgenciasPromocion {
    idAgenciaPromocion?: number;
    idAgencia?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    idTipoObjetivoComision?: number;
    cantidadObjetivo?: number;
    marcaExclusionBonificaciones?: string | undefined;
    comision?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idAgenciaNavigation?: CoAgencias | undefined;
    idTipoObjetivoComisionNavigation?: PrTiposObjetivosAgencias | undefined;

    constructor(data?: IPrAgenciasPromocion) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idAgenciaPromocion = _data["idAgenciaPromocion"];
            this.idAgencia = _data["idAgencia"];
            this.fechaInicioVigencia = _data["fechaInicioVigencia"] ? new Date(_data["fechaInicioVigencia"].toString()) : <any>undefined;
            this.fechaFinVigencia = _data["fechaFinVigencia"] ? new Date(_data["fechaFinVigencia"].toString()) : <any>undefined;
            this.idTipoObjetivoComision = _data["idTipoObjetivoComision"];
            this.cantidadObjetivo = _data["cantidadObjetivo"];
            this.marcaExclusionBonificaciones = _data["marcaExclusionBonificaciones"];
            this.comision = _data["comision"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idAgenciaNavigation = _data["idAgenciaNavigation"] ? CoAgencias.fromJS(_data["idAgenciaNavigation"]) : <any>undefined;
            this.idTipoObjetivoComisionNavigation = _data["idTipoObjetivoComisionNavigation"] ? PrTiposObjetivosAgencias.fromJS(_data["idTipoObjetivoComisionNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PrAgenciasPromocion {
        data = typeof data === 'object' ? data : {};
        let result = new PrAgenciasPromocion();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idAgenciaPromocion"] = this.idAgenciaPromocion;
        data["idAgencia"] = this.idAgencia;
        data["fechaInicioVigencia"] = this.fechaInicioVigencia ? this.fechaInicioVigencia.toISOString() : <any>undefined;
        data["fechaFinVigencia"] = this.fechaFinVigencia ? this.fechaFinVigencia.toISOString() : <any>undefined;
        data["idTipoObjetivoComision"] = this.idTipoObjetivoComision;
        data["cantidadObjetivo"] = this.cantidadObjetivo;
        data["marcaExclusionBonificaciones"] = this.marcaExclusionBonificaciones;
        data["comision"] = this.comision;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idAgenciaNavigation"] = this.idAgenciaNavigation ? this.idAgenciaNavigation.toJSON() : <any>undefined;
        data["idTipoObjetivoComisionNavigation"] = this.idTipoObjetivoComisionNavigation ? this.idTipoObjetivoComisionNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPrAgenciasPromocion {
    idAgenciaPromocion?: number;
    idAgencia?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date | undefined;
    idTipoObjetivoComision?: number;
    cantidadObjetivo?: number;
    marcaExclusionBonificaciones?: string | undefined;
    comision?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idAgenciaNavigation?: CoAgencias | undefined;
    idTipoObjetivoComisionNavigation?: PrTiposObjetivosAgencias | undefined;
}

export class PrTiposObjetivosAgencias implements IPrTiposObjetivosAgencias {
    idTipoObjetivoComision?: number;
    idCompania?: number;
    codigoTipoObjetivoComision?: string | undefined;
    denominacionTipoObjetivoComision?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idCompaniaNavigation?: BsCompanias | undefined;
    prAgenciasPromocion?: PrAgenciasPromocion[] | undefined;

    constructor(data?: IPrTiposObjetivosAgencias) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idTipoObjetivoComision = _data["idTipoObjetivoComision"];
            this.idCompania = _data["idCompania"];
            this.codigoTipoObjetivoComision = _data["codigoTipoObjetivoComision"];
            this.denominacionTipoObjetivoComision = _data["denominacionTipoObjetivoComision"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idCompaniaNavigation = _data["idCompaniaNavigation"] ? BsCompanias.fromJS(_data["idCompaniaNavigation"]) : <any>undefined;
            if (Array.isArray(_data["prAgenciasPromocion"])) {
                this.prAgenciasPromocion = [] as any;
                for (let item of _data["prAgenciasPromocion"])
                    this.prAgenciasPromocion!.push(PrAgenciasPromocion.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PrTiposObjetivosAgencias {
        data = typeof data === 'object' ? data : {};
        let result = new PrTiposObjetivosAgencias();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idTipoObjetivoComision"] = this.idTipoObjetivoComision;
        data["idCompania"] = this.idCompania;
        data["codigoTipoObjetivoComision"] = this.codigoTipoObjetivoComision;
        data["denominacionTipoObjetivoComision"] = this.denominacionTipoObjetivoComision;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idCompaniaNavigation"] = this.idCompaniaNavigation ? this.idCompaniaNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.prAgenciasPromocion)) {
            data["prAgenciasPromocion"] = [];
            for (let item of this.prAgenciasPromocion)
                data["prAgenciasPromocion"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPrTiposObjetivosAgencias {
    idTipoObjetivoComision?: number;
    idCompania?: number;
    codigoTipoObjetivoComision?: string | undefined;
    denominacionTipoObjetivoComision?: string | undefined;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idCompaniaNavigation?: BsCompanias | undefined;
    prAgenciasPromocion?: PrAgenciasPromocion[] | undefined;
}

export class PrProveedoresServicios implements IPrProveedoresServicios {
    idProveedorServicio?: number;
    idPersonaJuridica?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date;
    idCompania?: number;
    fecCreaReg?: Date;
    creadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    modificadoPor?: string | undefined;
    idPersonaJuridicaNavigation?: PePersonaJuridica | undefined;

    constructor(data?: IPrProveedoresServicios) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idProveedorServicio = _data["idProveedorServicio"];
            this.idPersonaJuridica = _data["idPersonaJuridica"];
            this.fechaInicioVigencia = _data["fechaInicioVigencia"] ? new Date(_data["fechaInicioVigencia"].toString()) : <any>undefined;
            this.fechaFinVigencia = _data["fechaFinVigencia"] ? new Date(_data["fechaFinVigencia"].toString()) : <any>undefined;
            this.idCompania = _data["idCompania"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.creadoPor = _data["creadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.idPersonaJuridicaNavigation = _data["idPersonaJuridicaNavigation"] ? PePersonaJuridica.fromJS(_data["idPersonaJuridicaNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PrProveedoresServicios {
        data = typeof data === 'object' ? data : {};
        let result = new PrProveedoresServicios();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idProveedorServicio"] = this.idProveedorServicio;
        data["idPersonaJuridica"] = this.idPersonaJuridica;
        data["fechaInicioVigencia"] = this.fechaInicioVigencia ? this.fechaInicioVigencia.toISOString() : <any>undefined;
        data["fechaFinVigencia"] = this.fechaFinVigencia ? this.fechaFinVigencia.toISOString() : <any>undefined;
        data["idCompania"] = this.idCompania;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["creadoPor"] = this.creadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["idPersonaJuridicaNavigation"] = this.idPersonaJuridicaNavigation ? this.idPersonaJuridicaNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPrProveedoresServicios {
    idProveedorServicio?: number;
    idPersonaJuridica?: number;
    fechaInicioVigencia?: Date;
    fechaFinVigencia?: Date;
    idCompania?: number;
    fecCreaReg?: Date;
    creadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    modificadoPor?: string | undefined;
    idPersonaJuridicaNavigation?: PePersonaJuridica | undefined;
}

export class PrZonasImpresionServicios implements IPrZonasImpresionServicios {
    idZonaImpresion?: number;
    codigoZonaImpresion?: string | undefined;
    descripcionZonaImpresion?: string | undefined;
    idCompania?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idCompaniaNavigation?: BsCompanias | undefined;

    constructor(data?: IPrZonasImpresionServicios) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idZonaImpresion = _data["idZonaImpresion"];
            this.codigoZonaImpresion = _data["codigoZonaImpresion"];
            this.descripcionZonaImpresion = _data["descripcionZonaImpresion"];
            this.idCompania = _data["idCompania"];
            this.creadoPor = _data["creadoPor"];
            this.fecCreaReg = _data["fecCreaReg"] ? new Date(_data["fecCreaReg"].toString()) : <any>undefined;
            this.modificadoPor = _data["modificadoPor"];
            this.fecModReg = _data["fecModReg"] ? new Date(_data["fecModReg"].toString()) : <any>undefined;
            this.idCompaniaNavigation = _data["idCompaniaNavigation"] ? BsCompanias.fromJS(_data["idCompaniaNavigation"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PrZonasImpresionServicios {
        data = typeof data === 'object' ? data : {};
        let result = new PrZonasImpresionServicios();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idZonaImpresion"] = this.idZonaImpresion;
        data["codigoZonaImpresion"] = this.codigoZonaImpresion;
        data["descripcionZonaImpresion"] = this.descripcionZonaImpresion;
        data["idCompania"] = this.idCompania;
        data["creadoPor"] = this.creadoPor;
        data["fecCreaReg"] = this.fecCreaReg ? this.fecCreaReg.toISOString() : <any>undefined;
        data["modificadoPor"] = this.modificadoPor;
        data["fecModReg"] = this.fecModReg ? this.fecModReg.toISOString() : <any>undefined;
        data["idCompaniaNavigation"] = this.idCompaniaNavigation ? this.idCompaniaNavigation.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IPrZonasImpresionServicios {
    idZonaImpresion?: number;
    codigoZonaImpresion?: string | undefined;
    descripcionZonaImpresion?: string | undefined;
    idCompania?: number;
    creadoPor?: string | undefined;
    fecCreaReg?: Date;
    modificadoPor?: string | undefined;
    fecModReg?: Date | undefined;
    idCompaniaNavigation?: BsCompanias | undefined;
}

export class PareportAtlas implements IPareportAtlas {
    cdAgencia?: number;
    dscAgencia?: string | undefined;
    dscSegmento?: string | undefined;
    sellerid?: string | undefined;
    nrCertificado?: string | undefined;
    nrVoucher?: string | undefined;
    cdProduto?: string | undefined;
    dscProduto?: string | undefined;
    dtEmissao?: Date;
    dtCancelamento?: Date | undefined;
    dtInicioViagem?: Date;
    dtFimViagem?: Date;
    dtFimExtensao?: Date | undefined;
    paisOrigem?: string | undefined;
    paisDestino?: string | undefined;
    nomeCliente?: string | undefined;
    cpf?: string | undefined;
    dtNascimento?: Date | undefined;
    sexo?: string | undefined;
    valorProduto?: number | undefined;
    perDesconto?: number | undefined;
    valorVoucher?: number | undefined;
    valorExtensao?: number | undefined;
    perComissao?: number | undefined;
    valorDolar?: number | undefined;
    moeda?: string | undefined;
    formaPagto?: string | undefined;
    cdVendedor?: number | undefined;
    dscVendedor?: string | undefined;
    dscContatoEmergencia?: string | undefined;
    dscTelefoneContatoEmergencia?: string | undefined;
    dscEMailContatoEmergencia?: string | undefined;
    dscArquivoPdf?: string | undefined;
    dscFile?: string | undefined;
    idbase?: string | undefined;
    nrParcelas?: number | undefined;
    cdPpe?: number | undefined;
    dscPpe?: string | undefined;
    idDesconto?: number | undefined;
    dscDesconto?: string | undefined;
    dtEnvioBilhete?: Date;
    flytour?: string | undefined;
    cancelMesmoDia?: string | undefined;
    vigente?: string | undefined;

    constructor(data?: IPareportAtlas) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.cdAgencia = _data["cdAgencia"];
            this.dscAgencia = _data["dscAgencia"];
            this.dscSegmento = _data["dscSegmento"];
            this.sellerid = _data["sellerid"];
            this.nrCertificado = _data["nrCertificado"];
            this.nrVoucher = _data["nrVoucher"];
            this.cdProduto = _data["cdProduto"];
            this.dscProduto = _data["dscProduto"];
            this.dtEmissao = _data["dtEmissao"] ? new Date(_data["dtEmissao"].toString()) : <any>undefined;
            this.dtCancelamento = _data["dtCancelamento"] ? new Date(_data["dtCancelamento"].toString()) : <any>undefined;
            this.dtInicioViagem = _data["dtInicioViagem"] ? new Date(_data["dtInicioViagem"].toString()) : <any>undefined;
            this.dtFimViagem = _data["dtFimViagem"] ? new Date(_data["dtFimViagem"].toString()) : <any>undefined;
            this.dtFimExtensao = _data["dtFimExtensao"] ? new Date(_data["dtFimExtensao"].toString()) : <any>undefined;
            this.paisOrigem = _data["paisOrigem"];
            this.paisDestino = _data["paisDestino"];
            this.nomeCliente = _data["nomeCliente"];
            this.cpf = _data["cpf"];
            this.dtNascimento = _data["dtNascimento"] ? new Date(_data["dtNascimento"].toString()) : <any>undefined;
            this.sexo = _data["sexo"];
            this.valorProduto = _data["valorProduto"];
            this.perDesconto = _data["perDesconto"];
            this.valorVoucher = _data["valorVoucher"];
            this.valorExtensao = _data["valorExtensao"];
            this.perComissao = _data["perComissao"];
            this.valorDolar = _data["valorDolar"];
            this.moeda = _data["moeda"];
            this.formaPagto = _data["formaPagto"];
            this.cdVendedor = _data["cdVendedor"];
            this.dscVendedor = _data["dscVendedor"];
            this.dscContatoEmergencia = _data["dscContatoEmergencia"];
            this.dscTelefoneContatoEmergencia = _data["dscTelefoneContatoEmergencia"];
            this.dscEMailContatoEmergencia = _data["dscEMailContatoEmergencia"];
            this.dscArquivoPdf = _data["dscArquivoPdf"];
            this.dscFile = _data["dscFile"];
            this.idbase = _data["idbase"];
            this.nrParcelas = _data["nrParcelas"];
            this.cdPpe = _data["cdPpe"];
            this.dscPpe = _data["dscPpe"];
            this.idDesconto = _data["idDesconto"];
            this.dscDesconto = _data["dscDesconto"];
            this.dtEnvioBilhete = _data["dtEnvioBilhete"] ? new Date(_data["dtEnvioBilhete"].toString()) : <any>undefined;
            this.flytour = _data["flytour"];
            this.cancelMesmoDia = _data["cancelMesmoDia"];
            this.vigente = _data["vigente"];
        }
    }

    static fromJS(data: any): PareportAtlas {
        data = typeof data === 'object' ? data : {};
        let result = new PareportAtlas();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["cdAgencia"] = this.cdAgencia;
        data["dscAgencia"] = this.dscAgencia;
        data["dscSegmento"] = this.dscSegmento;
        data["sellerid"] = this.sellerid;
        data["nrCertificado"] = this.nrCertificado;
        data["nrVoucher"] = this.nrVoucher;
        data["cdProduto"] = this.cdProduto;
        data["dscProduto"] = this.dscProduto;
        data["dtEmissao"] = this.dtEmissao ? this.dtEmissao.toISOString() : <any>undefined;
        data["dtCancelamento"] = this.dtCancelamento ? this.dtCancelamento.toISOString() : <any>undefined;
        data["dtInicioViagem"] = this.dtInicioViagem ? this.dtInicioViagem.toISOString() : <any>undefined;
        data["dtFimViagem"] = this.dtFimViagem ? this.dtFimViagem.toISOString() : <any>undefined;
        data["dtFimExtensao"] = this.dtFimExtensao ? this.dtFimExtensao.toISOString() : <any>undefined;
        data["paisOrigem"] = this.paisOrigem;
        data["paisDestino"] = this.paisDestino;
        data["nomeCliente"] = this.nomeCliente;
        data["cpf"] = this.cpf;
        data["dtNascimento"] = this.dtNascimento ? this.dtNascimento.toISOString() : <any>undefined;
        data["sexo"] = this.sexo;
        data["valorProduto"] = this.valorProduto;
        data["perDesconto"] = this.perDesconto;
        data["valorVoucher"] = this.valorVoucher;
        data["valorExtensao"] = this.valorExtensao;
        data["perComissao"] = this.perComissao;
        data["valorDolar"] = this.valorDolar;
        data["moeda"] = this.moeda;
        data["formaPagto"] = this.formaPagto;
        data["cdVendedor"] = this.cdVendedor;
        data["dscVendedor"] = this.dscVendedor;
        data["dscContatoEmergencia"] = this.dscContatoEmergencia;
        data["dscTelefoneContatoEmergencia"] = this.dscTelefoneContatoEmergencia;
        data["dscEMailContatoEmergencia"] = this.dscEMailContatoEmergencia;
        data["dscArquivoPdf"] = this.dscArquivoPdf;
        data["dscFile"] = this.dscFile;
        data["idbase"] = this.idbase;
        data["nrParcelas"] = this.nrParcelas;
        data["cdPpe"] = this.cdPpe;
        data["dscPpe"] = this.dscPpe;
        data["idDesconto"] = this.idDesconto;
        data["dscDesconto"] = this.dscDesconto;
        data["dtEnvioBilhete"] = this.dtEnvioBilhete ? this.dtEnvioBilhete.toISOString() : <any>undefined;
        data["flytour"] = this.flytour;
        data["cancelMesmoDia"] = this.cancelMesmoDia;
        data["vigente"] = this.vigente;
        return data; 
    }
}

export interface IPareportAtlas {
    cdAgencia?: number;
    dscAgencia?: string | undefined;
    dscSegmento?: string | undefined;
    sellerid?: string | undefined;
    nrCertificado?: string | undefined;
    nrVoucher?: string | undefined;
    cdProduto?: string | undefined;
    dscProduto?: string | undefined;
    dtEmissao?: Date;
    dtCancelamento?: Date | undefined;
    dtInicioViagem?: Date;
    dtFimViagem?: Date;
    dtFimExtensao?: Date | undefined;
    paisOrigem?: string | undefined;
    paisDestino?: string | undefined;
    nomeCliente?: string | undefined;
    cpf?: string | undefined;
    dtNascimento?: Date | undefined;
    sexo?: string | undefined;
    valorProduto?: number | undefined;
    perDesconto?: number | undefined;
    valorVoucher?: number | undefined;
    valorExtensao?: number | undefined;
    perComissao?: number | undefined;
    valorDolar?: number | undefined;
    moeda?: string | undefined;
    formaPagto?: string | undefined;
    cdVendedor?: number | undefined;
    dscVendedor?: string | undefined;
    dscContatoEmergencia?: string | undefined;
    dscTelefoneContatoEmergencia?: string | undefined;
    dscEMailContatoEmergencia?: string | undefined;
    dscArquivoPdf?: string | undefined;
    dscFile?: string | undefined;
    idbase?: string | undefined;
    nrParcelas?: number | undefined;
    cdPpe?: number | undefined;
    dscPpe?: string | undefined;
    idDesconto?: number | undefined;
    dscDesconto?: string | undefined;
    dtEnvioBilhete?: Date;
    flytour?: string | undefined;
    cancelMesmoDia?: string | undefined;
    vigente?: string | undefined;
}

export class UpdateCadastroPessoaCommand implements IUpdateCadastroPessoaCommand {
    nrVoucher?: string | undefined;
    person?: PePersonaFisicaDTO | undefined;

    constructor(data?: IUpdateCadastroPessoaCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.nrVoucher = _data["nrVoucher"];
            this.person = _data["person"] ? PePersonaFisicaDTO.fromJS(_data["person"]) : <any>undefined;
        }
    }

    static fromJS(data: any): UpdateCadastroPessoaCommand {
        data = typeof data === 'object' ? data : {};
        let result = new UpdateCadastroPessoaCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["nrVoucher"] = this.nrVoucher;
        data["person"] = this.person ? this.person.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IUpdateCadastroPessoaCommand {
    nrVoucher?: string | undefined;
    person?: PePersonaFisicaDTO | undefined;
}

export class PePersonaFisicaDTO implements IPePersonaFisicaDTO {
    idPersona?: number;
    apellido?: string | undefined;
    nombre?: string | undefined;
    fechaNacimiento?: Date | undefined;
    idPaisResidencia?: number;
    sexo?: string | undefined;
    idResponsableIva?: number | undefined;
    idPaisResidenciaNavigation?: BsPaises | undefined;
    coClientes?: CoClientes[] | undefined;
    coClientesIndividuales?: CoClientesIndividuales[] | undefined;
    coComposicionGrupoClienteIndividual?: CoComposicionGrupoClienteIndividual[] | undefined;
    coConsumosVentas?: CoConsumosVentas[] | undefined;
    coEjecutivos?: CoEjecutivos[] | undefined;
    coNominasEmpresas?: CoNominasEmpresas[] | undefined;
    coVendedoresAgencias?: CoVendedoresAgencias[] | undefined;
    peAlteracaoPessoaFisica?: PeAlteracaoPessoaFisica[] | undefined;
    peCanalesPersona?: PeCanalesPersona[] | undefined;
    peDocumentosPersonaFisica?: PeDocumentosPersonaFisica[] | undefined;
    peDomiciliosPersona?: PeDomiciliosPersona[] | undefined;
    poBeneficiariosPoliza?: PoBeneficiariosPoliza[] | undefined;

    constructor(data?: IPePersonaFisicaDTO) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idPersona = _data["idPersona"];
            this.apellido = _data["apellido"];
            this.nombre = _data["nombre"];
            this.fechaNacimiento = _data["fechaNacimiento"] ? new Date(_data["fechaNacimiento"].toString()) : <any>undefined;
            this.idPaisResidencia = _data["idPaisResidencia"];
            this.sexo = _data["sexo"];
            this.idResponsableIva = _data["idResponsableIva"];
            this.idPaisResidenciaNavigation = _data["idPaisResidenciaNavigation"] ? BsPaises.fromJS(_data["idPaisResidenciaNavigation"]) : <any>undefined;
            if (Array.isArray(_data["coClientes"])) {
                this.coClientes = [] as any;
                for (let item of _data["coClientes"])
                    this.coClientes!.push(CoClientes.fromJS(item));
            }
            if (Array.isArray(_data["coClientesIndividuales"])) {
                this.coClientesIndividuales = [] as any;
                for (let item of _data["coClientesIndividuales"])
                    this.coClientesIndividuales!.push(CoClientesIndividuales.fromJS(item));
            }
            if (Array.isArray(_data["coComposicionGrupoClienteIndividual"])) {
                this.coComposicionGrupoClienteIndividual = [] as any;
                for (let item of _data["coComposicionGrupoClienteIndividual"])
                    this.coComposicionGrupoClienteIndividual!.push(CoComposicionGrupoClienteIndividual.fromJS(item));
            }
            if (Array.isArray(_data["coConsumosVentas"])) {
                this.coConsumosVentas = [] as any;
                for (let item of _data["coConsumosVentas"])
                    this.coConsumosVentas!.push(CoConsumosVentas.fromJS(item));
            }
            if (Array.isArray(_data["coEjecutivos"])) {
                this.coEjecutivos = [] as any;
                for (let item of _data["coEjecutivos"])
                    this.coEjecutivos!.push(CoEjecutivos.fromJS(item));
            }
            if (Array.isArray(_data["coNominasEmpresas"])) {
                this.coNominasEmpresas = [] as any;
                for (let item of _data["coNominasEmpresas"])
                    this.coNominasEmpresas!.push(CoNominasEmpresas.fromJS(item));
            }
            if (Array.isArray(_data["coVendedoresAgencias"])) {
                this.coVendedoresAgencias = [] as any;
                for (let item of _data["coVendedoresAgencias"])
                    this.coVendedoresAgencias!.push(CoVendedoresAgencias.fromJS(item));
            }
            if (Array.isArray(_data["peAlteracaoPessoaFisica"])) {
                this.peAlteracaoPessoaFisica = [] as any;
                for (let item of _data["peAlteracaoPessoaFisica"])
                    this.peAlteracaoPessoaFisica!.push(PeAlteracaoPessoaFisica.fromJS(item));
            }
            if (Array.isArray(_data["peCanalesPersona"])) {
                this.peCanalesPersona = [] as any;
                for (let item of _data["peCanalesPersona"])
                    this.peCanalesPersona!.push(PeCanalesPersona.fromJS(item));
            }
            if (Array.isArray(_data["peDocumentosPersonaFisica"])) {
                this.peDocumentosPersonaFisica = [] as any;
                for (let item of _data["peDocumentosPersonaFisica"])
                    this.peDocumentosPersonaFisica!.push(PeDocumentosPersonaFisica.fromJS(item));
            }
            if (Array.isArray(_data["peDomiciliosPersona"])) {
                this.peDomiciliosPersona = [] as any;
                for (let item of _data["peDomiciliosPersona"])
                    this.peDomiciliosPersona!.push(PeDomiciliosPersona.fromJS(item));
            }
            if (Array.isArray(_data["poBeneficiariosPoliza"])) {
                this.poBeneficiariosPoliza = [] as any;
                for (let item of _data["poBeneficiariosPoliza"])
                    this.poBeneficiariosPoliza!.push(PoBeneficiariosPoliza.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PePersonaFisicaDTO {
        data = typeof data === 'object' ? data : {};
        let result = new PePersonaFisicaDTO();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idPersona"] = this.idPersona;
        data["apellido"] = this.apellido;
        data["nombre"] = this.nombre;
        data["fechaNacimiento"] = this.fechaNacimiento ? this.fechaNacimiento.toISOString() : <any>undefined;
        data["idPaisResidencia"] = this.idPaisResidencia;
        data["sexo"] = this.sexo;
        data["idResponsableIva"] = this.idResponsableIva;
        data["idPaisResidenciaNavigation"] = this.idPaisResidenciaNavigation ? this.idPaisResidenciaNavigation.toJSON() : <any>undefined;
        if (Array.isArray(this.coClientes)) {
            data["coClientes"] = [];
            for (let item of this.coClientes)
                data["coClientes"].push(item.toJSON());
        }
        if (Array.isArray(this.coClientesIndividuales)) {
            data["coClientesIndividuales"] = [];
            for (let item of this.coClientesIndividuales)
                data["coClientesIndividuales"].push(item.toJSON());
        }
        if (Array.isArray(this.coComposicionGrupoClienteIndividual)) {
            data["coComposicionGrupoClienteIndividual"] = [];
            for (let item of this.coComposicionGrupoClienteIndividual)
                data["coComposicionGrupoClienteIndividual"].push(item.toJSON());
        }
        if (Array.isArray(this.coConsumosVentas)) {
            data["coConsumosVentas"] = [];
            for (let item of this.coConsumosVentas)
                data["coConsumosVentas"].push(item.toJSON());
        }
        if (Array.isArray(this.coEjecutivos)) {
            data["coEjecutivos"] = [];
            for (let item of this.coEjecutivos)
                data["coEjecutivos"].push(item.toJSON());
        }
        if (Array.isArray(this.coNominasEmpresas)) {
            data["coNominasEmpresas"] = [];
            for (let item of this.coNominasEmpresas)
                data["coNominasEmpresas"].push(item.toJSON());
        }
        if (Array.isArray(this.coVendedoresAgencias)) {
            data["coVendedoresAgencias"] = [];
            for (let item of this.coVendedoresAgencias)
                data["coVendedoresAgencias"].push(item.toJSON());
        }
        if (Array.isArray(this.peAlteracaoPessoaFisica)) {
            data["peAlteracaoPessoaFisica"] = [];
            for (let item of this.peAlteracaoPessoaFisica)
                data["peAlteracaoPessoaFisica"].push(item.toJSON());
        }
        if (Array.isArray(this.peCanalesPersona)) {
            data["peCanalesPersona"] = [];
            for (let item of this.peCanalesPersona)
                data["peCanalesPersona"].push(item.toJSON());
        }
        if (Array.isArray(this.peDocumentosPersonaFisica)) {
            data["peDocumentosPersonaFisica"] = [];
            for (let item of this.peDocumentosPersonaFisica)
                data["peDocumentosPersonaFisica"].push(item.toJSON());
        }
        if (Array.isArray(this.peDomiciliosPersona)) {
            data["peDomiciliosPersona"] = [];
            for (let item of this.peDomiciliosPersona)
                data["peDomiciliosPersona"].push(item.toJSON());
        }
        if (Array.isArray(this.poBeneficiariosPoliza)) {
            data["poBeneficiariosPoliza"] = [];
            for (let item of this.poBeneficiariosPoliza)
                data["poBeneficiariosPoliza"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IPePersonaFisicaDTO {
    idPersona?: number;
    apellido?: string | undefined;
    nombre?: string | undefined;
    fechaNacimiento?: Date | undefined;
    idPaisResidencia?: number;
    sexo?: string | undefined;
    idResponsableIva?: number | undefined;
    idPaisResidenciaNavigation?: BsPaises | undefined;
    coClientes?: CoClientes[] | undefined;
    coClientesIndividuales?: CoClientesIndividuales[] | undefined;
    coComposicionGrupoClienteIndividual?: CoComposicionGrupoClienteIndividual[] | undefined;
    coConsumosVentas?: CoConsumosVentas[] | undefined;
    coEjecutivos?: CoEjecutivos[] | undefined;
    coNominasEmpresas?: CoNominasEmpresas[] | undefined;
    coVendedoresAgencias?: CoVendedoresAgencias[] | undefined;
    peAlteracaoPessoaFisica?: PeAlteracaoPessoaFisica[] | undefined;
    peCanalesPersona?: PeCanalesPersona[] | undefined;
    peDocumentosPersonaFisica?: PeDocumentosPersonaFisica[] | undefined;
    peDomiciliosPersona?: PeDomiciliosPersona[] | undefined;
    poBeneficiariosPoliza?: PoBeneficiariosPoliza[] | undefined;
}

export class BilheteDTO implements IBilheteDTO {
    nrVoucher?: string | undefined;
    nome?: string | undefined;
    telefone?: string | undefined;
    celular?: string | undefined;
    email?: string | undefined;
    cpf?: string | undefined;
    sexo?: string | undefined;
    dtNascimento?: Date | undefined;
    contatoEmergencia?: string | undefined;
    contatoEmergenciaTelefone?: string | undefined;
    agencia?: string | undefined;
    segmento?: string | undefined;
    produto?: string | undefined;
    cupom?: string | undefined;
    sellerID?: string | undefined;
    inicio?: Date;
    termino?: Date;
    emissao?: Date;
    destino?: string | undefined;
    valor?: number | undefined;
    valorDolar?: number | undefined;
    formaPgto?: string | undefined;
    dtCancelamento?: Date | undefined;

    constructor(data?: IBilheteDTO) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.nrVoucher = _data["nrVoucher"];
            this.nome = _data["nome"];
            this.telefone = _data["telefone"];
            this.celular = _data["celular"];
            this.email = _data["email"];
            this.cpf = _data["cpf"];
            this.sexo = _data["sexo"];
            this.dtNascimento = _data["dtNascimento"] ? new Date(_data["dtNascimento"].toString()) : <any>undefined;
            this.contatoEmergencia = _data["contatoEmergencia"];
            this.contatoEmergenciaTelefone = _data["contatoEmergenciaTelefone"];
            this.agencia = _data["agencia"];
            this.segmento = _data["segmento"];
            this.produto = _data["produto"];
            this.cupom = _data["cupom"];
            this.sellerID = _data["sellerID"];
            this.inicio = _data["inicio"] ? new Date(_data["inicio"].toString()) : <any>undefined;
            this.termino = _data["termino"] ? new Date(_data["termino"].toString()) : <any>undefined;
            this.emissao = _data["emissao"] ? new Date(_data["emissao"].toString()) : <any>undefined;
            this.destino = _data["destino"];
            this.valor = _data["valor"];
            this.valorDolar = _data["valorDolar"];
            this.formaPgto = _data["formaPgto"];
            this.dtCancelamento = _data["dtCancelamento"] ? new Date(_data["dtCancelamento"].toString()) : <any>undefined;
        }
    }

    static fromJS(data: any): BilheteDTO {
        data = typeof data === 'object' ? data : {};
        let result = new BilheteDTO();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["nrVoucher"] = this.nrVoucher;
        data["nome"] = this.nome;
        data["telefone"] = this.telefone;
        data["celular"] = this.celular;
        data["email"] = this.email;
        data["cpf"] = this.cpf;
        data["sexo"] = this.sexo;
        data["dtNascimento"] = this.dtNascimento ? this.dtNascimento.toISOString() : <any>undefined;
        data["contatoEmergencia"] = this.contatoEmergencia;
        data["contatoEmergenciaTelefone"] = this.contatoEmergenciaTelefone;
        data["agencia"] = this.agencia;
        data["segmento"] = this.segmento;
        data["produto"] = this.produto;
        data["cupom"] = this.cupom;
        data["sellerID"] = this.sellerID;
        data["inicio"] = this.inicio ? this.inicio.toISOString() : <any>undefined;
        data["termino"] = this.termino ? this.termino.toISOString() : <any>undefined;
        data["emissao"] = this.emissao ? this.emissao.toISOString() : <any>undefined;
        data["destino"] = this.destino;
        data["valor"] = this.valor;
        data["valorDolar"] = this.valorDolar;
        data["formaPgto"] = this.formaPgto;
        data["dtCancelamento"] = this.dtCancelamento ? this.dtCancelamento.toISOString() : <any>undefined;
        return data; 
    }
}

export interface IBilheteDTO {
    nrVoucher?: string | undefined;
    nome?: string | undefined;
    telefone?: string | undefined;
    celular?: string | undefined;
    email?: string | undefined;
    cpf?: string | undefined;
    sexo?: string | undefined;
    dtNascimento?: Date | undefined;
    contatoEmergencia?: string | undefined;
    contatoEmergenciaTelefone?: string | undefined;
    agencia?: string | undefined;
    segmento?: string | undefined;
    produto?: string | undefined;
    cupom?: string | undefined;
    sellerID?: string | undefined;
    inicio?: Date;
    termino?: Date;
    emissao?: Date;
    destino?: string | undefined;
    valor?: number | undefined;
    valorDolar?: number | undefined;
    formaPgto?: string | undefined;
    dtCancelamento?: Date | undefined;
}

export class MotivoDTO implements IMotivoDTO {
    id?: number;
    idMotivo?: number;
    descricao?: string | undefined;

    constructor(data?: IMotivoDTO) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idMotivo = _data["idMotivo"];
            this.descricao = _data["descricao"];
        }
    }

    static fromJS(data: any): MotivoDTO {
        data = typeof data === 'object' ? data : {};
        let result = new MotivoDTO();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idMotivo"] = this.idMotivo;
        data["descricao"] = this.descricao;
        return data; 
    }
}

export interface IMotivoDTO {
    id?: number;
    idMotivo?: number;
    descricao?: string | undefined;
}

export class CanalVendaDTO implements ICanalVendaDTO {
    id?: number;
    idCanalVenda?: number;
    descricao?: string | undefined;

    constructor(data?: ICanalVendaDTO) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idCanalVenda = _data["idCanalVenda"];
            this.descricao = _data["descricao"];
        }
    }

    static fromJS(data: any): CanalVendaDTO {
        data = typeof data === 'object' ? data : {};
        let result = new CanalVendaDTO();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idCanalVenda"] = this.idCanalVenda;
        data["descricao"] = this.descricao;
        return data; 
    }
}

export interface ICanalVendaDTO {
    id?: number;
    idCanalVenda?: number;
    descricao?: string | undefined;
}

export class AssuntoDTO implements IAssuntoDTO {
    id?: number | undefined;
    idAssunto?: number;
    descricao?: string | undefined;

    constructor(data?: IAssuntoDTO) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idAssunto = _data["idAssunto"];
            this.descricao = _data["descricao"];
        }
    }

    static fromJS(data: any): AssuntoDTO {
        data = typeof data === 'object' ? data : {};
        let result = new AssuntoDTO();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idAssunto"] = this.idAssunto;
        data["descricao"] = this.descricao;
        return data; 
    }
}

export interface IAssuntoDTO {
    id?: number | undefined;
    idAssunto?: number;
    descricao?: string | undefined;
}

export class CanalReclamacaoDTO implements ICanalReclamacaoDTO {
    id?: number;
    idCanalReclamacao?: number;
    descricao?: string | undefined;

    constructor(data?: ICanalReclamacaoDTO) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idCanalReclamacao = _data["idCanalReclamacao"];
            this.descricao = _data["descricao"];
        }
    }

    static fromJS(data: any): CanalReclamacaoDTO {
        data = typeof data === 'object' ? data : {};
        let result = new CanalReclamacaoDTO();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idCanalReclamacao"] = this.idCanalReclamacao;
        data["descricao"] = this.descricao;
        return data; 
    }
}

export interface ICanalReclamacaoDTO {
    id?: number;
    idCanalReclamacao?: number;
    descricao?: string | undefined;
}

export class TbProposta implements ITbProposta {
    nrProposta?: string | undefined;
    nmPagador?: string | undefined;
    nrCpf?: string | undefined;
    dtNascimento?: Date | undefined;
    nmEndereco?: string | undefined;
    nrRuaEndereco?: string | undefined;
    nmComplemento?: string | undefined;
    nmCep?: string | undefined;
    nmUf?: string | undefined;
    nmBairro?: string | undefined;
    nmCidade?: string | undefined;
    nrTelefoneCelular?: string | undefined;
    nrTelefoneResidencial?: string | undefined;
    nrTelefoneComercial?: string | undefined;
    nmEmail?: string | undefined;
    dtInicioViagem?: Date | undefined;
    dtFimViagem?: Date | undefined;
    cdUfOrigemViagem?: string | undefined;
    idPaisDestinoViagem?: string | undefined;
    idMotivoViagem?: string | undefined;
    nmContatoEmergencia?: string | undefined;
    nrTelefoneEmergenciaCelular?: string | undefined;
    nrTelefoneEmergenciaResidencial?: string | undefined;
    nrTelefoneEmergenciaComercial?: string | undefined;
    nrIdentificadorPagamento?: string | undefined;
    cdFormaPagamento?: string | undefined;
    cdBandeiraCartao?: string | undefined;
    qtdeParcelas?: string | undefined;
    vlPago?: number | undefined;
    cdTpMovimento?: string | undefined;
    vlCotacao?: number | undefined;
    nrCupom?: string | undefined;
    cdTpCupom?: string | undefined;
    peDescontoCupom?: number | undefined;
    dvBagagemEspecial?: string | undefined;
    dvCompraProtegida?: string | undefined;
    vlPremio?: number | undefined;
    idCanalVenda?: string | undefined;
    dvPossuiDps?: string | undefined;
    dtAssinaturaDps?: Date | undefined;
    dsUsuaIncl?: string | undefined;
    dhInclusao?: Date;
    dsUsuaAlte?: string | undefined;
    dhAlteracao?: Date;
    cdBandeira?: number | undefined;
    cdSexo?: string | undefined;
    dtCotacao?: Date | undefined;
    braspagTransactionId?: string | undefined;
    idpoliza?: number | undefined;
    idbase?: string | undefined;
    qtdeDiasViagem?: number | undefined;
    canal1?: string | undefined;
    canal2?: string | undefined;
    usuario?: string | undefined;
    agencia?: string | undefined;
    dvRegresso?: boolean | undefined;
    dtRegresso?: Date | undefined;
    comentario?: string | undefined;
    passageiros?: TbPropostaSegurado[] | undefined;

    constructor(data?: ITbProposta) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.nrProposta = _data["nrProposta"];
            this.nmPagador = _data["nmPagador"];
            this.nrCpf = _data["nrCpf"];
            this.dtNascimento = _data["dtNascimento"] ? new Date(_data["dtNascimento"].toString()) : <any>undefined;
            this.nmEndereco = _data["nmEndereco"];
            this.nrRuaEndereco = _data["nrRuaEndereco"];
            this.nmComplemento = _data["nmComplemento"];
            this.nmCep = _data["nmCep"];
            this.nmUf = _data["nmUf"];
            this.nmBairro = _data["nmBairro"];
            this.nmCidade = _data["nmCidade"];
            this.nrTelefoneCelular = _data["nrTelefoneCelular"];
            this.nrTelefoneResidencial = _data["nrTelefoneResidencial"];
            this.nrTelefoneComercial = _data["nrTelefoneComercial"];
            this.nmEmail = _data["nmEmail"];
            this.dtInicioViagem = _data["dtInicioViagem"] ? new Date(_data["dtInicioViagem"].toString()) : <any>undefined;
            this.dtFimViagem = _data["dtFimViagem"] ? new Date(_data["dtFimViagem"].toString()) : <any>undefined;
            this.cdUfOrigemViagem = _data["cdUfOrigemViagem"];
            this.idPaisDestinoViagem = _data["idPaisDestinoViagem"];
            this.idMotivoViagem = _data["idMotivoViagem"];
            this.nmContatoEmergencia = _data["nmContatoEmergencia"];
            this.nrTelefoneEmergenciaCelular = _data["nrTelefoneEmergenciaCelular"];
            this.nrTelefoneEmergenciaResidencial = _data["nrTelefoneEmergenciaResidencial"];
            this.nrTelefoneEmergenciaComercial = _data["nrTelefoneEmergenciaComercial"];
            this.nrIdentificadorPagamento = _data["nrIdentificadorPagamento"];
            this.cdFormaPagamento = _data["cdFormaPagamento"];
            this.cdBandeiraCartao = _data["cdBandeiraCartao"];
            this.qtdeParcelas = _data["qtdeParcelas"];
            this.vlPago = _data["vlPago"];
            this.cdTpMovimento = _data["cdTpMovimento"];
            this.vlCotacao = _data["vlCotacao"];
            this.nrCupom = _data["nrCupom"];
            this.cdTpCupom = _data["cdTpCupom"];
            this.peDescontoCupom = _data["peDescontoCupom"];
            this.dvBagagemEspecial = _data["dvBagagemEspecial"];
            this.dvCompraProtegida = _data["dvCompraProtegida"];
            this.vlPremio = _data["vlPremio"];
            this.idCanalVenda = _data["idCanalVenda"];
            this.dvPossuiDps = _data["dvPossuiDps"];
            this.dtAssinaturaDps = _data["dtAssinaturaDps"] ? new Date(_data["dtAssinaturaDps"].toString()) : <any>undefined;
            this.dsUsuaIncl = _data["dsUsuaIncl"];
            this.dhInclusao = _data["dhInclusao"] ? new Date(_data["dhInclusao"].toString()) : <any>undefined;
            this.dsUsuaAlte = _data["dsUsuaAlte"];
            this.dhAlteracao = _data["dhAlteracao"] ? new Date(_data["dhAlteracao"].toString()) : <any>undefined;
            this.cdBandeira = _data["cdBandeira"];
            this.cdSexo = _data["cdSexo"];
            this.dtCotacao = _data["dtCotacao"] ? new Date(_data["dtCotacao"].toString()) : <any>undefined;
            this.braspagTransactionId = _data["braspagTransactionId"];
            this.idpoliza = _data["idpoliza"];
            this.idbase = _data["idbase"];
            this.qtdeDiasViagem = _data["qtdeDiasViagem"];
            this.canal1 = _data["canal1"];
            this.canal2 = _data["canal2"];
            this.usuario = _data["usuario"];
            this.agencia = _data["agencia"];
            this.dvRegresso = _data["dvRegresso"];
            this.dtRegresso = _data["dtRegresso"] ? new Date(_data["dtRegresso"].toString()) : <any>undefined;
            this.comentario = _data["comentario"];
            if (Array.isArray(_data["passageiros"])) {
                this.passageiros = [] as any;
                for (let item of _data["passageiros"])
                    this.passageiros!.push(TbPropostaSegurado.fromJS(item));
            }
        }
    }

    static fromJS(data: any): TbProposta {
        data = typeof data === 'object' ? data : {};
        let result = new TbProposta();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["nrProposta"] = this.nrProposta;
        data["nmPagador"] = this.nmPagador;
        data["nrCpf"] = this.nrCpf;
        data["dtNascimento"] = this.dtNascimento ? this.dtNascimento.toISOString() : <any>undefined;
        data["nmEndereco"] = this.nmEndereco;
        data["nrRuaEndereco"] = this.nrRuaEndereco;
        data["nmComplemento"] = this.nmComplemento;
        data["nmCep"] = this.nmCep;
        data["nmUf"] = this.nmUf;
        data["nmBairro"] = this.nmBairro;
        data["nmCidade"] = this.nmCidade;
        data["nrTelefoneCelular"] = this.nrTelefoneCelular;
        data["nrTelefoneResidencial"] = this.nrTelefoneResidencial;
        data["nrTelefoneComercial"] = this.nrTelefoneComercial;
        data["nmEmail"] = this.nmEmail;
        data["dtInicioViagem"] = this.dtInicioViagem ? this.dtInicioViagem.toISOString() : <any>undefined;
        data["dtFimViagem"] = this.dtFimViagem ? this.dtFimViagem.toISOString() : <any>undefined;
        data["cdUfOrigemViagem"] = this.cdUfOrigemViagem;
        data["idPaisDestinoViagem"] = this.idPaisDestinoViagem;
        data["idMotivoViagem"] = this.idMotivoViagem;
        data["nmContatoEmergencia"] = this.nmContatoEmergencia;
        data["nrTelefoneEmergenciaCelular"] = this.nrTelefoneEmergenciaCelular;
        data["nrTelefoneEmergenciaResidencial"] = this.nrTelefoneEmergenciaResidencial;
        data["nrTelefoneEmergenciaComercial"] = this.nrTelefoneEmergenciaComercial;
        data["nrIdentificadorPagamento"] = this.nrIdentificadorPagamento;
        data["cdFormaPagamento"] = this.cdFormaPagamento;
        data["cdBandeiraCartao"] = this.cdBandeiraCartao;
        data["qtdeParcelas"] = this.qtdeParcelas;
        data["vlPago"] = this.vlPago;
        data["cdTpMovimento"] = this.cdTpMovimento;
        data["vlCotacao"] = this.vlCotacao;
        data["nrCupom"] = this.nrCupom;
        data["cdTpCupom"] = this.cdTpCupom;
        data["peDescontoCupom"] = this.peDescontoCupom;
        data["dvBagagemEspecial"] = this.dvBagagemEspecial;
        data["dvCompraProtegida"] = this.dvCompraProtegida;
        data["vlPremio"] = this.vlPremio;
        data["idCanalVenda"] = this.idCanalVenda;
        data["dvPossuiDps"] = this.dvPossuiDps;
        data["dtAssinaturaDps"] = this.dtAssinaturaDps ? this.dtAssinaturaDps.toISOString() : <any>undefined;
        data["dsUsuaIncl"] = this.dsUsuaIncl;
        data["dhInclusao"] = this.dhInclusao ? this.dhInclusao.toISOString() : <any>undefined;
        data["dsUsuaAlte"] = this.dsUsuaAlte;
        data["dhAlteracao"] = this.dhAlteracao ? this.dhAlteracao.toISOString() : <any>undefined;
        data["cdBandeira"] = this.cdBandeira;
        data["cdSexo"] = this.cdSexo;
        data["dtCotacao"] = this.dtCotacao ? this.dtCotacao.toISOString() : <any>undefined;
        data["braspagTransactionId"] = this.braspagTransactionId;
        data["idpoliza"] = this.idpoliza;
        data["idbase"] = this.idbase;
        data["qtdeDiasViagem"] = this.qtdeDiasViagem;
        data["canal1"] = this.canal1;
        data["canal2"] = this.canal2;
        data["usuario"] = this.usuario;
        data["agencia"] = this.agencia;
        data["dvRegresso"] = this.dvRegresso;
        data["dtRegresso"] = this.dtRegresso ? this.dtRegresso.toISOString() : <any>undefined;
        data["comentario"] = this.comentario;
        if (Array.isArray(this.passageiros)) {
            data["passageiros"] = [];
            for (let item of this.passageiros)
                data["passageiros"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ITbProposta {
    nrProposta?: string | undefined;
    nmPagador?: string | undefined;
    nrCpf?: string | undefined;
    dtNascimento?: Date | undefined;
    nmEndereco?: string | undefined;
    nrRuaEndereco?: string | undefined;
    nmComplemento?: string | undefined;
    nmCep?: string | undefined;
    nmUf?: string | undefined;
    nmBairro?: string | undefined;
    nmCidade?: string | undefined;
    nrTelefoneCelular?: string | undefined;
    nrTelefoneResidencial?: string | undefined;
    nrTelefoneComercial?: string | undefined;
    nmEmail?: string | undefined;
    dtInicioViagem?: Date | undefined;
    dtFimViagem?: Date | undefined;
    cdUfOrigemViagem?: string | undefined;
    idPaisDestinoViagem?: string | undefined;
    idMotivoViagem?: string | undefined;
    nmContatoEmergencia?: string | undefined;
    nrTelefoneEmergenciaCelular?: string | undefined;
    nrTelefoneEmergenciaResidencial?: string | undefined;
    nrTelefoneEmergenciaComercial?: string | undefined;
    nrIdentificadorPagamento?: string | undefined;
    cdFormaPagamento?: string | undefined;
    cdBandeiraCartao?: string | undefined;
    qtdeParcelas?: string | undefined;
    vlPago?: number | undefined;
    cdTpMovimento?: string | undefined;
    vlCotacao?: number | undefined;
    nrCupom?: string | undefined;
    cdTpCupom?: string | undefined;
    peDescontoCupom?: number | undefined;
    dvBagagemEspecial?: string | undefined;
    dvCompraProtegida?: string | undefined;
    vlPremio?: number | undefined;
    idCanalVenda?: string | undefined;
    dvPossuiDps?: string | undefined;
    dtAssinaturaDps?: Date | undefined;
    dsUsuaIncl?: string | undefined;
    dhInclusao?: Date;
    dsUsuaAlte?: string | undefined;
    dhAlteracao?: Date;
    cdBandeira?: number | undefined;
    cdSexo?: string | undefined;
    dtCotacao?: Date | undefined;
    braspagTransactionId?: string | undefined;
    idpoliza?: number | undefined;
    idbase?: string | undefined;
    qtdeDiasViagem?: number | undefined;
    canal1?: string | undefined;
    canal2?: string | undefined;
    usuario?: string | undefined;
    agencia?: string | undefined;
    dvRegresso?: boolean | undefined;
    dtRegresso?: Date | undefined;
    comentario?: string | undefined;
    passageiros?: TbPropostaSegurado[] | undefined;
}

export class TbPropostaSegurado implements ITbPropostaSegurado {
    nrVoucher?: string | undefined;
    nrProposta?: string | undefined;
    nrApolice?: string | undefined;
    nmSegurado?: string | undefined;
    nrCpf?: string | undefined;
    dtNascimento?: Date | undefined;
    nmEndereco?: string | undefined;
    nrRuaEndereco?: string | undefined;
    nmComplemento?: string | undefined;
    nmCep?: string | undefined;
    nmUf?: string | undefined;
    nmBairro?: string | undefined;
    nmCidade?: string | undefined;
    nrTelefoneCelular?: string | undefined;
    nrTelefoneResidencial?: string | undefined;
    nrTelefoneComercial?: string | undefined;
    nmEmail?: string | undefined;
    dvPpe?: string | undefined;
    idParentescoPpe?: string | undefined;
    cdProduto?: string | undefined;
    vlPremioBruto?: number | undefined;
    vlPremioLiquido?: number | undefined;
    dhInicioExtensao?: Date | undefined;
    dhTerminoExtensao?: Date | undefined;
    vlExtensao?: number | undefined;
    dhCancelamento?: Date | undefined;
    dhRetornoApolice?: Date | undefined;
    dsUsuaIncl?: string | undefined;
    dhInclusao?: Date;
    dsUsuaAlte?: string | undefined;
    dhAlteracao?: Date;
    cdSexo?: string | undefined;
    idPaisDestinoViagem?: string | undefined;
    dsPaisDestinoViagem?: string | undefined;
    idAgencia?: number | undefined;
    idVendedor?: number | undefined;
    dsProduto?: string | undefined;
    dsFile?: string | undefined;
    dsPathArquivoPdf?: string | undefined;
    nrIdadeInicial?: number | undefined;
    nrIdadeFinal?: number | undefined;
    dvBagagemEspecial?: string | undefined;
    dvCompraProtegida?: string | undefined;
    cpfCnpjAgencia?: string | undefined;
    cpfCnpjVendedor?: string | undefined;
    dvCancelamento?: string | undefined;
    integradoI4Pro?: boolean;
    integradoCancelamento?: boolean;

    constructor(data?: ITbPropostaSegurado) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.nrVoucher = _data["nrVoucher"];
            this.nrProposta = _data["nrProposta"];
            this.nrApolice = _data["nrApolice"];
            this.nmSegurado = _data["nmSegurado"];
            this.nrCpf = _data["nrCpf"];
            this.dtNascimento = _data["dtNascimento"] ? new Date(_data["dtNascimento"].toString()) : <any>undefined;
            this.nmEndereco = _data["nmEndereco"];
            this.nrRuaEndereco = _data["nrRuaEndereco"];
            this.nmComplemento = _data["nmComplemento"];
            this.nmCep = _data["nmCep"];
            this.nmUf = _data["nmUf"];
            this.nmBairro = _data["nmBairro"];
            this.nmCidade = _data["nmCidade"];
            this.nrTelefoneCelular = _data["nrTelefoneCelular"];
            this.nrTelefoneResidencial = _data["nrTelefoneResidencial"];
            this.nrTelefoneComercial = _data["nrTelefoneComercial"];
            this.nmEmail = _data["nmEmail"];
            this.dvPpe = _data["dvPpe"];
            this.idParentescoPpe = _data["idParentescoPpe"];
            this.cdProduto = _data["cdProduto"];
            this.vlPremioBruto = _data["vlPremioBruto"];
            this.vlPremioLiquido = _data["vlPremioLiquido"];
            this.dhInicioExtensao = _data["dhInicioExtensao"] ? new Date(_data["dhInicioExtensao"].toString()) : <any>undefined;
            this.dhTerminoExtensao = _data["dhTerminoExtensao"] ? new Date(_data["dhTerminoExtensao"].toString()) : <any>undefined;
            this.vlExtensao = _data["vlExtensao"];
            this.dhCancelamento = _data["dhCancelamento"] ? new Date(_data["dhCancelamento"].toString()) : <any>undefined;
            this.dhRetornoApolice = _data["dhRetornoApolice"] ? new Date(_data["dhRetornoApolice"].toString()) : <any>undefined;
            this.dsUsuaIncl = _data["dsUsuaIncl"];
            this.dhInclusao = _data["dhInclusao"] ? new Date(_data["dhInclusao"].toString()) : <any>undefined;
            this.dsUsuaAlte = _data["dsUsuaAlte"];
            this.dhAlteracao = _data["dhAlteracao"] ? new Date(_data["dhAlteracao"].toString()) : <any>undefined;
            this.cdSexo = _data["cdSexo"];
            this.idPaisDestinoViagem = _data["idPaisDestinoViagem"];
            this.dsPaisDestinoViagem = _data["dsPaisDestinoViagem"];
            this.idAgencia = _data["idAgencia"];
            this.idVendedor = _data["idVendedor"];
            this.dsProduto = _data["dsProduto"];
            this.dsFile = _data["dsFile"];
            this.dsPathArquivoPdf = _data["dsPathArquivoPdf"];
            this.nrIdadeInicial = _data["nrIdadeInicial"];
            this.nrIdadeFinal = _data["nrIdadeFinal"];
            this.dvBagagemEspecial = _data["dvBagagemEspecial"];
            this.dvCompraProtegida = _data["dvCompraProtegida"];
            this.cpfCnpjAgencia = _data["cpfCnpjAgencia"];
            this.cpfCnpjVendedor = _data["cpfCnpjVendedor"];
            this.dvCancelamento = _data["dvCancelamento"];
            this.integradoI4Pro = _data["integradoI4Pro"];
            this.integradoCancelamento = _data["integradoCancelamento"];
        }
    }

    static fromJS(data: any): TbPropostaSegurado {
        data = typeof data === 'object' ? data : {};
        let result = new TbPropostaSegurado();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["nrVoucher"] = this.nrVoucher;
        data["nrProposta"] = this.nrProposta;
        data["nrApolice"] = this.nrApolice;
        data["nmSegurado"] = this.nmSegurado;
        data["nrCpf"] = this.nrCpf;
        data["dtNascimento"] = this.dtNascimento ? this.dtNascimento.toISOString() : <any>undefined;
        data["nmEndereco"] = this.nmEndereco;
        data["nrRuaEndereco"] = this.nrRuaEndereco;
        data["nmComplemento"] = this.nmComplemento;
        data["nmCep"] = this.nmCep;
        data["nmUf"] = this.nmUf;
        data["nmBairro"] = this.nmBairro;
        data["nmCidade"] = this.nmCidade;
        data["nrTelefoneCelular"] = this.nrTelefoneCelular;
        data["nrTelefoneResidencial"] = this.nrTelefoneResidencial;
        data["nrTelefoneComercial"] = this.nrTelefoneComercial;
        data["nmEmail"] = this.nmEmail;
        data["dvPpe"] = this.dvPpe;
        data["idParentescoPpe"] = this.idParentescoPpe;
        data["cdProduto"] = this.cdProduto;
        data["vlPremioBruto"] = this.vlPremioBruto;
        data["vlPremioLiquido"] = this.vlPremioLiquido;
        data["dhInicioExtensao"] = this.dhInicioExtensao ? this.dhInicioExtensao.toISOString() : <any>undefined;
        data["dhTerminoExtensao"] = this.dhTerminoExtensao ? this.dhTerminoExtensao.toISOString() : <any>undefined;
        data["vlExtensao"] = this.vlExtensao;
        data["dhCancelamento"] = this.dhCancelamento ? this.dhCancelamento.toISOString() : <any>undefined;
        data["dhRetornoApolice"] = this.dhRetornoApolice ? this.dhRetornoApolice.toISOString() : <any>undefined;
        data["dsUsuaIncl"] = this.dsUsuaIncl;
        data["dhInclusao"] = this.dhInclusao ? this.dhInclusao.toISOString() : <any>undefined;
        data["dsUsuaAlte"] = this.dsUsuaAlte;
        data["dhAlteracao"] = this.dhAlteracao ? this.dhAlteracao.toISOString() : <any>undefined;
        data["cdSexo"] = this.cdSexo;
        data["idPaisDestinoViagem"] = this.idPaisDestinoViagem;
        data["dsPaisDestinoViagem"] = this.dsPaisDestinoViagem;
        data["idAgencia"] = this.idAgencia;
        data["idVendedor"] = this.idVendedor;
        data["dsProduto"] = this.dsProduto;
        data["dsFile"] = this.dsFile;
        data["dsPathArquivoPdf"] = this.dsPathArquivoPdf;
        data["nrIdadeInicial"] = this.nrIdadeInicial;
        data["nrIdadeFinal"] = this.nrIdadeFinal;
        data["dvBagagemEspecial"] = this.dvBagagemEspecial;
        data["dvCompraProtegida"] = this.dvCompraProtegida;
        data["cpfCnpjAgencia"] = this.cpfCnpjAgencia;
        data["cpfCnpjVendedor"] = this.cpfCnpjVendedor;
        data["dvCancelamento"] = this.dvCancelamento;
        data["integradoI4Pro"] = this.integradoI4Pro;
        data["integradoCancelamento"] = this.integradoCancelamento;
        return data; 
    }
}

export interface ITbPropostaSegurado {
    nrVoucher?: string | undefined;
    nrProposta?: string | undefined;
    nrApolice?: string | undefined;
    nmSegurado?: string | undefined;
    nrCpf?: string | undefined;
    dtNascimento?: Date | undefined;
    nmEndereco?: string | undefined;
    nrRuaEndereco?: string | undefined;
    nmComplemento?: string | undefined;
    nmCep?: string | undefined;
    nmUf?: string | undefined;
    nmBairro?: string | undefined;
    nmCidade?: string | undefined;
    nrTelefoneCelular?: string | undefined;
    nrTelefoneResidencial?: string | undefined;
    nrTelefoneComercial?: string | undefined;
    nmEmail?: string | undefined;
    dvPpe?: string | undefined;
    idParentescoPpe?: string | undefined;
    cdProduto?: string | undefined;
    vlPremioBruto?: number | undefined;
    vlPremioLiquido?: number | undefined;
    dhInicioExtensao?: Date | undefined;
    dhTerminoExtensao?: Date | undefined;
    vlExtensao?: number | undefined;
    dhCancelamento?: Date | undefined;
    dhRetornoApolice?: Date | undefined;
    dsUsuaIncl?: string | undefined;
    dhInclusao?: Date;
    dsUsuaAlte?: string | undefined;
    dhAlteracao?: Date;
    cdSexo?: string | undefined;
    idPaisDestinoViagem?: string | undefined;
    dsPaisDestinoViagem?: string | undefined;
    idAgencia?: number | undefined;
    idVendedor?: number | undefined;
    dsProduto?: string | undefined;
    dsFile?: string | undefined;
    dsPathArquivoPdf?: string | undefined;
    nrIdadeInicial?: number | undefined;
    nrIdadeFinal?: number | undefined;
    dvBagagemEspecial?: string | undefined;
    dvCompraProtegida?: string | undefined;
    cpfCnpjAgencia?: string | undefined;
    cpfCnpjVendedor?: string | undefined;
    dvCancelamento?: string | undefined;
    integradoI4Pro?: boolean;
    integradoCancelamento?: boolean;
}

export interface FileResponse {
    data: Blob;
    status: number;
    fileName?: string;
    headers?: { [name: string]: any };
}

export class ApiException extends Error {
    message: string;
    status: number;
    response: string;
    headers: { [key: string]: any; };
    result: any;

    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {
        super();

        this.message = message;
        this.status = status;
        this.response = response;
        this.headers = headers;
        this.result = result;
    }

    protected isApiException = true;

    static isApiException(obj: any): obj is ApiException {
        return obj.isApiException === true;
    }
}

function throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): Observable<any> {
    if (result !== null && result !== undefined)
        return _observableThrow(result);
    else
        return _observableThrow(new ApiException(message, status, response, headers, null));
}

function blobToText(blob: any): Observable<string> {
    return new Observable<string>((observer: any) => {
        if (!blob) {
            observer.next("");
            observer.complete();
        } else {
            let reader = new FileReader();
            reader.onload = event => {
                observer.next((<any>event.target).result);
                observer.complete();
            };
            reader.readAsText(blob);
        }
    });
}